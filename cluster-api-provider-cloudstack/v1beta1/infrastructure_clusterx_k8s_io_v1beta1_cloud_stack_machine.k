"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CloudStackMachine:
    r"""
    CloudStackMachine is the Schema for the cloudstackmachines API

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CloudStackMachine", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1CloudStackMachineStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "CloudStackMachine" = "CloudStackMachine"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpec

    status?: InfrastructureClusterxK8sIoV1beta1CloudStackMachineStatus


schema InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpec:
    r"""
    CloudStackMachineSpec defines the desired state of CloudStackMachine

    Attributes
    ----------
    affinity : str, default is Undefined, optional
        Mutually exclusive parameter with AffinityGroupIDs.
        Defaults to `no`. Can be `pro` or `anti`. Will create an affinity group per machine set.
    affinitygroupids : [str], default is Undefined, optional
        Optional affinitygroupids for deployVirtualMachine
    cloudstackaffinityref : InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecCloudstackaffinityref, default is Undefined, optional
        cloudstackaffinityref
    details : {str:str}, default is Undefined, optional
        Optional details map for deployVirtualMachine
    diskOffering : InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecDiskOffering, default is Undefined, optional
        disk offering
    id : str, default is Undefined, optional
        ID.
    identityRef : InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecIdentityRef, default is Undefined, optional
        identity ref
    instanceID : str, default is Undefined, optional
        Instance ID. Should only be useful to modify an existing instance.
    name : str, default is Undefined, optional
        Name.
    offering : InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecOffering, default is Undefined, required
        offering
    providerID : str, default is Undefined, optional
        The CS specific unique identifier. Of the form: fmt.Sprintf("cloudstack:///%s", CS Machine ID)
    sshKey : str, default is Undefined, optional
        CloudStack ssh key to use.
    template : InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecTemplate, default is Undefined, required
        template
    zoneID : str, default is Undefined, optional
        Optionally settable Zone ID to land the machine in.
    zoneName : str, default is Undefined, optional
        Optionally settable Zone Name to land the machine in.
    """


    affinity?: str

    affinitygroupids?: [str]

    cloudstackaffinityref?: InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecCloudstackaffinityref

    details?: {str:str}

    diskOffering?: InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecDiskOffering

    id?: str

    identityRef?: InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecIdentityRef

    instanceID?: str

    name?: str

    offering: InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecOffering

    providerID?: str

    sshKey?: str

    template: InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecTemplate

    zoneID?: str

    zoneName?: str


schema InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecCloudstackaffinityref:
    r"""
    Mutually exclusive parameter with AffinityGroupIDs.
    Is a reference to a CloudStack affiniity group CRD.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecDiskOffering:
    r"""
    CloudStack disk offering to use.

    Attributes
    ----------
    customSizeInGB : int, default is Undefined, optional
        Desired disk size. Used if disk offering is customizable as indicated by the ACS field 'Custom Disk Size'.
    device : str, default is Undefined, required
        device name of data disk, for example /dev/vdb
    filesystem : str, default is Undefined, required
        filesystem used by data disk, for example, ext4, xfs
    id : str, default is Undefined, optional
        Cloudstack resource ID.
    label : str, default is Undefined, required
        label of data disk, used by mkfs as label parameter
    mountPath : str, default is Undefined, required
        mount point the data disk uses to mount. The actual partition, mkfs and mount are done by cloud-init generated by kubeadmConfig.
    name : str, default is Undefined, optional
        Cloudstack resource Name
    """


    customSizeInGB?: int

    device: str

    filesystem: str

    id?: str

    label: str

    mountPath: str

    name?: str


schema InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecIdentityRef:
    r"""
    IdentityRef is a reference to an identity to be used when reconciling this cluster

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the identity. Must be supported by the infrastructure provider
        and may be either cluster or namespace-scoped.
    name : str, default is Undefined, required
        Name of the infrastructure identity to be used.
    """


    kind: str

    name: str


    check:
        len(kind) >= 1


schema InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecOffering:
    r"""
    CloudStack compute offering.

    Attributes
    ----------
    id : str, default is Undefined, optional
        Cloudstack resource ID.
    name : str, default is Undefined, optional
        Cloudstack resource Name
    """


    id?: str

    name?: str


schema InfrastructureClusterxK8sIoV1beta1CloudStackMachineSpecTemplate:
    r"""
    CloudStack template to use.

    Attributes
    ----------
    id : str, default is Undefined, optional
        Cloudstack resource ID.
    name : str, default is Undefined, optional
        Cloudstack resource Name
    """


    id?: str

    name?: str


schema InfrastructureClusterxK8sIoV1beta1CloudStackMachineStatus:
    r"""
    Type pulled mostly from the CloudStack API.

    Attributes
    ----------
    addresses : [InfrastructureClusterxK8sIoV1beta1CloudStackMachineStatusAddressesItems0], default is Undefined, optional
        Addresses contains a CloudStack VM instance's IP addresses.
    instanceState : str, default is Undefined, optional
        InstanceState is the state of the CloudStack instance for this machine.
    instanceStateLastUpdated : str, default is Undefined, optional
        InstanceStateLastUpdated is the time the instance state was last updated.
    ready : bool, default is Undefined, required
        Ready indicates the readiness of the provider resource.
    zoneID : str, default is Undefined, optional
        Zone ID is used so that the zone can be computed once per reconcile and then propagate.
    """


    addresses?: [InfrastructureClusterxK8sIoV1beta1CloudStackMachineStatusAddressesItems0]

    instanceState?: str

    instanceStateLastUpdated?: str

    ready: bool

    zoneID?: str


schema InfrastructureClusterxK8sIoV1beta1CloudStackMachineStatusAddressesItems0:
    r"""
    NodeAddress contains information for the node's address.

    Attributes
    ----------
    address : str, default is Undefined, required
        The node address.
    $type : str, default is Undefined, required
        Node address type, one of Hostname, ExternalIP or InternalIP.
    """


    address: str

    $type: str


