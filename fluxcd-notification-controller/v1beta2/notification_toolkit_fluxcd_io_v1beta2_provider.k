"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema Provider:
    r"""
    Provider is the Schema for the providers API.

    Attributes
    ----------
    apiVersion : str, default is "notification.toolkit.fluxcd.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Provider", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NotificationToolkitFluxcdIoV1beta2ProviderSpec, default is Undefined, optional
        spec
    status : NotificationToolkitFluxcdIoV1beta2ProviderStatus, default is Undefined, optional
        status
    """


    apiVersion: "notification.toolkit.fluxcd.io/v1beta2" = "notification.toolkit.fluxcd.io/v1beta2"

    kind: "Provider" = "Provider"

    metadata?: v1.ObjectMeta

    spec?: NotificationToolkitFluxcdIoV1beta2ProviderSpec

    status?: NotificationToolkitFluxcdIoV1beta2ProviderStatus


schema NotificationToolkitFluxcdIoV1beta2ProviderSpec:
    r"""
    ProviderSpec defines the desired state of the Provider.

    Attributes
    ----------
    address : str, default is Undefined, optional
        Address specifies the endpoint, in a generic sense, to where alerts are sent.
        What kind of endpoint depends on the specific Provider type being used.
        For the generic Provider, for example, this is an HTTP/S address.
        For other Provider types this could be a project ID or a namespace.
    certSecretRef : NotificationToolkitFluxcdIoV1beta2ProviderSpecCertSecretRef, default is Undefined, optional
        cert secret ref
    channel : str, default is Undefined, optional
        Channel specifies the destination channel where events should be posted.
    interval : str, default is Undefined, optional
        Interval at which to reconcile the Provider with its Secret references.
    proxy : str, default is Undefined, optional
        Proxy the HTTP/S address of the proxy server.
    secretRef : NotificationToolkitFluxcdIoV1beta2ProviderSpecSecretRef, default is Undefined, optional
        secret ref
    suspend : bool, default is Undefined, optional
        Suspend tells the controller to suspend subsequent
        events handling for this Provider.
    timeout : str, default is Undefined, optional
        Timeout for sending alerts to the Provider.
    $type : str, default is Undefined, required
        Type specifies which Provider implementation to use.
    username : str, default is Undefined, optional
        Username specifies the name under which events are posted.
    """


    address?: str

    certSecretRef?: NotificationToolkitFluxcdIoV1beta2ProviderSpecCertSecretRef

    channel?: str

    interval?: str

    proxy?: str

    secretRef?: NotificationToolkitFluxcdIoV1beta2ProviderSpecSecretRef

    suspend?: bool

    timeout?: str

    $type: "slack" | "discord" | "msteams" | "rocket" | "generic" | "generic-hmac" | "github" | "gitlab" | "gitea" | "bitbucketserver" | "bitbucket" | "azuredevops" | "googlechat" | "googlepubsub" | "webex" | "sentry" | "azureeventhub" | "telegram" | "lark" | "matrix" | "opsgenie" | "alertmanager" | "grafana" | "githubdispatch" | "pagerduty" | "datadog"

    username?: str


    check:
        len(address) <= 2048 if address
        len(channel) <= 2048 if channel
        _regex_match(str(interval), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if interval
        len(proxy) <= 2048 if proxy
        _regex_match(str(proxy), r"^(http|https)://.*$") if proxy
        _regex_match(str(timeout), r"^([0-9]+(\.[0-9]+)?(ms|s|m))+$") if timeout
        len(username) <= 2048 if username


schema NotificationToolkitFluxcdIoV1beta2ProviderSpecCertSecretRef:
    r"""
    CertSecretRef specifies the Secret containing
    a PEM-encoded CA certificate (in the `ca.crt` key).

    Note: Support for the `caFile` key has
    been deprecated.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema NotificationToolkitFluxcdIoV1beta2ProviderSpecSecretRef:
    r"""
    SecretRef specifies the Secret containing the authentication
    credentials for this Provider.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema NotificationToolkitFluxcdIoV1beta2ProviderStatus:
    r"""
    ProviderStatus defines the observed state of the Provider.

    Attributes
    ----------
    conditions : [NotificationToolkitFluxcdIoV1beta2ProviderStatusConditionsItems0], default is Undefined, optional
        Conditions holds the conditions for the Provider.
    lastHandledReconcileAt : str, default is Undefined, optional
        LastHandledReconcileAt holds the value of the most recent
        reconcile request value, so a change of the annotation value
        can be detected.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the last reconciled generation.
    """


    conditions?: [NotificationToolkitFluxcdIoV1beta2ProviderStatusConditionsItems0]

    lastHandledReconcileAt?: str

    observedGeneration?: int


schema NotificationToolkitFluxcdIoV1beta2ProviderStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


