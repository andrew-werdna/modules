"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ServerlessService:
    r"""
    ServerlessService is a proxy for the K8s service objects containing the
    endpoints for the revision, whether those are endpoints of the activator or
    revision pods.
    See: https://knative.page.link/naxz for details.

    Attributes
    ----------
    apiVersion : str, default is "networking.internal.knative.dev/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ServerlessService", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkingInternalKnativeDevV1alpha1ServerlessServiceSpec, default is Undefined, optional
        spec
    status : NetworkingInternalKnativeDevV1alpha1ServerlessServiceStatus, default is Undefined, optional
        status
    """


    apiVersion: "networking.internal.knative.dev/v1alpha1" = "networking.internal.knative.dev/v1alpha1"

    kind: "ServerlessService" = "ServerlessService"

    metadata?: v1.ObjectMeta

    spec?: NetworkingInternalKnativeDevV1alpha1ServerlessServiceSpec

    status?: NetworkingInternalKnativeDevV1alpha1ServerlessServiceStatus


schema NetworkingInternalKnativeDevV1alpha1ServerlessServiceSpec:
    r"""
    Spec is the desired state of the ServerlessService.
    More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    mode : str, default is Undefined, optional
        Mode describes the mode of operation of the ServerlessService.
    numActivators : int, default is Undefined, optional
        NumActivators contains number of Activators that this revision should be
        assigned.
        O means â€” assign all.
    objectRef : NetworkingInternalKnativeDevV1alpha1ServerlessServiceSpecObjectRef, default is Undefined, required
        object ref
    protocolType : str, default is Undefined, required
        The application-layer protocol. Matches `RevisionProtocolType` set on the owning pa/revision.
        serving imports networking, so just use string.
    """


    mode?: str

    numActivators?: int

    objectRef: NetworkingInternalKnativeDevV1alpha1ServerlessServiceSpecObjectRef

    protocolType: str


schema NetworkingInternalKnativeDevV1alpha1ServerlessServiceSpecObjectRef:
    r"""
    ObjectRef defines the resource that this ServerlessService
    is responsible for making "serverless".

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema NetworkingInternalKnativeDevV1alpha1ServerlessServiceStatus:
    r"""
    Status is the current state of the ServerlessService.
    More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some
        additional State as well as convey more information to the user. This is
        roughly akin to Annotations on any k8s resource, just the reconciler conveying
        richer information outwards.
    conditions : [NetworkingInternalKnativeDevV1alpha1ServerlessServiceStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that
        was last processed by the controller.
    privateServiceName : str, default is Undefined, optional
        PrivateServiceName holds the name of a core K8s Service resource that
        load balances over the user service pods backing this Revision.
    serviceName : str, default is Undefined, optional
        ServiceName holds the name of a core K8s Service resource that
        load balances over the pods backing this Revision (activator or revision).
    """


    annotations?: {str:str}

    conditions?: [NetworkingInternalKnativeDevV1alpha1ServerlessServiceStatusConditionsItems0]

    observedGeneration?: int

    privateServiceName?: str

    serviceName?: str


schema NetworkingInternalKnativeDevV1alpha1ServerlessServiceStatusConditionsItems0:
    r"""
    Condition defines a readiness condition for a Knative resource.
    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another.
        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
        differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition.
        When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


