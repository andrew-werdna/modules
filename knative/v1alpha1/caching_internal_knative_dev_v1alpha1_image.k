"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Image:
    r"""
    Image is a Knative abstraction that encapsulates the interface by which Knative
    components express a desire to have a particular image cached.

    Attributes
    ----------
    apiVersion : str, default is "caching.internal.knative.dev/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Image", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CachingInternalKnativeDevV1alpha1ImageSpec, default is Undefined, optional
        spec
    status : CachingInternalKnativeDevV1alpha1ImageStatus, default is Undefined, optional
        status
    """


    apiVersion: "caching.internal.knative.dev/v1alpha1" = "caching.internal.knative.dev/v1alpha1"

    kind: "Image" = "Image"

    metadata?: v1.ObjectMeta

    spec?: CachingInternalKnativeDevV1alpha1ImageSpec

    status?: CachingInternalKnativeDevV1alpha1ImageStatus


schema CachingInternalKnativeDevV1alpha1ImageSpec:
    r"""
    Spec holds the desired state of the Image (from the client).

    Attributes
    ----------
    image : str, default is Undefined, required
        Image is the name of the container image url to cache across the cluster.
    imagePullSecrets : [CachingInternalKnativeDevV1alpha1ImageSpecImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets contains the names of the Kubernetes Secrets containing login
        information used by the Pods which will run this container.
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the Kubernetes ServiceAccount as which the Pods
        will run this container.  This is potentially used to authenticate the image pull
        if the service account has attached pull secrets.  For more information:
        https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account
    """


    image: str

    imagePullSecrets?: [CachingInternalKnativeDevV1alpha1ImageSpecImagePullSecretsItems0]

    serviceAccountName?: str


schema CachingInternalKnativeDevV1alpha1ImageSpecImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the
    referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """


    name?: str = ""


schema CachingInternalKnativeDevV1alpha1ImageStatus:
    r"""
    Status communicates the observed state of the Image (from the controller).

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some
        additional State as well as convey more information to the user. This is
        roughly akin to Annotations on any k8s resource, just the reconciler conveying
        richer information outwards.
    conditions : [CachingInternalKnativeDevV1alpha1ImageStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that
        was last processed by the controller.
    """


    annotations?: {str:str}

    conditions?: [CachingInternalKnativeDevV1alpha1ImageStatusConditionsItems0]

    observedGeneration?: int


schema CachingInternalKnativeDevV1alpha1ImageStatusConditionsItems0:
    r"""
    Condition defines a readiness condition for a Knative resource.
    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another.
        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
        differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition.
        When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


