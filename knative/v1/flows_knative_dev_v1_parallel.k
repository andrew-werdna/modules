"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Parallel:
    r"""
    Parallel defines conditional branches that will be wired in series through Channels and Subscriptions.

    Attributes
    ----------
    apiVersion : str, default is "flows.knative.dev/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Parallel", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FlowsKnativeDevV1ParallelSpec, default is Undefined, optional
        spec
    status : FlowsKnativeDevV1ParallelStatus, default is Undefined, optional
        status
    """


    apiVersion: "flows.knative.dev/v1" = "flows.knative.dev/v1"

    kind: "Parallel" = "Parallel"

    metadata?: v1.ObjectMeta

    spec?: FlowsKnativeDevV1ParallelSpec

    status?: FlowsKnativeDevV1ParallelStatus


schema FlowsKnativeDevV1ParallelSpec:
    r"""
    Spec defines the desired state of the Parallel.

    Attributes
    ----------
    branches : [FlowsKnativeDevV1ParallelSpecBranchesItems0], default is Undefined, optional
        Branches is the list of Filter/Subscribers pairs.
    channelTemplate : FlowsKnativeDevV1ParallelSpecChannelTemplate, default is Undefined, optional
        channel template
    reply : FlowsKnativeDevV1ParallelSpecReply, default is Undefined, optional
        reply
    """


    branches?: [FlowsKnativeDevV1ParallelSpecBranchesItems0]

    channelTemplate?: FlowsKnativeDevV1ParallelSpecChannelTemplate

    reply?: FlowsKnativeDevV1ParallelSpecReply


schema FlowsKnativeDevV1ParallelSpecBranchesItems0:
    r"""
    flows knative dev v1 parallel spec branches items0

    Attributes
    ----------
    delivery : FlowsKnativeDevV1ParallelSpecBranchesItems0Delivery, default is Undefined, optional
        delivery
    $filter : FlowsKnativeDevV1ParallelSpecBranchesItems0Filter, default is Undefined, optional
        filter
    reply : FlowsKnativeDevV1ParallelSpecBranchesItems0Reply, default is Undefined, optional
        reply
    subscriber : FlowsKnativeDevV1ParallelSpecBranchesItems0Subscriber, default is Undefined, optional
        subscriber
    """


    delivery?: FlowsKnativeDevV1ParallelSpecBranchesItems0Delivery

    $filter?: FlowsKnativeDevV1ParallelSpecBranchesItems0Filter

    reply?: FlowsKnativeDevV1ParallelSpecBranchesItems0Reply

    subscriber?: FlowsKnativeDevV1ParallelSpecBranchesItems0Subscriber


schema FlowsKnativeDevV1ParallelSpecBranchesItems0Delivery:
    r"""
    Delivery is the delivery specification for events to the subscriber This includes things like retries, DLQ, etc.

    Attributes
    ----------
    backoffDelay : str, default is Undefined, optional
        BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay*<numberOfRetries>. For exponential policy, backoff delay is backoffDelay*2^<numberOfRetries>.
    backoffPolicy : str, default is Undefined, optional
        BackoffPolicy is the retry backoff policy (linear, exponential).
    deadLetterSink : FlowsKnativeDevV1ParallelSpecBranchesItems0DeliveryDeadLetterSink, default is Undefined, optional
        dead letter sink
    retry : int, default is Undefined, optional
        Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.
    """


    backoffDelay?: str

    backoffPolicy?: str

    deadLetterSink?: FlowsKnativeDevV1ParallelSpecBranchesItems0DeliveryDeadLetterSink

    retry?: int


schema FlowsKnativeDevV1ParallelSpecBranchesItems0DeliveryDeadLetterSink:
    r"""
    DeadLetterSink is the sink receiving event that could not be sent to a destination.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
    ref : FlowsKnativeDevV1ParallelSpecBranchesItems0DeliveryDeadLetterSinkRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    ref?: FlowsKnativeDevV1ParallelSpecBranchesItems0DeliveryDeadLetterSinkRef

    uri?: str


schema FlowsKnativeDevV1ParallelSpecBranchesItems0DeliveryDeadLetterSinkRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema FlowsKnativeDevV1ParallelSpecBranchesItems0Filter:
    r"""
    Filter is the expression guarding the branch

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
    ref : FlowsKnativeDevV1ParallelSpecBranchesItems0FilterRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    ref?: FlowsKnativeDevV1ParallelSpecBranchesItems0FilterRef

    uri?: str


schema FlowsKnativeDevV1ParallelSpecBranchesItems0FilterRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema FlowsKnativeDevV1ParallelSpecBranchesItems0Reply:
    r"""
    Reply is a Reference to where the result of Subscriber of this case gets sent to. If not specified, sent the result to the Parallel Reply

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
    ref : FlowsKnativeDevV1ParallelSpecBranchesItems0ReplyRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    ref?: FlowsKnativeDevV1ParallelSpecBranchesItems0ReplyRef

    uri?: str


schema FlowsKnativeDevV1ParallelSpecBranchesItems0ReplyRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema FlowsKnativeDevV1ParallelSpecBranchesItems0Subscriber:
    r"""
    Subscriber receiving the event when the filter passes

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
    ref : FlowsKnativeDevV1ParallelSpecBranchesItems0SubscriberRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    ref?: FlowsKnativeDevV1ParallelSpecBranchesItems0SubscriberRef

    uri?: str


schema FlowsKnativeDevV1ParallelSpecBranchesItems0SubscriberRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema FlowsKnativeDevV1ParallelSpecChannelTemplate:
    r"""
    ChannelTemplate specifies which Channel CRD to use. If left unspecified, it is set to the default Channel CRD for the namespace (or cluster, in case there are no defaults for the namespace).

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    spec : any, default is Undefined, optional
        Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.
    """


    apiVersion?: str

    kind?: str

    spec?: any


schema FlowsKnativeDevV1ParallelSpecReply:
    r"""
    Reply is a Reference to where the result of a case Subscriber gets sent to when the case does not have a Reply

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
    ref : FlowsKnativeDevV1ParallelSpecReplyRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    ref?: FlowsKnativeDevV1ParallelSpecReplyRef

    uri?: str


schema FlowsKnativeDevV1ParallelSpecReplyRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema FlowsKnativeDevV1ParallelStatus:
    r"""
    Status represents the current state of the Parallel. This data may be out of date.

    Attributes
    ----------
    address : FlowsKnativeDevV1ParallelStatusAddress, default is Undefined, optional
        address
    addresses : [FlowsKnativeDevV1ParallelStatusAddressesItems0], default is Undefined, optional
        Parallel is Addressable. It exposes the endpoints as URIs to get events delivered into the Parallel.
    annotations : any, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
    auth : FlowsKnativeDevV1ParallelStatusAuth, default is Undefined, optional
        auth
    branchStatuses : [FlowsKnativeDevV1ParallelStatusBranchStatusesItems0], default is Undefined, optional
        BranchStatuses is an array of corresponding to branch statuses. Matches the Spec.Branches array in the order.
    conditions : [FlowsKnativeDevV1ParallelStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    ingressChannelStatus : FlowsKnativeDevV1ParallelStatusIngressChannelStatus, default is Undefined, optional
        ingress channel status
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
    policies : [FlowsKnativeDevV1ParallelStatusPoliciesItems0], default is Undefined, optional
        List of applied EventPolicies
    """


    address?: FlowsKnativeDevV1ParallelStatusAddress

    addresses?: [FlowsKnativeDevV1ParallelStatusAddressesItems0]

    annotations?: any

    auth?: FlowsKnativeDevV1ParallelStatusAuth

    branchStatuses?: [FlowsKnativeDevV1ParallelStatusBranchStatusesItems0]

    conditions?: [FlowsKnativeDevV1ParallelStatusConditionsItems0]

    ingressChannelStatus?: FlowsKnativeDevV1ParallelStatusIngressChannelStatus

    observedGeneration?: int

    policies?: [FlowsKnativeDevV1ParallelStatusPoliciesItems0]


schema FlowsKnativeDevV1ParallelStatusAddress:
    r"""
    Parallel is Addressable. It exposes the endpoint as an URI to get events delivered into the Parallel.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        c a certs
    audience : str, default is Undefined, optional
        audience
    name : str, default is Undefined, optional
        name
    url : str, default is Undefined, optional
        url
    """


    CACerts?: str

    audience?: str

    name?: str

    url?: str


schema FlowsKnativeDevV1ParallelStatusAddressesItems0:
    r"""
    flows knative dev v1 parallel status addresses items0

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        c a certs
    audience : str, default is Undefined, optional
        audience
    name : str, default is Undefined, optional
        name
    url : str, default is Undefined, optional
        url
    """


    CACerts?: str

    audience?: str

    name?: str

    url?: str


schema FlowsKnativeDevV1ParallelStatusAuth:
    r"""
    Auth provides the relevant information for OIDC authentication.

    Attributes
    ----------
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the generated service account used for this components OIDC authentication.
    serviceAccountNames : [str], default is Undefined, optional
        ServiceAccountNames is the list of names of the generated service accounts used for this components OIDC authentication.
    """


    serviceAccountName?: str

    serviceAccountNames?: [str]


schema FlowsKnativeDevV1ParallelStatusBranchStatusesItems0:
    r"""
    flows knative dev v1 parallel status branch statuses items0

    Attributes
    ----------
    filterChannelStatus : FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterChannelStatus, default is Undefined, optional
        filter channel status
    filterSubscriptionStatus : FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterSubscriptionStatus, default is Undefined, optional
        filter subscription status
    subscriberSubscriptionStatus : FlowsKnativeDevV1ParallelStatusBranchStatusesItems0SubscriberSubscriptionStatus, default is Undefined, optional
        subscriber subscription status
    """


    filterChannelStatus?: FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterChannelStatus

    filterSubscriptionStatus?: FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterSubscriptionStatus

    subscriberSubscriptionStatus?: FlowsKnativeDevV1ParallelStatusBranchStatusesItems0SubscriberSubscriptionStatus


schema FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterChannelStatus:
    r"""
    FilterChannelStatus corresponds to the filter channel status.

    Attributes
    ----------
    channel : FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterChannelStatusChannel, default is Undefined, optional
        channel
    ready : FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterChannelStatusReady, default is Undefined, optional
        ready
    """


    channel?: FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterChannelStatusChannel

    ready?: FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterChannelStatusReady


schema FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterChannelStatusChannel:
    r"""
    Channel is the reference to the underlying channel.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterChannelStatusReady:
    r"""
    ReadyCondition indicates whether the Channel is ready or not.

    Attributes
    ----------
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, optional
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, optional
        Type of condition.
    """


    message?: str

    reason?: str

    severity?: str

    status?: str

    $type?: str


schema FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterSubscriptionStatus:
    r"""
    FilterSubscriptionStatus corresponds to the filter subscription status.

    Attributes
    ----------
    ready : FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterSubscriptionStatusReady, default is Undefined, optional
        ready
    subscription : FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterSubscriptionStatusSubscription, default is Undefined, optional
        subscription
    """


    ready?: FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterSubscriptionStatusReady

    subscription?: FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterSubscriptionStatusSubscription


schema FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterSubscriptionStatusReady:
    r"""
    ReadyCondition indicates whether the Subscription is ready or not.

    Attributes
    ----------
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, optional
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, optional
        Type of condition.
    """


    message?: str

    reason?: str

    severity?: str

    status?: str

    $type?: str


schema FlowsKnativeDevV1ParallelStatusBranchStatusesItems0FilterSubscriptionStatusSubscription:
    r"""
    Subscription is the reference to the underlying Subscription.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema FlowsKnativeDevV1ParallelStatusBranchStatusesItems0SubscriberSubscriptionStatus:
    r"""
    SubscriptionStatus corresponds to the subscriber subscription status.

    Attributes
    ----------
    ready : FlowsKnativeDevV1ParallelStatusBranchStatusesItems0SubscriberSubscriptionStatusReady, default is Undefined, optional
        ready
    subscription : FlowsKnativeDevV1ParallelStatusBranchStatusesItems0SubscriberSubscriptionStatusSubscription, default is Undefined, optional
        subscription
    """


    ready?: FlowsKnativeDevV1ParallelStatusBranchStatusesItems0SubscriberSubscriptionStatusReady

    subscription?: FlowsKnativeDevV1ParallelStatusBranchStatusesItems0SubscriberSubscriptionStatusSubscription


schema FlowsKnativeDevV1ParallelStatusBranchStatusesItems0SubscriberSubscriptionStatusReady:
    r"""
    ReadyCondition indicates whether the Subscription is ready or not.

    Attributes
    ----------
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, optional
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, optional
        Type of condition.
    """


    message?: str

    reason?: str

    severity?: str

    status?: str

    $type?: str


schema FlowsKnativeDevV1ParallelStatusBranchStatusesItems0SubscriberSubscriptionStatusSubscription:
    r"""
    Subscription is the reference to the underlying Subscription.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema FlowsKnativeDevV1ParallelStatusConditionsItems0:
    r"""
    flows knative dev v1 parallel status conditions items0

    Attributes
    ----------
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, optional
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, optional
        Type of condition.
    """


    message?: str

    reason?: str

    severity?: str

    status?: str

    $type?: str


schema FlowsKnativeDevV1ParallelStatusIngressChannelStatus:
    r"""
    IngressChannelStatus corresponds to the ingress channel status.

    Attributes
    ----------
    channel : FlowsKnativeDevV1ParallelStatusIngressChannelStatusChannel, default is Undefined, optional
        channel
    ready : FlowsKnativeDevV1ParallelStatusIngressChannelStatusReady, default is Undefined, optional
        ready
    """


    channel?: FlowsKnativeDevV1ParallelStatusIngressChannelStatusChannel

    ready?: FlowsKnativeDevV1ParallelStatusIngressChannelStatusReady


schema FlowsKnativeDevV1ParallelStatusIngressChannelStatusChannel:
    r"""
    Channel is the reference to the underlying channel.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema FlowsKnativeDevV1ParallelStatusIngressChannelStatusReady:
    r"""
    ReadyCondition indicates whether the Channel is ready or not.

    Attributes
    ----------
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, optional
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, optional
        Type of condition.
    """


    message?: str

    reason?: str

    severity?: str

    status?: str

    $type?: str


schema FlowsKnativeDevV1ParallelStatusPoliciesItems0:
    r"""
    flows knative dev v1 parallel status policies items0

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        The API version of the applied EventPolicy. This indicates, which version of EventPolicy is supported by the resource.
    name : str, default is Undefined, optional
        The name of the applied EventPolicy
    """


    apiVersion?: str

    name?: str


