"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Route:
    r"""
    Route is responsible for configuring ingress over a collection of Revisions.
    Some of the Revisions a Route distributes traffic over may be specified by
    referencing the Configuration responsible for creating them; in these cases
    the Route is additionally responsible for monitoring the Configuration for
    "latest ready revision" changes, and smoothly rolling out latest revisions.
    See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#route

    Attributes
    ----------
    apiVersion : str, default is "serving.knative.dev/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Route", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ServingKnativeDevV1RouteSpec, default is Undefined, optional
        spec
    status : ServingKnativeDevV1RouteStatus, default is Undefined, optional
        status
    """


    apiVersion: "serving.knative.dev/v1" = "serving.knative.dev/v1"

    kind: "Route" = "Route"

    metadata?: v1.ObjectMeta

    spec?: ServingKnativeDevV1RouteSpec

    status?: ServingKnativeDevV1RouteStatus


schema ServingKnativeDevV1RouteSpec:
    r"""
    Spec holds the desired state of the Route (from the client).

    Attributes
    ----------
    traffic : [ServingKnativeDevV1RouteSpecTrafficItems0], default is Undefined, optional
        Traffic specifies how to distribute traffic over a collection of
        revisions and configurations.
    """


    traffic?: [ServingKnativeDevV1RouteSpecTrafficItems0]


schema ServingKnativeDevV1RouteSpecTrafficItems0:
    r"""
    TrafficTarget holds a single entry of the routing table for a Route.

    Attributes
    ----------
    configurationName : str, default is Undefined, optional
        ConfigurationName of a configuration to whose latest revision we will send
        this portion of traffic. When the "status.latestReadyRevisionName" of the
        referenced configuration changes, we will automatically migrate traffic
        from the prior "latest ready" revision to the new one.  This field is never
        set in Route's status, only its spec.  This is mutually exclusive with
        RevisionName.
    latestRevision : bool, default is Undefined, optional
        LatestRevision may be optionally provided to indicate that the latest
        ready Revision of the Configuration should be used for this traffic
        target.  When provided LatestRevision must be true if RevisionName is
        empty; it must be false when RevisionName is non-empty.
    percent : int, default is Undefined, optional
        Percent indicates that percentage based routing should be used and
        the value indicates the percent of traffic that is be routed to this
        Revision or Configuration. `0` (zero) mean no traffic, `100` means all
        traffic.
        When percentage based routing is being used the follow rules apply:
        - the sum of all percent values must equal 100
        - when not specified, the implied value for `percent` is zero for
          that particular Revision or Configuration
    revisionName : str, default is Undefined, optional
        RevisionName of a specific revision to which to send this portion of
        traffic.  This is mutually exclusive with ConfigurationName.
    tag : str, default is Undefined, optional
        Tag is optionally used to expose a dedicated url for referencing
        this target exclusively.
    url : str, default is Undefined, optional
        URL displays the URL for accessing named traffic targets. URL is displayed in
        status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and
        a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)
    """


    configurationName?: str

    latestRevision?: bool

    percent?: int

    revisionName?: str

    tag?: str

    url?: str


schema ServingKnativeDevV1RouteStatus:
    r"""
    Status communicates the observed state of the Route (from the controller).

    Attributes
    ----------
    address : ServingKnativeDevV1RouteStatusAddress, default is Undefined, optional
        address
    annotations : {str:str}, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some
        additional State as well as convey more information to the user. This is
        roughly akin to Annotations on any k8s resource, just the reconciler conveying
        richer information outwards.
    conditions : [ServingKnativeDevV1RouteStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that
        was last processed by the controller.
    traffic : [ServingKnativeDevV1RouteStatusTrafficItems0], default is Undefined, optional
        Traffic holds the configured traffic distribution.
        These entries will always contain RevisionName references.
        When ConfigurationName appears in the spec, this will hold the
        LatestReadyRevisionName that we last observed.
    url : str, default is Undefined, optional
        URL holds the url that will distribute traffic over the provided traffic targets.
        It generally has the form http[s]://{route-name}.{route-namespace}.{cluster-level-suffix}
    """


    address?: ServingKnativeDevV1RouteStatusAddress

    annotations?: {str:str}

    conditions?: [ServingKnativeDevV1RouteStatusConditionsItems0]

    observedGeneration?: int

    traffic?: [ServingKnativeDevV1RouteStatusTrafficItems0]

    url?: str


schema ServingKnativeDevV1RouteStatusAddress:
    r"""
    Address holds the information needed for a Route to be the target of an event.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        CACerts is the Certification Authority (CA) certificates in PEM format
        according to https://www.rfc-editor.org/rfc/rfc7468.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience for this address.
    name : str, default is Undefined, optional
        Name is the name of the address.
    url : str, default is Undefined, optional
        url
    """


    CACerts?: str

    audience?: str

    name?: str

    url?: str


schema ServingKnativeDevV1RouteStatusConditionsItems0:
    r"""
    Condition defines a readiness condition for a Knative resource.
    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another.
        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
        differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition.
        When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema ServingKnativeDevV1RouteStatusTrafficItems0:
    r"""
    TrafficTarget holds a single entry of the routing table for a Route.

    Attributes
    ----------
    configurationName : str, default is Undefined, optional
        ConfigurationName of a configuration to whose latest revision we will send
        this portion of traffic. When the "status.latestReadyRevisionName" of the
        referenced configuration changes, we will automatically migrate traffic
        from the prior "latest ready" revision to the new one.  This field is never
        set in Route's status, only its spec.  This is mutually exclusive with
        RevisionName.
    latestRevision : bool, default is Undefined, optional
        LatestRevision may be optionally provided to indicate that the latest
        ready Revision of the Configuration should be used for this traffic
        target.  When provided LatestRevision must be true if RevisionName is
        empty; it must be false when RevisionName is non-empty.
    percent : int, default is Undefined, optional
        Percent indicates that percentage based routing should be used and
        the value indicates the percent of traffic that is be routed to this
        Revision or Configuration. `0` (zero) mean no traffic, `100` means all
        traffic.
        When percentage based routing is being used the follow rules apply:
        - the sum of all percent values must equal 100
        - when not specified, the implied value for `percent` is zero for
          that particular Revision or Configuration
    revisionName : str, default is Undefined, optional
        RevisionName of a specific revision to which to send this portion of
        traffic.  This is mutually exclusive with ConfigurationName.
    tag : str, default is Undefined, optional
        Tag is optionally used to expose a dedicated url for referencing
        this target exclusively.
    url : str, default is Undefined, optional
        URL displays the URL for accessing named traffic targets. URL is displayed in
        status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and
        a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)
    """


    configurationName?: str

    latestRevision?: bool

    percent?: int

    revisionName?: str

    tag?: str

    url?: str


