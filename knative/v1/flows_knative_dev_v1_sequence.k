"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Sequence:
    r"""
    Sequence defines a sequence of Subscribers that will be wired in series through Channels and Subscriptions.

    Attributes
    ----------
    apiVersion : str, default is "flows.knative.dev/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Sequence", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FlowsKnativeDevV1SequenceSpec, default is Undefined, optional
        spec
    status : FlowsKnativeDevV1SequenceStatus, default is Undefined, optional
        status
    """


    apiVersion: "flows.knative.dev/v1" = "flows.knative.dev/v1"

    kind: "Sequence" = "Sequence"

    metadata?: v1.ObjectMeta

    spec?: FlowsKnativeDevV1SequenceSpec

    status?: FlowsKnativeDevV1SequenceStatus


schema FlowsKnativeDevV1SequenceSpec:
    r"""
    Spec defines the desired state of the Sequence.

    Attributes
    ----------
    channelTemplate : FlowsKnativeDevV1SequenceSpecChannelTemplate, default is Undefined, optional
        channel template
    reply : FlowsKnativeDevV1SequenceSpecReply, default is Undefined, optional
        reply
    steps : [FlowsKnativeDevV1SequenceSpecStepsItems0], default is Undefined, optional
        Steps is the list of Destinations (processors / functions) that will be called in the order provided. Each step has its own delivery options
    """


    channelTemplate?: FlowsKnativeDevV1SequenceSpecChannelTemplate

    reply?: FlowsKnativeDevV1SequenceSpecReply

    steps?: [FlowsKnativeDevV1SequenceSpecStepsItems0]


schema FlowsKnativeDevV1SequenceSpecChannelTemplate:
    r"""
    ChannelTemplate specifies which Channel CRD to use. If left unspecified, it is set to the default Channel CRD for the namespace (or cluster, in case there are no defaults for the namespace).

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    spec : any, default is Undefined, optional
        Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.
    """


    apiVersion?: str

    kind?: str

    spec?: any


schema FlowsKnativeDevV1SequenceSpecReply:
    r"""
    Reply is a Reference to where the result of the last Subscriber gets sent to.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the reply.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience of the reply. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
    ref : FlowsKnativeDevV1SequenceSpecReplyRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    ref?: FlowsKnativeDevV1SequenceSpecReplyRef

    uri?: str


schema FlowsKnativeDevV1SequenceSpecReplyRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema FlowsKnativeDevV1SequenceSpecStepsItems0:
    r"""
    flows knative dev v1 sequence spec steps items0

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.
    delivery : FlowsKnativeDevV1SequenceSpecStepsItems0Delivery, default is Undefined, optional
        delivery
    ref : FlowsKnativeDevV1SequenceSpecStepsItems0Ref, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    delivery?: FlowsKnativeDevV1SequenceSpecStepsItems0Delivery

    ref?: FlowsKnativeDevV1SequenceSpecStepsItems0Ref

    uri?: str


schema FlowsKnativeDevV1SequenceSpecStepsItems0Delivery:
    r"""
    Delivery is the delivery specification for events to the subscriber This includes things like retries, DLQ, etc.

    Attributes
    ----------
    backoffDelay : str, default is Undefined, optional
        BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay*<numberOfRetries>. For exponential policy, backoff delay is backoffDelay*2^<numberOfRetries>.
    backoffPolicy : str, default is Undefined, optional
        BackoffPolicy is the retry backoff policy (linear, exponential).
    deadLetterSink : FlowsKnativeDevV1SequenceSpecStepsItems0DeliveryDeadLetterSink, default is Undefined, optional
        dead letter sink
    retry : int, default is Undefined, optional
        Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.
    """


    backoffDelay?: str

    backoffPolicy?: str

    deadLetterSink?: FlowsKnativeDevV1SequenceSpecStepsItems0DeliveryDeadLetterSink

    retry?: int


schema FlowsKnativeDevV1SequenceSpecStepsItems0DeliveryDeadLetterSink:
    r"""
    DeadLetterSink is the sink receiving event that could not be sent to a destination.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
    ref : FlowsKnativeDevV1SequenceSpecStepsItems0DeliveryDeadLetterSinkRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    ref?: FlowsKnativeDevV1SequenceSpecStepsItems0DeliveryDeadLetterSinkRef

    uri?: str


schema FlowsKnativeDevV1SequenceSpecStepsItems0DeliveryDeadLetterSinkRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema FlowsKnativeDevV1SequenceSpecStepsItems0Ref:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema FlowsKnativeDevV1SequenceStatus:
    r"""
    Status represents the current state of the Sequence. This data may be out of date.

    Attributes
    ----------
    address : FlowsKnativeDevV1SequenceStatusAddress, default is Undefined, optional
        address
    addresses : [FlowsKnativeDevV1SequenceStatusAddressesItems0], default is Undefined, optional
        Sequence is Addressable. It exposes the endpoints as URIs to get events delivered into the Sequence.
    annotations : any, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
    auth : FlowsKnativeDevV1SequenceStatusAuth, default is Undefined, optional
        auth
    channelStatuses : [FlowsKnativeDevV1SequenceStatusChannelStatusesItems0], default is Undefined, optional
        ChannelStatuses is an array of corresponding Channel statuses. Matches the Spec.Steps array in the order.
    conditions : [FlowsKnativeDevV1SequenceStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
    policies : [FlowsKnativeDevV1SequenceStatusPoliciesItems0], default is Undefined, optional
        List of applied EventPolicies
    subscriptionStatuses : [FlowsKnativeDevV1SequenceStatusSubscriptionStatusesItems0], default is Undefined, optional
        SubscriptionStatuses is an array of corresponding Subscription statuses. Matches the Spec.Steps array in the order.
    """


    address?: FlowsKnativeDevV1SequenceStatusAddress

    addresses?: [FlowsKnativeDevV1SequenceStatusAddressesItems0]

    annotations?: any

    auth?: FlowsKnativeDevV1SequenceStatusAuth

    channelStatuses?: [FlowsKnativeDevV1SequenceStatusChannelStatusesItems0]

    conditions?: [FlowsKnativeDevV1SequenceStatusConditionsItems0]

    observedGeneration?: int

    policies?: [FlowsKnativeDevV1SequenceStatusPoliciesItems0]

    subscriptionStatuses?: [FlowsKnativeDevV1SequenceStatusSubscriptionStatusesItems0]


schema FlowsKnativeDevV1SequenceStatusAddress:
    r"""
    Sequence is Addressable. It exposes the endpoint as an URI to get events delivered into the Sequence.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        c a certs
    audience : str, default is Undefined, optional
        audience
    name : str, default is Undefined, optional
        name
    url : str, default is Undefined, optional
        url
    """


    CACerts?: str

    audience?: str

    name?: str

    url?: str


schema FlowsKnativeDevV1SequenceStatusAddressesItems0:
    r"""
    flows knative dev v1 sequence status addresses items0

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        c a certs
    audience : str, default is Undefined, optional
        audience
    name : str, default is Undefined, optional
        name
    url : str, default is Undefined, optional
        url
    """


    CACerts?: str

    audience?: str

    name?: str

    url?: str


schema FlowsKnativeDevV1SequenceStatusAuth:
    r"""
    Auth provides the relevant information for OIDC authentication.

    Attributes
    ----------
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the generated service account used for this components OIDC authentication.
    serviceAccountNames : [str], default is Undefined, optional
        ServiceAccountNames is the list of names of the generated service accounts used for this components OIDC authentication.
    """


    serviceAccountName?: str

    serviceAccountNames?: [str]


schema FlowsKnativeDevV1SequenceStatusChannelStatusesItems0:
    r"""
    flows knative dev v1 sequence status channel statuses items0

    Attributes
    ----------
    channel : FlowsKnativeDevV1SequenceStatusChannelStatusesItems0Channel, default is Undefined, optional
        channel
    ready : FlowsKnativeDevV1SequenceStatusChannelStatusesItems0Ready, default is Undefined, optional
        ready
    """


    channel?: FlowsKnativeDevV1SequenceStatusChannelStatusesItems0Channel

    ready?: FlowsKnativeDevV1SequenceStatusChannelStatusesItems0Ready


schema FlowsKnativeDevV1SequenceStatusChannelStatusesItems0Channel:
    r"""
    Channel is the reference to the underlying channel.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema FlowsKnativeDevV1SequenceStatusChannelStatusesItems0Ready:
    r"""
    ReadyCondition indicates whether the Channel is ready or not.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema FlowsKnativeDevV1SequenceStatusConditionsItems0:
    r"""
    flows knative dev v1 sequence status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema FlowsKnativeDevV1SequenceStatusPoliciesItems0:
    r"""
    flows knative dev v1 sequence status policies items0

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        The API version of the applied EventPolicy. This indicates, which version of EventPolicy is supported by the resource.
    name : str, default is Undefined, optional
        The name of the applied EventPolicy
    """


    apiVersion?: str

    name?: str


schema FlowsKnativeDevV1SequenceStatusSubscriptionStatusesItems0:
    r"""
    flows knative dev v1 sequence status subscription statuses items0

    Attributes
    ----------
    ready : FlowsKnativeDevV1SequenceStatusSubscriptionStatusesItems0Ready, default is Undefined, optional
        ready
    subscription : FlowsKnativeDevV1SequenceStatusSubscriptionStatusesItems0Subscription, default is Undefined, optional
        subscription
    """


    ready?: FlowsKnativeDevV1SequenceStatusSubscriptionStatusesItems0Ready

    subscription?: FlowsKnativeDevV1SequenceStatusSubscriptionStatusesItems0Subscription


schema FlowsKnativeDevV1SequenceStatusSubscriptionStatusesItems0Ready:
    r"""
    ReadyCondition indicates whether the Subscription is ready or not.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema FlowsKnativeDevV1SequenceStatusSubscriptionStatusesItems0Subscription:
    r"""
    Subscription is the reference to the underlying Subscription.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


