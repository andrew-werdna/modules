"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Trigger:
    r"""
    Trigger represents a request to have events delivered to a subscriber from a Broker's event pool.

    Attributes
    ----------
    apiVersion : str, default is "eventing.knative.dev/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Trigger", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EventingKnativeDevV1TriggerSpec, default is Undefined, optional
        spec
    status : EventingKnativeDevV1TriggerStatus, default is Undefined, optional
        status
    """


    apiVersion: "eventing.knative.dev/v1" = "eventing.knative.dev/v1"

    kind: "Trigger" = "Trigger"

    metadata?: v1.ObjectMeta

    spec?: EventingKnativeDevV1TriggerSpec

    status?: EventingKnativeDevV1TriggerStatus


schema EventingKnativeDevV1TriggerSpec:
    r"""
    Spec defines the desired state of the Trigger.

    Attributes
    ----------
    broker : str, default is Undefined, optional
        Broker is the broker that this trigger receives events from.
    brokerRef : EventingKnativeDevV1TriggerSpecBrokerRef, default is Undefined, optional
        broker ref
    delivery : EventingKnativeDevV1TriggerSpecDelivery, default is Undefined, optional
        delivery
    $filter : EventingKnativeDevV1TriggerSpecFilter, default is Undefined, optional
        filter
    filters : [EventingKnativeDevV1TriggerSpecFiltersItems0], default is Undefined, optional
        Filters is an array of SubscriptionsAPIFilter that evaluate to true or false. If any filter expression in the array evaluates to false, the event must not be sent to the Subscriber. If all the filter expressions in the array evaluate to true, the event must be attempted to be delivered. Absence of a filter or empty array implies a value of true. In the event of users specifying both Filter and Filters, then the latter will override the former. This will allow users to try out the effect of the new Filters field without compromising the existing attribute-based Filter and try it out on existing Trigger objects.
    subscriber : EventingKnativeDevV1TriggerSpecSubscriber, default is Undefined, optional
        subscriber
    """


    broker?: str

    brokerRef?: EventingKnativeDevV1TriggerSpecBrokerRef

    delivery?: EventingKnativeDevV1TriggerSpecDelivery

    $filter?: EventingKnativeDevV1TriggerSpecFilter

    filters?: [EventingKnativeDevV1TriggerSpecFiltersItems0]

    subscriber?: EventingKnativeDevV1TriggerSpecSubscriber


schema EventingKnativeDevV1TriggerSpecBrokerRef:
    r"""
    Reference to a broker that is enabled for cross-namespace referencing. You can specify only the following fields of the KReference: kind, apiVersion, name and namespace.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema EventingKnativeDevV1TriggerSpecDelivery:
    r"""
    Delivery contains the delivery spec for this specific trigger.

    Attributes
    ----------
    backoffDelay : str, default is Undefined, optional
        BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay*<numberOfRetries>. For exponential policy, backoff delay is backoffDelay*2^<numberOfRetries>.
    backoffPolicy : str, default is Undefined, optional
        BackoffPolicy is the retry backoff policy (linear, exponential).
    deadLetterSink : EventingKnativeDevV1TriggerSpecDeliveryDeadLetterSink, default is Undefined, optional
        dead letter sink
    format : str, default is Undefined, optional
        Format is the format used to serialize the event into a http request when delivering the event. It can be json (for structured events), binary (for binary events), or unset.
    retry : int, default is Undefined, optional
        Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.
    """


    backoffDelay?: str

    backoffPolicy?: str

    deadLetterSink?: EventingKnativeDevV1TriggerSpecDeliveryDeadLetterSink

    format?: str

    retry?: int


schema EventingKnativeDevV1TriggerSpecDeliveryDeadLetterSink:
    r"""
    DeadLetterSink is the sink receiving event that could not be sent to a destination.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
    ref : EventingKnativeDevV1TriggerSpecDeliveryDeadLetterSinkRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    ref?: EventingKnativeDevV1TriggerSpecDeliveryDeadLetterSinkRef

    uri?: str


schema EventingKnativeDevV1TriggerSpecDeliveryDeadLetterSinkRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema EventingKnativeDevV1TriggerSpecFilter:
    r"""
    Filter is the filter to apply against all events from the Broker. Only events that pass this filter will be sent to the Subscriber. If not specified, will default to allowing all events.

    Attributes
    ----------
    attributes : any, default is Undefined, optional
        Attributes filters events by exact match on event context attributes. Each key in the map is compared with the equivalent key in the event context. An event passes the filter if all values are equal to the specified values.  Nested context attributes are not supported as keys. Only string values are supported.
    """


    attributes?: any


schema EventingKnativeDevV1TriggerSpecFiltersItems0:
    r"""
    eventing knative dev v1 trigger spec filters items0

    Attributes
    ----------
    $all : [any], default is Undefined, optional
        All evaluates to true if all the nested expressions evaluate to true. It must contain at least one filter expression.
    any : [any], default is Undefined, optional
        Any evaluates to true if at least one of the nested expressions evaluates to true. It must contain at least one filter expression.
    cesql : str, default is Undefined, optional
        CESQL is a CloudEvents SQL expression that will be evaluated to true or false against each CloudEvent.
    exact : any, default is Undefined, optional
        Exact evaluates to true if the values of the matching CloudEvents attributes all exactly match with the associated value String specified (case-sensitive). The keys are the names of the CloudEvents attributes to be matched, and their values are the String values to use in the comparison. The attribute name and value specified in the filter express must not be empty strings.
    $not : any, default is Undefined, optional
        Not evaluates to true if the nested expression evaluates to false.
    prefix : any, default is Undefined, optional
        Prefix evaluates to true if the values of the matching CloudEvents attributes all start with the associated value String specified (case sensitive). The keys are the names of the CloudEvents attributes to be matched, and their values are the String values to use in the comparison. The attribute name and value specified in the filter express must not be empty strings.
    suffix : any, default is Undefined, optional
        Suffix evaluates to true if the values of the matching CloudEvents attributes all end with the associated value String specified (case sensitive). The keys are the names of the CloudEvents attributes to be matched, and their values are the String values to use in the comparison. The attribute name and value specified in the filter express must not be empty strings.
    """


    $all?: [any]

    any?: [any]

    cesql?: str

    exact?: any

    $not?: any

    prefix?: any

    suffix?: any


schema EventingKnativeDevV1TriggerSpecSubscriber:
    r"""
    Subscriber is the addressable that receives events from the Broker that pass the Filter. It is required.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
    ref : EventingKnativeDevV1TriggerSpecSubscriberRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    ref?: EventingKnativeDevV1TriggerSpecSubscriberRef

    uri?: str


schema EventingKnativeDevV1TriggerSpecSubscriberRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema EventingKnativeDevV1TriggerStatus:
    r"""
    Status represents the current state of the Trigger. This data may be out of date.

    Attributes
    ----------
    annotations : any, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
    auth : EventingKnativeDevV1TriggerStatusAuth, default is Undefined, optional
        auth
    conditions : [EventingKnativeDevV1TriggerStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    deadLetterSinkAudience : str, default is Undefined, optional
        OIDC audience of the dead letter sink.
    deadLetterSinkCACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.
    deadLetterSinkUri : str, default is Undefined, optional
        DeadLetterSinkURI is the resolved URI of the dead letter sink for this Trigger, in case there is none this will fallback to it's Broker status DeadLetterSinkURI.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
    subscriberAudience : str, default is Undefined, optional
        OIDC audience of the subscriber.
    subscriberCACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.
    subscriberUri : str, default is Undefined, optional
        SubscriberURI is the resolved URI of the receiver for this Trigger.
    """


    annotations?: any

    auth?: EventingKnativeDevV1TriggerStatusAuth

    conditions?: [EventingKnativeDevV1TriggerStatusConditionsItems0]

    deadLetterSinkAudience?: str

    deadLetterSinkCACerts?: str

    deadLetterSinkUri?: str

    observedGeneration?: int

    subscriberAudience?: str

    subscriberCACerts?: str

    subscriberUri?: str


schema EventingKnativeDevV1TriggerStatusAuth:
    r"""
    Auth provides the relevant information for OIDC authentication.

    Attributes
    ----------
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the generated service account used for this components OIDC authentication.
    serviceAccountNames : [str], default is Undefined, optional
        ServiceAccountNames is the list of names of the generated service accounts used for this components OIDC authentication.
    """


    serviceAccountName?: str

    serviceAccountNames?: [str]


schema EventingKnativeDevV1TriggerStatusConditionsItems0:
    r"""
    eventing knative dev v1 trigger status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


