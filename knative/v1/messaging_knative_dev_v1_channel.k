"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Channel:
    r"""
    Channel represents a generic Channel. It is normally used when we want a Channel, but do not need a specific Channel implementation.

    Attributes
    ----------
    apiVersion : str, default is "messaging.knative.dev/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Channel", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MessagingKnativeDevV1ChannelSpec, default is Undefined, optional
        spec
    status : MessagingKnativeDevV1ChannelStatus, default is Undefined, optional
        status
    """


    apiVersion: "messaging.knative.dev/v1" = "messaging.knative.dev/v1"

    kind: "Channel" = "Channel"

    metadata?: v1.ObjectMeta

    spec?: MessagingKnativeDevV1ChannelSpec

    status?: MessagingKnativeDevV1ChannelStatus


schema MessagingKnativeDevV1ChannelSpec:
    r"""
    Spec defines the desired state of the Channel.

    Attributes
    ----------
    channelTemplate : MessagingKnativeDevV1ChannelSpecChannelTemplate, default is Undefined, optional
        channel template
    delivery : MessagingKnativeDevV1ChannelSpecDelivery, default is Undefined, optional
        delivery
    subscribers : [MessagingKnativeDevV1ChannelSpecSubscribersItems0], default is Undefined, optional
        This is the list of subscriptions for this subscribable.
    """


    channelTemplate?: MessagingKnativeDevV1ChannelSpecChannelTemplate

    delivery?: MessagingKnativeDevV1ChannelSpecDelivery

    subscribers?: [MessagingKnativeDevV1ChannelSpecSubscribersItems0]


schema MessagingKnativeDevV1ChannelSpecChannelTemplate:
    r"""
    ChannelTemplate specifies which Channel CRD to use to create the CRD Channel backing this Channel. This is immutable after creation. Normally this is set by the Channel defaulter, not directly by the user.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    spec : any, default is Undefined, optional
        Spec defines the Spec to use for each channel created. Passed in verbatim to the Channel CRD as Spec section.
    """


    apiVersion?: str

    kind?: str

    spec?: any


schema MessagingKnativeDevV1ChannelSpecDelivery:
    r"""
    DeliverySpec contains the default delivery spec for each subscription to this Channelable. Each subscription delivery spec, if any, overrides this global delivery spec.

    Attributes
    ----------
    backoffDelay : str, default is Undefined, optional
        BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay*<numberOfRetries>. For exponential policy, backoff delay is backoffDelay*2^<numberOfRetries>.
    backoffPolicy : str, default is Undefined, optional
        BackoffPolicy is the retry backoff policy (linear, exponential).
    deadLetterSink : MessagingKnativeDevV1ChannelSpecDeliveryDeadLetterSink, default is Undefined, optional
        dead letter sink
    retry : int, default is Undefined, optional
        Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.
    """


    backoffDelay?: str

    backoffPolicy?: str

    deadLetterSink?: MessagingKnativeDevV1ChannelSpecDeliveryDeadLetterSink

    retry?: int


schema MessagingKnativeDevV1ChannelSpecDeliveryDeadLetterSink:
    r"""
    DeadLetterSink is the sink receiving event that could not be sent to a destination.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
    ref : MessagingKnativeDevV1ChannelSpecDeliveryDeadLetterSinkRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    CACerts?: str

    audience?: str

    ref?: MessagingKnativeDevV1ChannelSpecDeliveryDeadLetterSinkRef

    uri?: str


schema MessagingKnativeDevV1ChannelSpecDeliveryDeadLetterSinkRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema MessagingKnativeDevV1ChannelSpecSubscribersItems0:
    r"""
    messaging knative dev v1 channel spec subscribers items0

    Attributes
    ----------
    auth : MessagingKnativeDevV1ChannelSpecSubscribersItems0Auth, default is Undefined, optional
        auth
    delivery : MessagingKnativeDevV1ChannelSpecSubscribersItems0Delivery, default is Undefined, optional
        delivery
    generation : int, default is Undefined, optional
        Generation of the origin of the subscriber with uid:UID.
    name : str, default is Undefined, optional
        The name of the subscription
    replyAudience : str, default is Undefined, optional
        ReplyAudience is the OIDC audience for the replyUri.
    replyCACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.
    replyUri : str, default is Undefined, optional
        ReplyURI is the endpoint for the reply
    subscriberAudience : str, default is Undefined, optional
        SubscriberAudience is the OIDC audience for the subscriberUri.
    subscriberCACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.
    subscriberUri : str, default is Undefined, optional
        SubscriberURI is the endpoint for the subscriber
    uid : str, default is Undefined, optional
        UID is used to understand the origin of the subscriber.
    """


    auth?: MessagingKnativeDevV1ChannelSpecSubscribersItems0Auth

    delivery?: MessagingKnativeDevV1ChannelSpecSubscribersItems0Delivery

    generation?: int

    name?: str

    replyAudience?: str

    replyCACerts?: str

    replyUri?: str

    subscriberAudience?: str

    subscriberCACerts?: str

    subscriberUri?: str

    uid?: str


schema MessagingKnativeDevV1ChannelSpecSubscribersItems0Auth:
    r"""
    Auth provides the relevant information for OIDC authentication.

    Attributes
    ----------
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the generated service account used for this components OIDC authentication.
    serviceAccountNames : [str], default is Undefined, optional
        ServiceAccountNames is the list of names of the generated service accounts used for this components OIDC authentication.
    """


    serviceAccountName?: str

    serviceAccountNames?: [str]


schema MessagingKnativeDevV1ChannelSpecSubscribersItems0Delivery:
    r"""
    DeliverySpec contains options controlling the event delivery

    Attributes
    ----------
    backoffDelay : str, default is Undefined, optional
        BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay*<numberOfRetries>. For exponential policy, backoff delay is backoffDelay*2^<numberOfRetries>.
    backoffPolicy : str, default is Undefined, optional
        BackoffPolicy is the retry backoff policy (linear, exponential).
    deadLetterSink : MessagingKnativeDevV1ChannelSpecSubscribersItems0DeliveryDeadLetterSink, default is Undefined, optional
        dead letter sink
    retry : int, default is Undefined, optional
        Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.
    """


    backoffDelay?: str

    backoffPolicy?: str

    deadLetterSink?: MessagingKnativeDevV1ChannelSpecSubscribersItems0DeliveryDeadLetterSink

    retry?: int


schema MessagingKnativeDevV1ChannelSpecSubscribersItems0DeliveryDeadLetterSink:
    r"""
    DeadLetterSink is the sink receiving event that could not be sent to a destination.

    Attributes
    ----------
    ref : MessagingKnativeDevV1ChannelSpecSubscribersItems0DeliveryDeadLetterSinkRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    ref?: MessagingKnativeDevV1ChannelSpecSubscribersItems0DeliveryDeadLetterSinkRef

    uri?: str


schema MessagingKnativeDevV1ChannelSpecSubscribersItems0DeliveryDeadLetterSinkRef:
    r"""
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema MessagingKnativeDevV1ChannelStatus:
    r"""
    Status represents the current state of the Channel. This data may be out of date.

    Attributes
    ----------
    address : MessagingKnativeDevV1ChannelStatusAddress, default is Undefined, optional
        address
    addresses : [MessagingKnativeDevV1ChannelStatusAddressesItems0], default is Undefined, optional
        Channel is Addressable. It exposes the endpoints as URIs to get events delivered into the Channel mesh.
    annotations : any, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
    channel : MessagingKnativeDevV1ChannelStatusChannel, default is Undefined, optional
        channel
    conditions : [MessagingKnativeDevV1ChannelStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    deadLetterChannel : MessagingKnativeDevV1ChannelStatusDeadLetterChannel, default is Undefined, optional
        dead letter channel
    deadLetterSinkAudience : str, default is Undefined, optional
        OIDC audience of the dead letter sink.
    deadLetterSinkCACerts : str, default is Undefined, optional
        Certification Authority (CA) certificates in PEM format according to https://www.rfc-editor.org/rfc/rfc7468.
    deadLetterSinkUri : str, default is Undefined, optional
        DeadLetterSinkURI is the resolved URI of the dead letter sink that will be used as a fallback when not specified by Triggers.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
    policies : [MessagingKnativeDevV1ChannelStatusPoliciesItems0], default is Undefined, optional
        List of applied EventPolicies
    subscribers : [MessagingKnativeDevV1ChannelStatusSubscribersItems0], default is Undefined, optional
        This is the list of subscription's statuses for this channel.
    """


    address?: MessagingKnativeDevV1ChannelStatusAddress

    addresses?: [MessagingKnativeDevV1ChannelStatusAddressesItems0]

    annotations?: any

    channel?: MessagingKnativeDevV1ChannelStatusChannel

    conditions?: [MessagingKnativeDevV1ChannelStatusConditionsItems0]

    deadLetterChannel?: MessagingKnativeDevV1ChannelStatusDeadLetterChannel

    deadLetterSinkAudience?: str

    deadLetterSinkCACerts?: str

    deadLetterSinkUri?: str

    observedGeneration?: int

    policies?: [MessagingKnativeDevV1ChannelStatusPoliciesItems0]

    subscribers?: [MessagingKnativeDevV1ChannelStatusSubscribersItems0]


schema MessagingKnativeDevV1ChannelStatusAddress:
    r"""
    Channel is Addressable. It exposes the endpoint as an URI to get events delivered into the Channel mesh.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        c a certs
    audience : str, default is Undefined, optional
        audience
    name : str, default is Undefined, optional
        name
    url : str, default is Undefined, optional
        url
    """


    CACerts?: str

    audience?: str

    name?: str

    url?: str


schema MessagingKnativeDevV1ChannelStatusAddressesItems0:
    r"""
    messaging knative dev v1 channel status addresses items0

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        c a certs
    audience : str, default is Undefined, optional
        audience
    name : str, default is Undefined, optional
        name
    url : str, default is Undefined, optional
        url
    """


    CACerts?: str

    audience?: str

    name?: str

    url?: str


schema MessagingKnativeDevV1ChannelStatusChannel:
    r"""
    Channel is an KReference to the Channel CRD backing this Channel.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema MessagingKnativeDevV1ChannelStatusConditionsItems0:
    r"""
    messaging knative dev v1 channel status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema MessagingKnativeDevV1ChannelStatusDeadLetterChannel:
    r"""
    DeadLetterChannel is a KReference and is set by the channel when it supports native error handling via a channel Failed messages are delivered here.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema MessagingKnativeDevV1ChannelStatusPoliciesItems0:
    r"""
    messaging knative dev v1 channel status policies items0

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        The API version of the applied EventPolicy. This indicates, which version of EventPolicy is supported by the resource.
    name : str, default is Undefined, optional
        The name of the applied EventPolicy
    """


    apiVersion?: str

    name?: str


schema MessagingKnativeDevV1ChannelStatusSubscribersItems0:
    r"""
    messaging knative dev v1 channel status subscribers items0

    Attributes
    ----------
    auth : MessagingKnativeDevV1ChannelStatusSubscribersItems0Auth, default is Undefined, optional
        auth
    message : str, default is Undefined, optional
        A human readable message indicating details of Ready status.
    observedGeneration : int, default is Undefined, optional
        Generation of the origin of the subscriber with uid:UID.
    ready : str, default is Undefined, optional
        Status of the subscriber.
    uid : str, default is Undefined, optional
        UID is used to understand the origin of the subscriber.
    """


    auth?: MessagingKnativeDevV1ChannelStatusSubscribersItems0Auth

    message?: str

    observedGeneration?: int

    ready?: str

    uid?: str


schema MessagingKnativeDevV1ChannelStatusSubscribersItems0Auth:
    r"""
    Auth provides the relevant information for OIDC authentication.

    Attributes
    ----------
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the generated service account used for this components OIDC authentication.
    serviceAccountNames : [str], default is Undefined, optional
        ServiceAccountNames is the list of names of the generated service accounts used for this components OIDC authentication.
    """


    serviceAccountName?: str

    serviceAccountNames?: [str]


