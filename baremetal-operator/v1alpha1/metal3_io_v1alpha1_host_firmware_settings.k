"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema HostFirmwareSettings:
    r"""
    HostFirmwareSettings is the Schema for the hostfirmwaresettings API.

    Attributes
    ----------
    apiVersion : str, default is "metal3.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "HostFirmwareSettings", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Metal3IoV1alpha1HostFirmwareSettingsSpec, default is Undefined, optional
        spec
    status : Metal3IoV1alpha1HostFirmwareSettingsStatus, default is Undefined, optional
        status
    """


    apiVersion: "metal3.io/v1alpha1" = "metal3.io/v1alpha1"

    kind: "HostFirmwareSettings" = "HostFirmwareSettings"

    metadata?: v1.ObjectMeta

    spec?: Metal3IoV1alpha1HostFirmwareSettingsSpec

    status?: Metal3IoV1alpha1HostFirmwareSettingsStatus


schema Metal3IoV1alpha1HostFirmwareSettingsSpec:
    r"""
    HostFirmwareSettingsSpec defines the desired state of HostFirmwareSettings.

    Attributes
    ----------
    settings : {str:int | str}, default is Undefined, required
        Settings are the desired firmware settings stored as name/value pairs.
    """


    settings: {str:int | str}


schema Metal3IoV1alpha1HostFirmwareSettingsStatus:
    r"""
    HostFirmwareSettingsStatus defines the observed state of HostFirmwareSettings.

    Attributes
    ----------
    conditions : [Metal3IoV1alpha1HostFirmwareSettingsStatusConditionsItems0], default is Undefined, optional
        Track whether settings stored in the spec are valid based on the schema
    lastUpdated : str, default is Undefined, optional
        Time that the status was last updated
    $schema : Metal3IoV1alpha1HostFirmwareSettingsStatusSchema, default is Undefined, optional
        schema
    settings : {str:str}, default is Undefined, required
        Settings are the firmware settings stored as name/value pairs
    """


    conditions?: [Metal3IoV1alpha1HostFirmwareSettingsStatusConditionsItems0]

    lastUpdated?: str

    $schema?: Metal3IoV1alpha1HostFirmwareSettingsStatusSchema

    settings: {str:str}


schema Metal3IoV1alpha1HostFirmwareSettingsStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


schema Metal3IoV1alpha1HostFirmwareSettingsStatusSchema:
    r"""
    FirmwareSchema is a reference to the Schema used to describe each
    FirmwareSetting. By default, this will be a Schema in the same
    Namespace as the settings but it can be overwritten in the Spec

    Attributes
    ----------
    name : str, default is Undefined, required
        `name` is the reference to the schema.
    namespace : str, default is Undefined, required
        `namespace` is the namespace of the where the schema is stored.
    """


    name: str

    namespace: str


