"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema BareMetalHost:
    r"""
    BareMetalHost is the Schema for the baremetalhosts API

    Attributes
    ----------
    apiVersion : str, default is "metal3.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BareMetalHost", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Metal3IoV1alpha1BareMetalHostSpec, default is Undefined, optional
        spec
    status : Metal3IoV1alpha1BareMetalHostStatus, default is Undefined, optional
        status
    """


    apiVersion: "metal3.io/v1alpha1" = "metal3.io/v1alpha1"

    kind: "BareMetalHost" = "BareMetalHost"

    metadata?: v1.ObjectMeta

    spec?: Metal3IoV1alpha1BareMetalHostSpec

    status?: Metal3IoV1alpha1BareMetalHostStatus


schema Metal3IoV1alpha1BareMetalHostSpec:
    r"""
    BareMetalHostSpec defines the desired state of BareMetalHost.

    Attributes
    ----------
    architecture : str, default is Undefined, optional
        CPU architecture of the host, e.g. "x86_64" or "aarch64". If unset,
        eventually populated by inspection.
    automatedCleaningMode : str, default is "metadata", optional
        When set to disabled, automated cleaning will be skipped
        during provisioning and deprovisioning.
    bmc : Metal3IoV1alpha1BareMetalHostSpecBmc, default is Undefined, optional
        bmc
    bootMACAddress : str, default is Undefined, optional
        The MAC address of the NIC used for provisioning the host. In case
        of network boot, this is the MAC address of the PXE booting
        interface. The MAC address of the BMC must never be used here!
    bootMode : str, default is Undefined, optional
        Select the method of initializing the hardware during boot.
        Defaults to UEFI. Legacy boot should only be used for hardware that
        does not support UEFI correctly. Set to UEFISecureBoot to turn
        secure boot on automatically after provisioning.
    consumerRef : Metal3IoV1alpha1BareMetalHostSpecConsumerRef, default is Undefined, optional
        consumer ref
    customDeploy : Metal3IoV1alpha1BareMetalHostSpecCustomDeploy, default is Undefined, optional
        custom deploy
    description : str, default is Undefined, optional
        Description is a human-entered text used to help identify the host.
    disablePowerOff : bool, default is Undefined, optional
        When set to true, power off of the node will be disabled,
        instead, a reboot will be used in place of power on/off
    externallyProvisioned : bool, default is Undefined, optional
        ExternallyProvisioned means something else has provisioned the
        image running on the host, and the operator should only manage
        the power status. This field is used for integration with already
        provisioned hosts and when pivoting hosts between clusters. If
        unsure, leave this field as false.
    firmware : Metal3IoV1alpha1BareMetalHostSpecFirmware, default is Undefined, optional
        firmware
    hardwareProfile : str, default is Undefined, optional
        What is the name of the hardware profile for this host?
        Hardware profiles are deprecated and should not be used.
        Use the separate fields Architecture and RootDeviceHints instead.
        Set to "empty" to prepare for the future version of the API
        without hardware profiles.
    image : Metal3IoV1alpha1BareMetalHostSpecImage, default is Undefined, optional
        image
    metaData : Metal3IoV1alpha1BareMetalHostSpecMetaData, default is Undefined, optional
        meta data
    networkData : Metal3IoV1alpha1BareMetalHostSpecNetworkData, default is Undefined, optional
        network data
    online : bool, default is Undefined, required
        Should the host be powered on? If the host is currently in a stable
        state (e.g. provisioned), its power state will be forced to match
        this value.
    preprovisioningNetworkDataName : str, default is Undefined, optional
        PreprovisioningNetworkDataName is the name of the Secret in the
        local namespace containing network configuration which is passed to
        the preprovisioning image, and to the Config Drive if not overridden
        by specifying NetworkData.
    raid : Metal3IoV1alpha1BareMetalHostSpecRaid, default is Undefined, optional
        raid
    rootDeviceHints : Metal3IoV1alpha1BareMetalHostSpecRootDeviceHints, default is Undefined, optional
        root device hints
    taints : [Metal3IoV1alpha1BareMetalHostSpecTaintsItems0], default is Undefined, optional
        Taints is the full, authoritative list of taints to apply to
        the corresponding Machine. This list will overwrite any
        modifications made to the Machine on an ongoing basis.
    userData : Metal3IoV1alpha1BareMetalHostSpecUserData, default is Undefined, optional
        user data
    """


    architecture?: str

    automatedCleaningMode?: "metadata" | "disabled" = "metadata"

    bmc?: Metal3IoV1alpha1BareMetalHostSpecBmc

    bootMACAddress?: str

    bootMode?: "UEFI" | "UEFISecureBoot" | "legacy"

    consumerRef?: Metal3IoV1alpha1BareMetalHostSpecConsumerRef

    customDeploy?: Metal3IoV1alpha1BareMetalHostSpecCustomDeploy

    description?: str

    disablePowerOff?: bool

    externallyProvisioned?: bool

    firmware?: Metal3IoV1alpha1BareMetalHostSpecFirmware

    hardwareProfile?: str

    image?: Metal3IoV1alpha1BareMetalHostSpecImage

    metaData?: Metal3IoV1alpha1BareMetalHostSpecMetaData

    networkData?: Metal3IoV1alpha1BareMetalHostSpecNetworkData

    online: bool

    preprovisioningNetworkDataName?: str

    raid?: Metal3IoV1alpha1BareMetalHostSpecRaid

    rootDeviceHints?: Metal3IoV1alpha1BareMetalHostSpecRootDeviceHints

    taints?: [Metal3IoV1alpha1BareMetalHostSpecTaintsItems0]

    userData?: Metal3IoV1alpha1BareMetalHostSpecUserData


    check:
        _regex_match(str(bootMACAddress), r"[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}") if bootMACAddress


schema Metal3IoV1alpha1BareMetalHostSpecBmc:
    r"""
    How do we connect to the BMC (Baseboard Management Controller) on
    the host?

    Attributes
    ----------
    address : str, default is Undefined, required
        Address holds the URL for accessing the controller on the network.
        The scheme part designates the driver to use with the host.
    credentialsName : str, default is Undefined, required
        The name of the secret containing the BMC credentials (requires
        keys "username" and "password").
    disableCertificateVerification : bool, default is Undefined, optional
        DisableCertificateVerification disables verification of server
        certificates when using HTTPS to connect to the BMC. This is
        required when the server certificate is self-signed, but is
        insecure because it allows a man-in-the-middle to intercept the
        connection.
    """


    address: str

    credentialsName: str

    disableCertificateVerification?: bool


schema Metal3IoV1alpha1BareMetalHostSpecConsumerRef:
    r"""
    ConsumerRef can be used to store information about something
    that is using a host. When it is not empty, the host is
    considered "in use". The common use case is a link to a Machine
    resource when the host is used by Cluster API.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema Metal3IoV1alpha1BareMetalHostSpecCustomDeploy:
    r"""
    A custom deploy procedure. This is an advanced feature that allows
    using a custom deploy step provided by a site-specific deployment
    ramdisk. Most users will want to use "image" instead. Setting this
    field triggers provisioning.

    Attributes
    ----------
    method : str, default is Undefined, required
        Custom deploy method name.
        This name is specific to the deploy ramdisk used. If you don't have
        a custom deploy ramdisk, you shouldn't use CustomDeploy.
    """


    method: str


schema Metal3IoV1alpha1BareMetalHostSpecFirmware:
    r"""
    Firmware (BIOS) configuration for bare metal server. If set, the
    requested settings will be applied before the host is provisioned.
    Only some vendor drivers support this field. An alternative is to
    use HostFirmwareSettings resources that allow changing arbitrary
    values and support the generic Redfish-based drivers.

    Attributes
    ----------
    simultaneousMultithreadingEnabled : bool, default is Undefined, optional
        Allows a single physical processor core to appear as several logical processors.
    sriovEnabled : bool, default is Undefined, optional
        SR-IOV support enables a hypervisor to create virtual instances of a PCI-express device, potentially increasing performance.
    virtualizationEnabled : bool, default is Undefined, optional
        Supports the virtualization of platform hardware.
    """


    simultaneousMultithreadingEnabled?: True | False

    sriovEnabled?: True | False

    virtualizationEnabled?: True | False


schema Metal3IoV1alpha1BareMetalHostSpecImage:
    r"""
    Image holds the details of the image to be provisioned. Populating
    the image will cause the host to start provisioning.

    Attributes
    ----------
    checksum : str, default is Undefined, optional
        Checksum is the checksum for the image. Required for all formats
        except for "live-iso".
    checksumType : str, default is Undefined, optional
        ChecksumType is the checksum algorithm for the image, e.g md5, sha256 or sha512.
        The special value "auto" can be used to detect the algorithm from the checksum.
        If missing, MD5 is used. If in doubt, use "auto".
    format : str, default is Undefined, optional
        Format contains the format of the image (raw, qcow2, ...).
        When set to "live-iso", an ISO 9660 image referenced by the url will
        be live-booted and not deployed to disk.
    url : str, default is Undefined, required
        URL is a location of an image to deploy.
    """


    checksum?: str

    checksumType?: "md5" | "sha256" | "sha512" | "auto"

    format?: "raw" | "qcow2" | "vdi" | "vmdk" | "live-iso"

    url: str


schema Metal3IoV1alpha1BareMetalHostSpecMetaData:
    r"""
    MetaData holds the reference to the Secret containing host metadata
    which is passed to the Config Drive. By default, metadata will be
    generated for the host, so most users do not need to set this field.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name is unique within a namespace to reference a secret resource.
    namespace : str, default is Undefined, optional
        namespace defines the space within which the secret name must be unique.
    """


    name?: str

    namespace?: str


schema Metal3IoV1alpha1BareMetalHostSpecNetworkData:
    r"""
    NetworkData holds the reference to the Secret containing network
    configuration which is passed to the Config Drive and interpreted
    by the first boot software such as cloud-init.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name is unique within a namespace to reference a secret resource.
    namespace : str, default is Undefined, optional
        namespace defines the space within which the secret name must be unique.
    """


    name?: str

    namespace?: str


schema Metal3IoV1alpha1BareMetalHostSpecRaid:
    r"""
    RAID configuration for bare metal server. If set, the RAID settings
    will be applied before the host is provisioned. If not, the current
    settings will not be modified. Only one of the sub-fields
    hardwareRAIDVolumes and softwareRAIDVolumes can be set at the same
    time.

    Attributes
    ----------
    hardwareRAIDVolumes : [Metal3IoV1alpha1BareMetalHostSpecRaidHardwareRAIDVolumesItems0], default is Undefined, optional
        The list of logical disks for hardware RAID, if rootDeviceHints isn't used, first volume is root volume.
        You can set the value of this field to `[]` to clear all the hardware RAID configurations.
    softwareRAIDVolumes : [Metal3IoV1alpha1BareMetalHostSpecRaidSoftwareRAIDVolumesItems0], default is Undefined, optional
        The list of logical disks for software RAID, if rootDeviceHints isn't used, first volume is root volume.
        If HardwareRAIDVolumes is set this item will be invalid.
        The number of created Software RAID devices must be 1 or 2.
        If there is only one Software RAID device, it has to be a RAID-1.
        If there are two, the first one has to be a RAID-1, while the RAID level for the second one can be 0, 1, or 1+0.
        As the first RAID device will be the deployment device,
        enforcing a RAID-1 reduces the risk of ending up with a non-booting host in case of a disk failure.
        Software RAID will always be deleted.
    """


    hardwareRAIDVolumes?: [Metal3IoV1alpha1BareMetalHostSpecRaidHardwareRAIDVolumesItems0]

    softwareRAIDVolumes?: [Metal3IoV1alpha1BareMetalHostSpecRaidSoftwareRAIDVolumesItems0]


    check:
        len(softwareRAIDVolumes) <= 2 if softwareRAIDVolumes


schema Metal3IoV1alpha1BareMetalHostSpecRaidHardwareRAIDVolumesItems0:
    r"""
    HardwareRAIDVolume defines the desired configuration of volume in hardware RAID.

    Attributes
    ----------
    controller : str, default is Undefined, optional
        The name of the RAID controller to use.
    level : str, default is Undefined, required
        RAID level for the logical disk. The following levels are supported:
        0, 1, 2, 5, 6, 1+0, 5+0, 6+0 (drivers may support only some of them).
    name : str, default is Undefined, optional
        Name of the volume. Should be unique within the Node. If not
        specified, the name will be auto-generated.
    numberOfPhysicalDisks : int, default is Undefined, optional
        Integer, number of physical disks to use for the logical disk.
        Defaults to minimum number of disks required for the particular RAID
        level.
    physicalDisks : [str], default is Undefined, optional
        Optional list of physical disk names to be used for the hardware RAID volumes. The disk names are interpreted
        by the hardware RAID controller, and the format is hardware specific.
    rotational : bool, default is Undefined, optional
        Select disks with only rotational (if set to true) or solid-state
        (if set to false) storage. By default, any disks can be picked.
    sizeGibibytes : int, default is Undefined, optional
        Size of the logical disk to be created in GiB. If unspecified or
        set be 0, the maximum capacity of disk will be used for logical
        disk.
    """


    controller?: str

    level: "0" | "1" | "2" | "5" | "6" | "1+0" | "5+0" | "6+0"

    name?: str

    numberOfPhysicalDisks?: int

    physicalDisks?: [str]

    rotational?: bool

    sizeGibibytes?: int


    check:
        len(name) <= 64 if name
        numberOfPhysicalDisks >= 1 if numberOfPhysicalDisks not in [None, Undefined]
        sizeGibibytes >= 0 if sizeGibibytes not in [None, Undefined]


schema Metal3IoV1alpha1BareMetalHostSpecRaidSoftwareRAIDVolumesItems0:
    r"""
    SoftwareRAIDVolume defines the desired configuration of volume in software RAID.

    Attributes
    ----------
    level : str, default is Undefined, required
        RAID level for the logical disk. The following levels are supported:
        0, 1 and 1+0.
    physicalDisks : [Metal3IoV1alpha1BareMetalHostSpecRaidSoftwareRAIDVolumesItems0PhysicalDisksItems0], default is Undefined, optional
        A list of device hints, the number of items should be greater than or equal to 2.
    sizeGibibytes : int, default is Undefined, optional
        Size of the logical disk to be created in GiB.
        If unspecified or set be 0, the maximum capacity of disk will be used for logical disk.
    """


    level: "0" | "1" | "1+0"

    physicalDisks?: [Metal3IoV1alpha1BareMetalHostSpecRaidSoftwareRAIDVolumesItems0PhysicalDisksItems0]

    sizeGibibytes?: int


    check:
        len(physicalDisks) >= 2 if physicalDisks
        sizeGibibytes >= 0 if sizeGibibytes not in [None, Undefined]


schema Metal3IoV1alpha1BareMetalHostSpecRaidSoftwareRAIDVolumesItems0PhysicalDisksItems0:
    r"""
    RootDeviceHints holds the hints for specifying the storage location
    for the root filesystem for the image.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        A Linux device name like "/dev/vda", or a by-path link to it like
        "/dev/disk/by-path/pci-0000:01:00.0-scsi-0:2:0:0". The hint must match
        the actual value exactly.
    hctl : str, default is Undefined, optional
        A SCSI bus address like 0:0:0:0. The hint must match the actual
        value exactly.
    minSizeGigabytes : int, default is Undefined, optional
        The minimum size of the device in Gigabytes.
    model : str, default is Undefined, optional
        A vendor-specific device identifier. The hint can be a
        substring of the actual value.
    rotational : bool, default is Undefined, optional
        True if the device should use spinning media, false otherwise.
    serialNumber : str, default is Undefined, optional
        Device serial number. The hint must match the actual value
        exactly.
    vendor : str, default is Undefined, optional
        The name of the vendor or manufacturer of the device. The hint
        can be a substring of the actual value.
    wwn : str, default is Undefined, optional
        Unique storage identifier. The hint must match the actual value
        exactly.
    wwnVendorExtension : str, default is Undefined, optional
        Unique vendor storage identifier. The hint must match the
        actual value exactly.
    wwnWithExtension : str, default is Undefined, optional
        Unique storage identifier with the vendor extension
        appended. The hint must match the actual value exactly.
    """


    deviceName?: str

    hctl?: str

    minSizeGigabytes?: int

    model?: str

    rotational?: bool

    serialNumber?: str

    vendor?: str

    wwn?: str

    wwnVendorExtension?: str

    wwnWithExtension?: str


    check:
        minSizeGigabytes >= 0 if minSizeGigabytes not in [None, Undefined]


schema Metal3IoV1alpha1BareMetalHostSpecRootDeviceHints:
    r"""
    Provide guidance about how to choose the device for the image
    being provisioned. The default is currently to use /dev/sda as
    the root device.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        A Linux device name like "/dev/vda", or a by-path link to it like
        "/dev/disk/by-path/pci-0000:01:00.0-scsi-0:2:0:0". The hint must match
        the actual value exactly.
    hctl : str, default is Undefined, optional
        A SCSI bus address like 0:0:0:0. The hint must match the actual
        value exactly.
    minSizeGigabytes : int, default is Undefined, optional
        The minimum size of the device in Gigabytes.
    model : str, default is Undefined, optional
        A vendor-specific device identifier. The hint can be a
        substring of the actual value.
    rotational : bool, default is Undefined, optional
        True if the device should use spinning media, false otherwise.
    serialNumber : str, default is Undefined, optional
        Device serial number. The hint must match the actual value
        exactly.
    vendor : str, default is Undefined, optional
        The name of the vendor or manufacturer of the device. The hint
        can be a substring of the actual value.
    wwn : str, default is Undefined, optional
        Unique storage identifier. The hint must match the actual value
        exactly.
    wwnVendorExtension : str, default is Undefined, optional
        Unique vendor storage identifier. The hint must match the
        actual value exactly.
    wwnWithExtension : str, default is Undefined, optional
        Unique storage identifier with the vendor extension
        appended. The hint must match the actual value exactly.
    """


    deviceName?: str

    hctl?: str

    minSizeGigabytes?: int

    model?: str

    rotational?: bool

    serialNumber?: str

    vendor?: str

    wwn?: str

    wwnVendorExtension?: str

    wwnWithExtension?: str


    check:
        minSizeGigabytes >= 0 if minSizeGigabytes not in [None, Undefined]


schema Metal3IoV1alpha1BareMetalHostSpecTaintsItems0:
    r"""
    The node this Taint is attached to has the "effect" on
    any pod that does not tolerate the Taint.

    Attributes
    ----------
    effect : str, default is Undefined, required
        Required. The effect of the taint on pods
        that do not tolerate the taint.
        Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, required
        Required. The taint key to be applied to a node.
    timeAdded : str, default is Undefined, optional
        TimeAdded represents the time at which the taint was added.
        It is only written for NoExecute taints.
    value : str, default is Undefined, optional
        The taint value corresponding to the taint key.
    """


    effect: str

    key: str

    timeAdded?: str

    value?: str


schema Metal3IoV1alpha1BareMetalHostSpecUserData:
    r"""
    UserData holds the reference to the Secret containing the user data
    which is passed to the Config Drive and interpreted by the
    first-boot software such as cloud-init. The format of user data is
    specific to the first-boot software.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name is unique within a namespace to reference a secret resource.
    namespace : str, default is Undefined, optional
        namespace defines the space within which the secret name must be unique.
    """


    name?: str

    namespace?: str


schema Metal3IoV1alpha1BareMetalHostStatus:
    r"""
    BareMetalHostStatus defines the observed state of BareMetalHost.

    Attributes
    ----------
    errorCount : int, default is Undefined, required
        ErrorCount records how many times the host has encoutered an error since the last successful operation
    errorMessage : str, default is Undefined, required
        The last error message reported by the provisioning subsystem.
    errorType : str, default is Undefined, optional
        ErrorType indicates the type of failure encountered when the
        OperationalStatus is OperationalStatusError
    goodCredentials : Metal3IoV1alpha1BareMetalHostStatusGoodCredentials, default is Undefined, optional
        good credentials
    hardware : Metal3IoV1alpha1BareMetalHostStatusHardware, default is Undefined, optional
        hardware
    hardwareProfile : str, default is Undefined, optional
        The name of the profile matching the hardware details.
        Hardware profiles are deprecated and should not be relied on.
    lastUpdated : str, default is Undefined, optional
        LastUpdated identifies when this status was last observed.
    operationHistory : Metal3IoV1alpha1BareMetalHostStatusOperationHistory, default is Undefined, optional
        operation history
    operationalStatus : str, default is Undefined, required
        OperationalStatus holds the status of the host
    poweredOn : bool, default is Undefined, required
        The currently detected power state of the host. This field may get
        briefly out of sync with the actual state of the hardware while
        provisioning processes are running.
    provisioning : Metal3IoV1alpha1BareMetalHostStatusProvisioning, default is Undefined, required
        provisioning
    triedCredentials : Metal3IoV1alpha1BareMetalHostStatusTriedCredentials, default is Undefined, optional
        tried credentials
    """


    errorCount: int = 0

    errorMessage: str

    errorType?: "provisioned registration error" | "registration error" | "inspection error" | "preparation error" | "provisioning error" | "power management error" | "servicing error"

    goodCredentials?: Metal3IoV1alpha1BareMetalHostStatusGoodCredentials

    hardware?: Metal3IoV1alpha1BareMetalHostStatusHardware

    hardwareProfile?: str

    lastUpdated?: str

    operationHistory?: Metal3IoV1alpha1BareMetalHostStatusOperationHistory

    operationalStatus: "" | "OK" | "discovered" | "error" | "delayed" | "detached" | "servicing"

    poweredOn: bool

    provisioning: Metal3IoV1alpha1BareMetalHostStatusProvisioning

    triedCredentials?: Metal3IoV1alpha1BareMetalHostStatusTriedCredentials


schema Metal3IoV1alpha1BareMetalHostStatusGoodCredentials:
    r"""
    The last credentials we were able to validate as working.

    Attributes
    ----------
    credentials : Metal3IoV1alpha1BareMetalHostStatusGoodCredentialsCredentials, default is Undefined, optional
        credentials
    credentialsVersion : str, default is Undefined, optional
        credentials version
    """


    credentials?: Metal3IoV1alpha1BareMetalHostStatusGoodCredentialsCredentials

    credentialsVersion?: str


schema Metal3IoV1alpha1BareMetalHostStatusGoodCredentialsCredentials:
    r"""
    SecretReference represents a Secret Reference. It has enough information to retrieve secret
    in any namespace

    Attributes
    ----------
    name : str, default is Undefined, optional
        name is unique within a namespace to reference a secret resource.
    namespace : str, default is Undefined, optional
        namespace defines the space within which the secret name must be unique.
    """


    name?: str

    namespace?: str


schema Metal3IoV1alpha1BareMetalHostStatusHardware:
    r"""
    The hardware discovered to exist on the host.
    This field will be removed in the next API version in favour of the
    separate HardwareData resource.

    Attributes
    ----------
    cpu : Metal3IoV1alpha1BareMetalHostStatusHardwareCPU, default is Undefined, optional
        cpu
    firmware : Metal3IoV1alpha1BareMetalHostStatusHardwareFirmware, default is Undefined, optional
        firmware
    hostname : str, default is Undefined, optional
        hostname
    nics : [Metal3IoV1alpha1BareMetalHostStatusHardwareNicsItems0], default is Undefined, optional
        List of network interfaces for the host.
    ramMebibytes : int, default is Undefined, optional
        The host's amount of memory in Mebibytes.
    storage : [Metal3IoV1alpha1BareMetalHostStatusHardwareStorageItems0], default is Undefined, optional
        List of storage (disk, SSD, etc.) available to the host.
    systemVendor : Metal3IoV1alpha1BareMetalHostStatusHardwareSystemVendor, default is Undefined, optional
        system vendor
    """


    cpu?: Metal3IoV1alpha1BareMetalHostStatusHardwareCPU

    firmware?: Metal3IoV1alpha1BareMetalHostStatusHardwareFirmware

    hostname?: str

    nics?: [Metal3IoV1alpha1BareMetalHostStatusHardwareNicsItems0]

    ramMebibytes?: int

    storage?: [Metal3IoV1alpha1BareMetalHostStatusHardwareStorageItems0]

    systemVendor?: Metal3IoV1alpha1BareMetalHostStatusHardwareSystemVendor


schema Metal3IoV1alpha1BareMetalHostStatusHardwareCPU:
    r"""
    Details of the CPU(s) in the system.

    Attributes
    ----------
    arch : str, default is Undefined, optional
        arch
    clockMegahertz : float, default is Undefined, optional
        ClockSpeed is a clock speed in MHz
    count : int, default is Undefined, optional
        count
    flags : [str], default is Undefined, optional
        flags
    model : str, default is Undefined, optional
        model
    """


    arch?: str

    clockMegahertz?: float

    count?: int

    flags?: [str]

    model?: str


schema Metal3IoV1alpha1BareMetalHostStatusHardwareFirmware:
    r"""
    System firmware information.

    Attributes
    ----------
    bios : Metal3IoV1alpha1BareMetalHostStatusHardwareFirmwareBios, default is Undefined, optional
        bios
    """


    bios?: Metal3IoV1alpha1BareMetalHostStatusHardwareFirmwareBios


schema Metal3IoV1alpha1BareMetalHostStatusHardwareFirmwareBios:
    r"""
    The BIOS for this firmware

    Attributes
    ----------
    date : str, default is Undefined, optional
        The release/build date for this BIOS
    vendor : str, default is Undefined, optional
        The vendor name for this BIOS
    version : str, default is Undefined, optional
        The version of the BIOS
    """


    date?: str

    vendor?: str

    version?: str


schema Metal3IoV1alpha1BareMetalHostStatusHardwareNicsItems0:
    r"""
    NIC describes one network interface on the host.

    Attributes
    ----------
    ip : str, default is Undefined, optional
        The IP address of the interface. This will be an IPv4 or IPv6 address
        if one is present.  If both IPv4 and IPv6 addresses are present in a
        dual-stack environment, two nics will be output, one with each IP.
    mac : str, default is Undefined, optional
        The device MAC address
    model : str, default is Undefined, optional
        The vendor and product IDs of the NIC, e.g. "0x8086 0x1572"
    name : str, default is Undefined, optional
        The name of the network interface, e.g. "en0"
    pxe : bool, default is Undefined, optional
        Whether the NIC is PXE Bootable
    speedGbps : int, default is Undefined, optional
        The speed of the device in Gigabits per second
    vlanId : int, default is Undefined, optional
        The untagged VLAN ID
    vlans : [Metal3IoV1alpha1BareMetalHostStatusHardwareNicsItems0VlansItems0], default is Undefined, optional
        The VLANs available
    """


    ip?: str

    mac?: str

    model?: str

    name?: str

    pxe?: bool

    speedGbps?: int

    vlanId?: int

    vlans?: [Metal3IoV1alpha1BareMetalHostStatusHardwareNicsItems0VlansItems0]


    check:
        _regex_match(str(mac), r"[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}") if mac
        vlanId <= 4094 if vlanId not in [None, Undefined]
        vlanId >= 0 if vlanId not in [None, Undefined]


schema Metal3IoV1alpha1BareMetalHostStatusHardwareNicsItems0VlansItems0:
    r"""
    VLAN represents the name and ID of a VLAN.

    Attributes
    ----------
    id : int, default is Undefined, optional
        VLANID is a 12-bit 802.1Q VLAN identifier
    name : str, default is Undefined, optional
        name
    """


    id?: int

    name?: str


    check:
        id <= 4094 if id not in [None, Undefined]
        id >= 0 if id not in [None, Undefined]


schema Metal3IoV1alpha1BareMetalHostStatusHardwareStorageItems0:
    r"""
    Storage describes one storage device (disk, SSD, etc.) on the host.

    Attributes
    ----------
    alternateNames : [str], default is Undefined, optional
        A list of alternate Linux device names of the disk, e.g. "/dev/sda".
        Note that this list is not exhaustive, and names may not be stable
        across reboots.
    hctl : str, default is Undefined, optional
        The SCSI location of the device
    model : str, default is Undefined, optional
        Hardware model
    name : str, default is Undefined, optional
        A Linux device name of the disk, e.g.
        "/dev/disk/by-path/pci-0000:01:00.0-scsi-0:2:0:0". This will be a name
        that is stable across reboots if one is available.
    rotational : bool, default is Undefined, optional
        Whether this disk represents rotational storage.
        This field is not recommended for usage, please
        prefer using 'Type' field instead, this field
        will be deprecated eventually.
    serialNumber : str, default is Undefined, optional
        The serial number of the device
    sizeBytes : int, default is Undefined, optional
        The size of the disk in Bytes
    $type : str, default is Undefined, optional
        Device type, one of: HDD, SSD, NVME.
    vendor : str, default is Undefined, optional
        The name of the vendor of the device
    wwn : str, default is Undefined, optional
        The WWN of the device
    wwnVendorExtension : str, default is Undefined, optional
        The WWN Vendor extension of the device
    wwnWithExtension : str, default is Undefined, optional
        The WWN with the extension
    """


    alternateNames?: [str]

    hctl?: str

    model?: str

    name?: str

    rotational?: bool

    serialNumber?: str

    sizeBytes?: int

    $type?: "HDD" | "SSD" | "NVME"

    vendor?: str

    wwn?: str

    wwnVendorExtension?: str

    wwnWithExtension?: str


schema Metal3IoV1alpha1BareMetalHostStatusHardwareSystemVendor:
    r"""
    System vendor information.

    Attributes
    ----------
    manufacturer : str, default is Undefined, optional
        manufacturer
    productName : str, default is Undefined, optional
        product name
    serialNumber : str, default is Undefined, optional
        serial number
    """


    manufacturer?: str

    productName?: str

    serialNumber?: str


schema Metal3IoV1alpha1BareMetalHostStatusOperationHistory:
    r"""
    OperationHistory holds information about operations performed
    on this host.

    Attributes
    ----------
    deprovision : Metal3IoV1alpha1BareMetalHostStatusOperationHistoryDeprovision, default is Undefined, optional
        deprovision
    inspect : Metal3IoV1alpha1BareMetalHostStatusOperationHistoryInspect, default is Undefined, optional
        inspect
    provision : Metal3IoV1alpha1BareMetalHostStatusOperationHistoryProvision, default is Undefined, optional
        provision
    register : Metal3IoV1alpha1BareMetalHostStatusOperationHistoryRegister, default is Undefined, optional
        register
    """


    deprovision?: Metal3IoV1alpha1BareMetalHostStatusOperationHistoryDeprovision

    inspect?: Metal3IoV1alpha1BareMetalHostStatusOperationHistoryInspect

    provision?: Metal3IoV1alpha1BareMetalHostStatusOperationHistoryProvision

    register?: Metal3IoV1alpha1BareMetalHostStatusOperationHistoryRegister


schema Metal3IoV1alpha1BareMetalHostStatusOperationHistoryDeprovision:
    r"""
    OperationMetric contains metadata about an operation (inspection,
    provisioning, etc.) used for tracking metrics.

    Attributes
    ----------
    end : str, default is Undefined, optional
        end
    start : str, default is Undefined, optional
        start
    """


    end?: str

    start?: str


schema Metal3IoV1alpha1BareMetalHostStatusOperationHistoryInspect:
    r"""
    OperationMetric contains metadata about an operation (inspection,
    provisioning, etc.) used for tracking metrics.

    Attributes
    ----------
    end : str, default is Undefined, optional
        end
    start : str, default is Undefined, optional
        start
    """


    end?: str

    start?: str


schema Metal3IoV1alpha1BareMetalHostStatusOperationHistoryProvision:
    r"""
    OperationMetric contains metadata about an operation (inspection,
    provisioning, etc.) used for tracking metrics.

    Attributes
    ----------
    end : str, default is Undefined, optional
        end
    start : str, default is Undefined, optional
        start
    """


    end?: str

    start?: str


schema Metal3IoV1alpha1BareMetalHostStatusOperationHistoryRegister:
    r"""
    OperationMetric contains metadata about an operation (inspection,
    provisioning, etc.) used for tracking metrics.

    Attributes
    ----------
    end : str, default is Undefined, optional
        end
    start : str, default is Undefined, optional
        start
    """


    end?: str

    start?: str


schema Metal3IoV1alpha1BareMetalHostStatusProvisioning:
    r"""
    Information tracked by the provisioner.

    Attributes
    ----------
    ID : str, default is Undefined, required
        The hosts's ID from the underlying provisioning tool (e.g. the
        Ironic node UUID).
    bootMode : str, default is Undefined, optional
        BootMode indicates the boot mode used to provision the host.
    customDeploy : Metal3IoV1alpha1BareMetalHostStatusProvisioningCustomDeploy, default is Undefined, optional
        custom deploy
    firmware : Metal3IoV1alpha1BareMetalHostStatusProvisioningFirmware, default is Undefined, optional
        firmware
    image : Metal3IoV1alpha1BareMetalHostStatusProvisioningImage, default is Undefined, optional
        image
    raid : Metal3IoV1alpha1BareMetalHostStatusProvisioningRaid, default is Undefined, optional
        raid
    rootDeviceHints : Metal3IoV1alpha1BareMetalHostStatusProvisioningRootDeviceHints, default is Undefined, optional
        root device hints
    state : str, default is Undefined, required
        An indicator for what the provisioner is doing with the host.
    """


    ID: str

    bootMode?: "UEFI" | "UEFISecureBoot" | "legacy"

    customDeploy?: Metal3IoV1alpha1BareMetalHostStatusProvisioningCustomDeploy

    firmware?: Metal3IoV1alpha1BareMetalHostStatusProvisioningFirmware

    image?: Metal3IoV1alpha1BareMetalHostStatusProvisioningImage

    raid?: Metal3IoV1alpha1BareMetalHostStatusProvisioningRaid

    rootDeviceHints?: Metal3IoV1alpha1BareMetalHostStatusProvisioningRootDeviceHints

    state: str


schema Metal3IoV1alpha1BareMetalHostStatusProvisioningCustomDeploy:
    r"""
    Custom deploy procedure applied to the host.

    Attributes
    ----------
    method : str, default is Undefined, required
        Custom deploy method name.
        This name is specific to the deploy ramdisk used. If you don't have
        a custom deploy ramdisk, you shouldn't use CustomDeploy.
    """


    method: str


schema Metal3IoV1alpha1BareMetalHostStatusProvisioningFirmware:
    r"""
    The firmware settings that have been applied.

    Attributes
    ----------
    simultaneousMultithreadingEnabled : bool, default is Undefined, optional
        Allows a single physical processor core to appear as several logical processors.
    sriovEnabled : bool, default is Undefined, optional
        SR-IOV support enables a hypervisor to create virtual instances of a PCI-express device, potentially increasing performance.
    virtualizationEnabled : bool, default is Undefined, optional
        Supports the virtualization of platform hardware.
    """


    simultaneousMultithreadingEnabled?: True | False

    sriovEnabled?: True | False

    virtualizationEnabled?: True | False


schema Metal3IoV1alpha1BareMetalHostStatusProvisioningImage:
    r"""
    Image holds the details of the last image successfully
    provisioned to the host.

    Attributes
    ----------
    checksum : str, default is Undefined, optional
        Checksum is the checksum for the image. Required for all formats
        except for "live-iso".
    checksumType : str, default is Undefined, optional
        ChecksumType is the checksum algorithm for the image, e.g md5, sha256 or sha512.
        The special value "auto" can be used to detect the algorithm from the checksum.
        If missing, MD5 is used. If in doubt, use "auto".
    format : str, default is Undefined, optional
        Format contains the format of the image (raw, qcow2, ...).
        When set to "live-iso", an ISO 9660 image referenced by the url will
        be live-booted and not deployed to disk.
    url : str, default is Undefined, required
        URL is a location of an image to deploy.
    """


    checksum?: str

    checksumType?: "md5" | "sha256" | "sha512" | "auto"

    format?: "raw" | "qcow2" | "vdi" | "vmdk" | "live-iso"

    url: str


schema Metal3IoV1alpha1BareMetalHostStatusProvisioningRaid:
    r"""
    The RAID configuration that has been applied.

    Attributes
    ----------
    hardwareRAIDVolumes : [Metal3IoV1alpha1BareMetalHostStatusProvisioningRaidHardwareRAIDVolumesItems0], default is Undefined, optional
        The list of logical disks for hardware RAID, if rootDeviceHints isn't used, first volume is root volume.
        You can set the value of this field to `[]` to clear all the hardware RAID configurations.
    softwareRAIDVolumes : [Metal3IoV1alpha1BareMetalHostStatusProvisioningRaidSoftwareRAIDVolumesItems0], default is Undefined, optional
        The list of logical disks for software RAID, if rootDeviceHints isn't used, first volume is root volume.
        If HardwareRAIDVolumes is set this item will be invalid.
        The number of created Software RAID devices must be 1 or 2.
        If there is only one Software RAID device, it has to be a RAID-1.
        If there are two, the first one has to be a RAID-1, while the RAID level for the second one can be 0, 1, or 1+0.
        As the first RAID device will be the deployment device,
        enforcing a RAID-1 reduces the risk of ending up with a non-booting host in case of a disk failure.
        Software RAID will always be deleted.
    """


    hardwareRAIDVolumes?: [Metal3IoV1alpha1BareMetalHostStatusProvisioningRaidHardwareRAIDVolumesItems0]

    softwareRAIDVolumes?: [Metal3IoV1alpha1BareMetalHostStatusProvisioningRaidSoftwareRAIDVolumesItems0]


    check:
        len(softwareRAIDVolumes) <= 2 if softwareRAIDVolumes


schema Metal3IoV1alpha1BareMetalHostStatusProvisioningRaidHardwareRAIDVolumesItems0:
    r"""
    HardwareRAIDVolume defines the desired configuration of volume in hardware RAID.

    Attributes
    ----------
    controller : str, default is Undefined, optional
        The name of the RAID controller to use.
    level : str, default is Undefined, required
        RAID level for the logical disk. The following levels are supported:
        0, 1, 2, 5, 6, 1+0, 5+0, 6+0 (drivers may support only some of them).
    name : str, default is Undefined, optional
        Name of the volume. Should be unique within the Node. If not
        specified, the name will be auto-generated.
    numberOfPhysicalDisks : int, default is Undefined, optional
        Integer, number of physical disks to use for the logical disk.
        Defaults to minimum number of disks required for the particular RAID
        level.
    physicalDisks : [str], default is Undefined, optional
        Optional list of physical disk names to be used for the hardware RAID volumes. The disk names are interpreted
        by the hardware RAID controller, and the format is hardware specific.
    rotational : bool, default is Undefined, optional
        Select disks with only rotational (if set to true) or solid-state
        (if set to false) storage. By default, any disks can be picked.
    sizeGibibytes : int, default is Undefined, optional
        Size of the logical disk to be created in GiB. If unspecified or
        set be 0, the maximum capacity of disk will be used for logical
        disk.
    """


    controller?: str

    level: "0" | "1" | "2" | "5" | "6" | "1+0" | "5+0" | "6+0"

    name?: str

    numberOfPhysicalDisks?: int

    physicalDisks?: [str]

    rotational?: bool

    sizeGibibytes?: int


    check:
        len(name) <= 64 if name
        numberOfPhysicalDisks >= 1 if numberOfPhysicalDisks not in [None, Undefined]
        sizeGibibytes >= 0 if sizeGibibytes not in [None, Undefined]


schema Metal3IoV1alpha1BareMetalHostStatusProvisioningRaidSoftwareRAIDVolumesItems0:
    r"""
    SoftwareRAIDVolume defines the desired configuration of volume in software RAID.

    Attributes
    ----------
    level : str, default is Undefined, required
        RAID level for the logical disk. The following levels are supported:
        0, 1 and 1+0.
    physicalDisks : [Metal3IoV1alpha1BareMetalHostStatusProvisioningRaidSoftwareRAIDVolumesItems0PhysicalDisksItems0], default is Undefined, optional
        A list of device hints, the number of items should be greater than or equal to 2.
    sizeGibibytes : int, default is Undefined, optional
        Size of the logical disk to be created in GiB.
        If unspecified or set be 0, the maximum capacity of disk will be used for logical disk.
    """


    level: "0" | "1" | "1+0"

    physicalDisks?: [Metal3IoV1alpha1BareMetalHostStatusProvisioningRaidSoftwareRAIDVolumesItems0PhysicalDisksItems0]

    sizeGibibytes?: int


    check:
        len(physicalDisks) >= 2 if physicalDisks
        sizeGibibytes >= 0 if sizeGibibytes not in [None, Undefined]


schema Metal3IoV1alpha1BareMetalHostStatusProvisioningRaidSoftwareRAIDVolumesItems0PhysicalDisksItems0:
    r"""
    RootDeviceHints holds the hints for specifying the storage location
    for the root filesystem for the image.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        A Linux device name like "/dev/vda", or a by-path link to it like
        "/dev/disk/by-path/pci-0000:01:00.0-scsi-0:2:0:0". The hint must match
        the actual value exactly.
    hctl : str, default is Undefined, optional
        A SCSI bus address like 0:0:0:0. The hint must match the actual
        value exactly.
    minSizeGigabytes : int, default is Undefined, optional
        The minimum size of the device in Gigabytes.
    model : str, default is Undefined, optional
        A vendor-specific device identifier. The hint can be a
        substring of the actual value.
    rotational : bool, default is Undefined, optional
        True if the device should use spinning media, false otherwise.
    serialNumber : str, default is Undefined, optional
        Device serial number. The hint must match the actual value
        exactly.
    vendor : str, default is Undefined, optional
        The name of the vendor or manufacturer of the device. The hint
        can be a substring of the actual value.
    wwn : str, default is Undefined, optional
        Unique storage identifier. The hint must match the actual value
        exactly.
    wwnVendorExtension : str, default is Undefined, optional
        Unique vendor storage identifier. The hint must match the
        actual value exactly.
    wwnWithExtension : str, default is Undefined, optional
        Unique storage identifier with the vendor extension
        appended. The hint must match the actual value exactly.
    """


    deviceName?: str

    hctl?: str

    minSizeGigabytes?: int

    model?: str

    rotational?: bool

    serialNumber?: str

    vendor?: str

    wwn?: str

    wwnVendorExtension?: str

    wwnWithExtension?: str


    check:
        minSizeGigabytes >= 0 if minSizeGigabytes not in [None, Undefined]


schema Metal3IoV1alpha1BareMetalHostStatusProvisioningRootDeviceHints:
    r"""
    The root device hints used to provision the host.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        A Linux device name like "/dev/vda", or a by-path link to it like
        "/dev/disk/by-path/pci-0000:01:00.0-scsi-0:2:0:0". The hint must match
        the actual value exactly.
    hctl : str, default is Undefined, optional
        A SCSI bus address like 0:0:0:0. The hint must match the actual
        value exactly.
    minSizeGigabytes : int, default is Undefined, optional
        The minimum size of the device in Gigabytes.
    model : str, default is Undefined, optional
        A vendor-specific device identifier. The hint can be a
        substring of the actual value.
    rotational : bool, default is Undefined, optional
        True if the device should use spinning media, false otherwise.
    serialNumber : str, default is Undefined, optional
        Device serial number. The hint must match the actual value
        exactly.
    vendor : str, default is Undefined, optional
        The name of the vendor or manufacturer of the device. The hint
        can be a substring of the actual value.
    wwn : str, default is Undefined, optional
        Unique storage identifier. The hint must match the actual value
        exactly.
    wwnVendorExtension : str, default is Undefined, optional
        Unique vendor storage identifier. The hint must match the
        actual value exactly.
    wwnWithExtension : str, default is Undefined, optional
        Unique storage identifier with the vendor extension
        appended. The hint must match the actual value exactly.
    """


    deviceName?: str

    hctl?: str

    minSizeGigabytes?: int

    model?: str

    rotational?: bool

    serialNumber?: str

    vendor?: str

    wwn?: str

    wwnVendorExtension?: str

    wwnWithExtension?: str


    check:
        minSizeGigabytes >= 0 if minSizeGigabytes not in [None, Undefined]


schema Metal3IoV1alpha1BareMetalHostStatusTriedCredentials:
    r"""
    The last credentials we sent to the provisioning backend.

    Attributes
    ----------
    credentials : Metal3IoV1alpha1BareMetalHostStatusTriedCredentialsCredentials, default is Undefined, optional
        credentials
    credentialsVersion : str, default is Undefined, optional
        credentials version
    """


    credentials?: Metal3IoV1alpha1BareMetalHostStatusTriedCredentialsCredentials

    credentialsVersion?: str


schema Metal3IoV1alpha1BareMetalHostStatusTriedCredentialsCredentials:
    r"""
    SecretReference represents a Secret Reference. It has enough information to retrieve secret
    in any namespace

    Attributes
    ----------
    name : str, default is Undefined, optional
        name is unique within a namespace to reference a secret resource.
    namespace : str, default is Undefined, optional
        namespace defines the space within which the secret name must be unique.
    """


    name?: str

    namespace?: str


