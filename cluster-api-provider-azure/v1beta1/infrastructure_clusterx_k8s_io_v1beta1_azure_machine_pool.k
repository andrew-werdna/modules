"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema AzureMachinePool:
    r"""
    AzureMachinePool is the Schema for the azuremachinepools API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AzureMachinePool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "AzureMachinePool" = "AzureMachinePool"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpec

    status?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatus


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpec:
    r"""
    AzureMachinePoolSpec defines the desired state of AzureMachinePool.

    Attributes
    ----------
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
        Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the
        AzureMachine's value takes precedence.
    identity : str, default is "None", optional
        Identity is the type of identity used for the Virtual Machine Scale Set.
        The type 'SystemAssigned' is an implicitly created identity.
        The generated identity will be assigned a Subscription contributor role.
        The type 'UserAssigned' is a standalone Azure resource provided by the user
        and assigned to the VM
    location : str, default is Undefined, required
        Location is the Azure region location e.g. westus2
    orchestrationMode : str, default is "Uniform", optional
        OrchestrationMode specifies the orchestration mode for the Virtual Machine Scale Set
    platformFaultDomainCount : int, default is Undefined, optional
        PlatformFaultDomainCount specifies the number of fault domains that the Virtual Machine Scale Set can use.
        The count determines the spreading algorithm of the Azure fault domain.
    providerID : str, default is Undefined, optional
        ProviderID is the identification ID of the Virtual Machine Scale Set
    providerIDList : [str], default is Undefined, optional
        ProviderIDList are the identification IDs of machine instances provided by the provider.
        This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
    roleAssignmentName : str, default is Undefined, optional
        Deprecated: RoleAssignmentName should be set in the systemAssignedIdentityRole field.
    strategy : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecStrategy, default is Undefined, optional
        strategy
    systemAssignedIdentityRole : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecSystemAssignedIdentityRole, default is Undefined, optional
        system assigned identity role
    template : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplate, default is Undefined, required
        template
    userAssignedIdentities : [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecUserAssignedIdentitiesItems0], default is Undefined, optional
        UserAssignedIdentities is a list of standalone Azure identities provided by the user
        The lifecycle of a user-assigned identity is managed separately from the lifecycle of
        the AzureMachinePool.
        See https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
    zoneBalance : bool, default is Undefined, optional
        ZoneBalane dictates whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
    """


    additionalTags?: {str:str}

    identity?: "None" | "SystemAssigned" | "UserAssigned" = "None"

    location: str

    orchestrationMode?: "Flexible" | "Uniform" = "Uniform"

    platformFaultDomainCount?: int

    providerID?: str

    providerIDList?: [str]

    roleAssignmentName?: str

    strategy?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecStrategy

    systemAssignedIdentityRole?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecSystemAssignedIdentityRole

    template: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplate

    userAssignedIdentities?: [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecUserAssignedIdentitiesItems0]

    zoneBalance?: bool


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecStrategy:
    r"""
    The deployment strategy to use to replace existing AzureMachinePoolMachines with new ones.

    Attributes
    ----------
    rollingUpdate : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecStrategyRollingUpdate, default is Undefined, optional
        rolling update
    $type : str, default is "RollingUpdate", optional
        Type of deployment. Currently the only supported strategy is RollingUpdate
    """


    rollingUpdate?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecStrategyRollingUpdate

    $type?: "RollingUpdate" = "RollingUpdate"


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecStrategyRollingUpdate:
    r"""
    Rolling update config params. Present only if
    MachineDeploymentStrategyType = RollingUpdate.

    Attributes
    ----------
    deletePolicy : str, default is "Oldest", optional
        DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.
        Valid values are "Random, "Newest", "Oldest"
        When no value is supplied, the default is Oldest
    maxSurge : int | str, default is 1, optional
        The maximum number of machines that can be scheduled above the
        desired number of machines.
        Value can be an absolute number (ex: 5) or a percentage of
        desired machines (ex: 10%).
        This can not be 0 if MaxUnavailable is 0.
        Absolute number is calculated from percentage by rounding up.
        Defaults to 1.
        Example: when this is set to 30%, the new MachineSet can be scaled
        up immediately when the rolling update starts, such that the total
        number of old and new machines do not exceed 130% of desired
        machines. Once old machines have been killed, new MachineSet can
        be scaled up further, ensuring that total number of machines running
        at any time during the update is at most 130% of desired machines.
    maxUnavailable : int | str, default is Undefined, optional
        The maximum number of machines that can be unavailable during the update.
        Value can be an absolute number (ex: 5) or a percentage of desired
        machines (ex: 10%).
        Absolute number is calculated from percentage by rounding down.
        This can not be 0 if MaxSurge is 0.
        Defaults to 0.
        Example: when this is set to 30%, the old MachineSet can be scaled
        down to 70% of desired machines immediately when the rolling update
        starts. Once new machines are ready, old MachineSet can be scaled
        down further, followed by scaling up the new MachineSet, ensuring
        that the total number of machines available at all times
        during the update is at least 70% of desired machines.
    """


    deletePolicy?: "Random" | "Newest" | "Oldest" = "Oldest"

    maxSurge?: int | str = 1

    maxUnavailable?: int | str = 0


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecSystemAssignedIdentityRole:
    r"""
    SystemAssignedIdentityRole defines the role and scope to assign to the system assigned identity.

    Attributes
    ----------
    definitionID : str, default is Undefined, optional
        DefinitionID is the ID of the role definition to create for a system assigned identity. It can be an Azure built-in role or a custom role.
        Refer to built-in roles: https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles
    name : str, default is Undefined, optional
        Name is the name of the role assignment to create for a system assigned identity. It can be any valid UUID.
        If not specified, a random UUID will be generated.
    scope : str, default is Undefined, optional
        Scope is the scope that the role assignment or definition applies to. The scope can be any REST resource instance.
        If not specified, the scope will be the subscription.
    """


    definitionID?: str

    name?: str

    scope?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplate:
    r"""
    Template contains the details used to build a replica virtual machine within the Machine Pool

    Attributes
    ----------
    acceleratedNetworking : bool, default is Undefined, optional
        Deprecated: AcceleratedNetworking should be set in the networkInterfaces field.
    additionalCapabilities : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateAdditionalCapabilities, default is Undefined, optional
        additional capabilities
    dataDisks : [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0], default is Undefined, optional
        DataDisks specifies the list of data disks to be created for a Virtual Machine
    diagnostics : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDiagnostics, default is Undefined, optional
        diagnostics
    image : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImage, default is Undefined, optional
        image
    networkInterfaces : [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateNetworkInterfacesItems0], default is Undefined, optional
        NetworkInterfaces specifies a list of network interface configurations.
        If left unspecified, the VM will get a single network interface with a
        single IPConfig in the subnet specified in the cluster's node subnet field.
        The primary interface will be the first networkInterface specified (index 0) in the list.
    osDisk : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDisk, default is Undefined, required
        os disk
    securityProfile : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateSecurityProfile, default is Undefined, optional
        security profile
    spotVMOptions : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateSpotVMOptions, default is Undefined, optional
        spot VM options
    sshPublicKey : str, default is Undefined, optional
        SSHPublicKey is the SSH public key string, base64-encoded to add to a Virtual Machine. Linux only.
        Refer to documentation on how to set up SSH access on Windows instances.
    subnetName : str, default is Undefined, optional
        Deprecated: SubnetName should be set in the networkInterfaces field.
    terminateNotificationTimeout : int, default is Undefined, optional
        TerminateNotificationTimeout enables or disables VMSS scheduled events termination notification with specified timeout
        allowed values are between 5 and 15 (mins)
    vmExtensions : [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateVMExtensionsItems0], default is Undefined, optional
        VMExtensions specifies a list of extensions to be added to the scale set.
    vmSize : str, default is Undefined, required
        VMSize is the size of the Virtual Machine to build.
        See https://learn.microsoft.com/rest/api/compute/virtualmachines/createorupdate#virtualmachinesizetypes
    """


    acceleratedNetworking?: bool

    additionalCapabilities?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateAdditionalCapabilities

    dataDisks?: [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0]

    diagnostics?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDiagnostics

    image?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImage

    networkInterfaces?: [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateNetworkInterfacesItems0]

    osDisk: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDisk

    securityProfile?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateSecurityProfile

    spotVMOptions?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateSpotVMOptions

    sshPublicKey?: str

    subnetName?: str

    terminateNotificationTimeout?: int

    vmExtensions?: [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateVMExtensionsItems0]

    vmSize: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateAdditionalCapabilities:
    r"""
    AdditionalCapabilities specifies additional capabilities enabled or disabled on the virtual machine.

    Attributes
    ----------
    ultraSSDEnabled : bool, default is Undefined, optional
        UltraSSDEnabled enables or disables Azure UltraSSD capability for the virtual machine.
        Defaults to true if Ultra SSD data disks are specified,
        otherwise it doesn't set the capability on the VM.
    """


    ultraSSDEnabled?: bool


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0:
    r"""
    DataDisk specifies the parameters that are used to add one or more data disks to the machine.

    Attributes
    ----------
    cachingType : str, default is Undefined, optional
        CachingType specifies the caching requirements.
    diskSizeGB : int, default is Undefined, required
        DiskSizeGB is the size in GB to assign to the data disk.
    lun : int, default is Undefined, optional
        Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
        The value must be between 0 and 63.
    managedDisk : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDisk, default is Undefined, optional
        managed disk
    nameSuffix : str, default is Undefined, required
        NameSuffix is the suffix to be appended to the machine name to generate the disk name.
        Each disk name will be in format <machineName>_<nameSuffix>.
    """


    cachingType?: "None" | "ReadOnly" | "ReadWrite"

    diskSizeGB: int

    lun?: int

    managedDisk?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDisk

    nameSuffix: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDisk:
    r"""
    ManagedDisk specifies the Managed Disk parameters for the data disk.

    Attributes
    ----------
    diskEncryptionSet : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDiskDiskEncryptionSet, default is Undefined, optional
        disk encryption set
    securityProfile : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDiskSecurityProfile, default is Undefined, optional
        security profile
    storageAccountType : str, default is Undefined, optional
        storage account type
    """


    diskEncryptionSet?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDiskDiskEncryptionSet

    securityProfile?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDiskSecurityProfile

    storageAccountType?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDiskDiskEncryptionSet:
    r"""
    DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the managed disk.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
    """


    id?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDiskSecurityProfile:
    r"""
    SecurityProfile specifies the security profile for the managed disk.

    Attributes
    ----------
    diskEncryptionSet : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDiskSecurityProfileDiskEncryptionSet, default is Undefined, optional
        disk encryption set
    securityEncryptionType : str, default is Undefined, optional
        SecurityEncryptionType specifies the encryption type of the managed disk.
        It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
        blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
        When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
        When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
        VirtualizedTrustedPlatformModule should be set to Enabled.
        It can be set only for Confidential VMs.
    """


    diskEncryptionSet?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDiskSecurityProfileDiskEncryptionSet

    securityEncryptionType?: "VMGuestStateOnly" | "DiskWithVMGuestState"


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDataDisksItems0ManagedDiskSecurityProfileDiskEncryptionSet:
    r"""
    DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
    managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
    VMGuest blob.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
    """


    id?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDiagnostics:
    r"""
    Diagnostics specifies the diagnostics settings for a virtual machine.
    If not specified then Boot diagnostics (Managed) will be enabled.

    Attributes
    ----------
    boot : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDiagnosticsBoot, default is Undefined, optional
        boot
    """


    boot?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDiagnosticsBoot


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDiagnosticsBoot:
    r"""
    Boot configures the boot diagnostics settings for the virtual machine.
    This allows to configure capturing serial output from the virtual machine on boot.
    This is useful for debugging software based launch issues.
    If not specified then Boot diagnostics (Managed) will be enabled.

    Attributes
    ----------
    storageAccountType : str, default is Undefined, required
        StorageAccountType determines if the storage account for storing the diagnostics data
        should be disabled (Disabled), provisioned by Azure (Managed) or by the user (UserManaged).
    userManaged : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDiagnosticsBootUserManaged, default is Undefined, optional
        user managed
    """


    storageAccountType: "Managed" | "UserManaged" | "Disabled"

    userManaged?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDiagnosticsBootUserManaged


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateDiagnosticsBootUserManaged:
    r"""
    UserManaged provides a reference to the user-managed storage account.

    Attributes
    ----------
    storageAccountURI : str, default is Undefined, required
        StorageAccountURI is the URI of the user-managed storage account.
        The URI typically will be `https://<mystorageaccountname>.blob.core.windows.net/`
        but may differ if you are using Azure DNS zone endpoints.
        You can find the correct endpoint by looking for the Blob Primary Endpoint in the
        endpoints tab in the Azure console or with the CLI by issuing
        `az storage account list --query='[].{name: name, "resource group": resourceGroup, "blob endpoint": primaryEndpoints.blob}'`.
    """


    storageAccountURI: str


    check:
        len(storageAccountURI) <= 1024
        _regex_match(str(storageAccountURI), r"^https://")


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImage:
    r"""
    Image is used to provide details of an image to use during VM creation.
    If image details are omitted the image will default the Azure Marketplace "capi" offer,
    which is based on Ubuntu.

    Attributes
    ----------
    computeGallery : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageComputeGallery, default is Undefined, optional
        compute gallery
    id : str, default is Undefined, optional
        ID specifies an image to use by ID
    marketplace : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageMarketplace, default is Undefined, optional
        marketplace
    sharedGallery : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageSharedGallery, default is Undefined, optional
        shared gallery
    """


    computeGallery?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageComputeGallery

    id?: str

    marketplace?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageMarketplace

    sharedGallery?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageSharedGallery


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageComputeGallery:
    r"""
    ComputeGallery specifies an image to use from the Azure Compute Gallery

    Attributes
    ----------
    gallery : str, default is Undefined, required
        Gallery specifies the name of the compute image gallery that contains the image
    name : str, default is Undefined, required
        Name is the name of the image
    plan : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageComputeGalleryPlan, default is Undefined, optional
        plan
    resourceGroup : str, default is Undefined, optional
        ResourceGroup specifies the resource group containing the private compute gallery.
    subscriptionID : str, default is Undefined, optional
        SubscriptionID is the identifier of the subscription that contains the private compute gallery.
    version : str, default is Undefined, required
        Version specifies the version of the marketplace image. The allowed formats
        are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
        Specify 'latest' to use the latest version of an image available at deploy time.
        Even if you use 'latest', the VM image will not automatically update after deploy
        time even if a new version becomes available.
    """


    gallery: str

    name: str

    plan?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageComputeGalleryPlan

    resourceGroup?: str

    subscriptionID?: str

    version: str


    check:
        len(gallery) >= 1
        len(name) >= 1
        len(version) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageComputeGalleryPlan:
    r"""
    Plan contains plan information.

    Attributes
    ----------
    offer : str, default is Undefined, required
        Offer specifies the name of a group of related images created by the publisher.
        For example, UbuntuServer, WindowsServer
    publisher : str, default is Undefined, required
        Publisher is the name of the organization that created the image
    sku : str, default is Undefined, required
        SKU specifies an instance of an offer, such as a major release of a distribution.
        For example, 18.04-LTS, 2019-Datacenter
    """


    offer: str

    publisher: str

    sku: str


    check:
        len(offer) >= 1
        len(publisher) >= 1
        len(sku) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageMarketplace:
    r"""
    Marketplace specifies an image to use from the Azure Marketplace

    Attributes
    ----------
    offer : str, default is Undefined, required
        Offer specifies the name of a group of related images created by the publisher.
        For example, UbuntuServer, WindowsServer
    publisher : str, default is Undefined, required
        Publisher is the name of the organization that created the image
    sku : str, default is Undefined, required
        SKU specifies an instance of an offer, such as a major release of a distribution.
        For example, 18.04-LTS, 2019-Datacenter
    thirdPartyImage : bool, default is Undefined, optional
        ThirdPartyImage indicates the image is published by a third party publisher and a Plan
        will be generated for it.
    version : str, default is Undefined, required
        Version specifies the version of an image sku. The allowed formats
        are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
        Specify 'latest' to use the latest version of an image available at deploy time.
        Even if you use 'latest', the VM image will not automatically update after deploy
        time even if a new version becomes available.
    """


    offer: str

    publisher: str

    sku: str

    thirdPartyImage?: bool = False

    version: str


    check:
        len(offer) >= 1
        len(publisher) >= 1
        len(sku) >= 1
        len(version) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateImageSharedGallery:
    r"""
    SharedGallery specifies an image to use from an Azure Shared Image Gallery
    Deprecated: use ComputeGallery instead.

    Attributes
    ----------
    gallery : str, default is Undefined, required
        Gallery specifies the name of the shared image gallery that contains the image
    name : str, default is Undefined, required
        Name is the name of the image
    offer : str, default is Undefined, optional
        Offer specifies the name of a group of related images created by the publisher.
        For example, UbuntuServer, WindowsServer
        This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
        This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
    publisher : str, default is Undefined, optional
        Publisher is the name of the organization that created the image.
        This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
        This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
    resourceGroup : str, default is Undefined, required
        ResourceGroup specifies the resource group containing the shared image gallery
    sku : str, default is Undefined, optional
        SKU specifies an instance of an offer, such as a major release of a distribution.
        For example, 18.04-LTS, 2019-Datacenter
        This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
        This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
    subscriptionID : str, default is Undefined, required
        SubscriptionID is the identifier of the subscription that contains the shared image gallery
    version : str, default is Undefined, required
        Version specifies the version of the marketplace image. The allowed formats
        are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
        Specify 'latest' to use the latest version of an image available at deploy time.
        Even if you use 'latest', the VM image will not automatically update after deploy
        time even if a new version becomes available.
    """


    gallery: str

    name: str

    offer?: str

    publisher?: str

    resourceGroup: str

    sku?: str

    subscriptionID: str

    version: str


    check:
        len(gallery) >= 1
        len(name) >= 1
        len(resourceGroup) >= 1
        len(subscriptionID) >= 1
        len(version) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateNetworkInterfacesItems0:
    r"""
    NetworkInterface defines a network interface.

    Attributes
    ----------
    acceleratedNetworking : bool, default is Undefined, optional
        AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on
        whether the requested VMSize supports accelerated networking.
        If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
    privateIPConfigs : int, default is Undefined, optional
        PrivateIPConfigs specifies the number of private IP addresses to attach to the interface.
        Defaults to 1 if not specified.
    subnetName : str, default is Undefined, optional
        SubnetName specifies the subnet in which the new network interface will be placed.
    """


    acceleratedNetworking?: bool

    privateIPConfigs?: int

    subnetName?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDisk:
    r"""
    OSDisk contains the operating system disk information for a Virtual Machine

    Attributes
    ----------
    cachingType : str, default is "None", optional
        CachingType specifies the caching requirements.
    diffDiskSettings : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskDiffDiskSettings, default is Undefined, optional
        diff disk settings
    diskSizeGB : int, default is Undefined, optional
        DiskSizeGB is the size in GB to assign to the OS disk.
        Will have a default of 30GB if not provided
    managedDisk : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDisk, default is Undefined, optional
        managed disk
    osType : str, default is "Linux", required
        os type
    """


    cachingType?: "None" | "ReadOnly" | "ReadWrite" = "None"

    diffDiskSettings?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskDiffDiskSettings

    diskSizeGB?: int

    managedDisk?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDisk

    osType: str = "Linux"


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskDiffDiskSettings:
    r"""
    DiffDiskSettings describe ephemeral disk settings for the os disk.

    Attributes
    ----------
    option : str, default is Undefined, required
        Option enables ephemeral OS when set to "Local"
        See https://learn.microsoft.com/azure/virtual-machines/ephemeral-os-disks for full details
    placement : str, default is Undefined, optional
        Placement specifies the ephemeral disk placement for operating system disk. If placement is specified, Option must be set to "Local".
    """


    option: "Local"

    placement?: "CacheDisk" | "NvmeDisk" | "ResourceDisk"


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDisk:
    r"""
    ManagedDisk specifies the Managed Disk parameters for the OS disk.

    Attributes
    ----------
    diskEncryptionSet : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDiskDiskEncryptionSet, default is Undefined, optional
        disk encryption set
    securityProfile : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDiskSecurityProfile, default is Undefined, optional
        security profile
    storageAccountType : str, default is Undefined, optional
        storage account type
    """


    diskEncryptionSet?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDiskDiskEncryptionSet

    securityProfile?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDiskSecurityProfile

    storageAccountType?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDiskDiskEncryptionSet:
    r"""
    DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the managed disk.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
    """


    id?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDiskSecurityProfile:
    r"""
    SecurityProfile specifies the security profile for the managed disk.

    Attributes
    ----------
    diskEncryptionSet : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDiskSecurityProfileDiskEncryptionSet, default is Undefined, optional
        disk encryption set
    securityEncryptionType : str, default is Undefined, optional
        SecurityEncryptionType specifies the encryption type of the managed disk.
        It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
        blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
        When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
        When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
        VirtualizedTrustedPlatformModule should be set to Enabled.
        It can be set only for Confidential VMs.
    """


    diskEncryptionSet?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDiskSecurityProfileDiskEncryptionSet

    securityEncryptionType?: "VMGuestStateOnly" | "DiskWithVMGuestState"


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateOsDiskManagedDiskSecurityProfileDiskEncryptionSet:
    r"""
    DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
    managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
    VMGuest blob.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
    """


    id?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateSecurityProfile:
    r"""
    SecurityProfile specifies the Security profile settings for a virtual machine.

    Attributes
    ----------
    encryptionAtHost : bool, default is Undefined, optional
        This field indicates whether Host Encryption should be enabled
        or disabled for a virtual machine or virtual machine scale set.
        This should be disabled when SecurityEncryptionType is set to DiskWithVMGuestState.
        Default is disabled.
    securityType : str, default is Undefined, optional
        SecurityType specifies the SecurityType of the virtual machine. It has to be set to any specified value to
        enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set.
    uefiSettings : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateSecurityProfileUefiSettings, default is Undefined, optional
        uefi settings
    """


    encryptionAtHost?: bool

    securityType?: "ConfidentialVM" | "TrustedLaunch"

    uefiSettings?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateSecurityProfileUefiSettings


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateSecurityProfileUefiSettings:
    r"""
    UefiSettings specifies the security settings like secure boot and vTPM used while creating the virtual machine.

    Attributes
    ----------
    secureBootEnabled : bool, default is Undefined, optional
        SecureBootEnabled specifies whether secure boot should be enabled on the virtual machine.
        Secure Boot verifies the digital signature of all boot components and halts the boot process if signature verification fails.
        If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
    vTpmEnabled : bool, default is Undefined, optional
        VTpmEnabled specifies whether vTPM should be enabled on the virtual machine.
        When true it enables the virtualized trusted platform module measurements to create a known good boot integrity policy baseline.
        The integrity policy baseline is used for comparison with measurements from subsequent VM boots to determine if anything has changed.
        This is required to be set to Enabled if SecurityEncryptionType is defined.
        If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
    """


    secureBootEnabled?: bool

    vTpmEnabled?: bool


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateSpotVMOptions:
    r"""
    SpotVMOptions allows the ability to specify the Machine should use a Spot VM

    Attributes
    ----------
    evictionPolicy : str, default is Undefined, optional
        EvictionPolicy defines the behavior of the virtual machine when it is evicted. It can be either Delete or Deallocate.
    maxPrice : int | str, default is Undefined, optional
        MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
    """


    evictionPolicy?: "Deallocate" | "Delete"

    maxPrice?: int | str


    check:
        _regex_match(str(maxPrice), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if maxPrice


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecTemplateVMExtensionsItems0:
    r"""
    VMExtension specifies the parameters for a custom VM extension.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the extension.
    protectedSettings : {str:str}, default is Undefined, optional
        ProtectedSettings is a JSON formatted protected settings for the extension.
    publisher : str, default is Undefined, required
        Publisher is the name of the extension handler publisher.
    settings : {str:str}, default is Undefined, optional
        Settings is a JSON formatted public settings for the extension.
    version : str, default is Undefined, required
        Version specifies the version of the script handler.
    """


    name: str

    protectedSettings?: {str:str}

    publisher: str

    settings?: {str:str}

    version: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolSpecUserAssignedIdentitiesItems0:
    r"""
    UserAssignedIdentity defines the user-assigned identities provided
    by the user to be assigned to Azure resources.

    Attributes
    ----------
    providerID : str, default is Undefined, required
        ProviderID is the identification ID of the user-assigned Identity, the format of an identity is:
        'azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'
    """


    providerID: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatus:
    r"""
    AzureMachinePoolStatus defines the observed state of AzureMachinePool.

    Attributes
    ----------
    conditions : [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the AzureMachinePool.
    failureMessage : str, default is Undefined, optional
        FailureMessage will be set in the event that there is a terminal problem
        reconciling the MachinePool and will contain a more verbose string suitable
        for logging and human consumption.

        This field should not be set for transitive errors that a controller
        faces that are expected to be fixed automatically over
        time (like service outages), but instead indicate that something is
        fundamentally wrong with the MachinePool's spec or the configuration of
        the controller, and that manual intervention is required. Examples
        of terminal errors would be invalid combinations of settings in the
        spec, values that are unsupported by the controller, or the
        responsible controller itself being critically misconfigured.

        Any transient errors that occur during the reconciliation of MachinePools
        can be added as events to the MachinePool object and/or logged in the
        controller's output.
    failureReason : str, default is Undefined, optional
        FailureReason will be set in the event that there is a terminal problem
        reconciling the MachinePool and will contain a succinct value suitable
        for machine interpretation.

        This field should not be set for transitive errors that a controller
        faces that are expected to be fixed automatically over
        time (like service outages), but instead indicate that something is
        fundamentally wrong with the MachinePool's spec or the configuration of
        the controller, and that manual intervention is required. Examples
        of terminal errors would be invalid combinations of settings in the
        spec, values that are unsupported by the controller, or the
        responsible controller itself being critically misconfigured.

        Any transient errors that occur during the reconciliation of MachinePools
        can be added as events to the MachinePool object and/or logged in the
        controller's output.
    image : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImage, default is Undefined, optional
        image
    infrastructureMachineKind : str, default is Undefined, optional
        InfrastructureMachineKind is the kind of the infrastructure resources behind MachinePool Machines.
    instances : [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusInstancesItems0], default is Undefined, optional
        Instances is the VM instance status for each VM in the VMSS
    longRunningOperationStates : [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusLongRunningOperationStatesItems0], default is Undefined, optional
        LongRunningOperationStates saves the state for Azure long-running operations so they can be continued on the
        next reconciliation loop.
    provisioningState : str, default is Undefined, optional
        ProvisioningState is the provisioning state of the Azure virtual machine.
    ready : bool, default is Undefined, optional
        Ready is true when the provider resource is ready.
    replicas : int, default is Undefined, optional
        Replicas is the most recently observed number of replicas.
    version : str, default is Undefined, optional
        Version is the Kubernetes version for the current VMSS model
    """


    conditions?: [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusConditionsItems0]

    failureMessage?: str

    failureReason?: str

    image?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImage

    infrastructureMachineKind?: str

    instances?: [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusInstancesItems0]

    longRunningOperationStates?: [InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusLongRunningOperationStatesItems0]

    provisioningState?: str

    ready?: bool

    replicas?: int

    version?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        message is a human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        reason is the reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


    check:
        len(message) <= 10240 if message
        len(message) >= 1 if message
        len(reason) <= 256 if reason
        len(reason) >= 1 if reason
        len(severity) <= 32 if severity
        len($type) <= 256
        len($type) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImage:
    r"""
    Image is the current image used in the AzureMachinePool. When the spec image is nil, this image is populated
    with the details of the defaulted Azure Marketplace "capi" offer.

    Attributes
    ----------
    computeGallery : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageComputeGallery, default is Undefined, optional
        compute gallery
    id : str, default is Undefined, optional
        ID specifies an image to use by ID
    marketplace : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageMarketplace, default is Undefined, optional
        marketplace
    sharedGallery : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageSharedGallery, default is Undefined, optional
        shared gallery
    """


    computeGallery?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageComputeGallery

    id?: str

    marketplace?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageMarketplace

    sharedGallery?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageSharedGallery


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageComputeGallery:
    r"""
    ComputeGallery specifies an image to use from the Azure Compute Gallery

    Attributes
    ----------
    gallery : str, default is Undefined, required
        Gallery specifies the name of the compute image gallery that contains the image
    name : str, default is Undefined, required
        Name is the name of the image
    plan : InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageComputeGalleryPlan, default is Undefined, optional
        plan
    resourceGroup : str, default is Undefined, optional
        ResourceGroup specifies the resource group containing the private compute gallery.
    subscriptionID : str, default is Undefined, optional
        SubscriptionID is the identifier of the subscription that contains the private compute gallery.
    version : str, default is Undefined, required
        Version specifies the version of the marketplace image. The allowed formats
        are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
        Specify 'latest' to use the latest version of an image available at deploy time.
        Even if you use 'latest', the VM image will not automatically update after deploy
        time even if a new version becomes available.
    """


    gallery: str

    name: str

    plan?: InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageComputeGalleryPlan

    resourceGroup?: str

    subscriptionID?: str

    version: str


    check:
        len(gallery) >= 1
        len(name) >= 1
        len(version) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageComputeGalleryPlan:
    r"""
    Plan contains plan information.

    Attributes
    ----------
    offer : str, default is Undefined, required
        Offer specifies the name of a group of related images created by the publisher.
        For example, UbuntuServer, WindowsServer
    publisher : str, default is Undefined, required
        Publisher is the name of the organization that created the image
    sku : str, default is Undefined, required
        SKU specifies an instance of an offer, such as a major release of a distribution.
        For example, 18.04-LTS, 2019-Datacenter
    """


    offer: str

    publisher: str

    sku: str


    check:
        len(offer) >= 1
        len(publisher) >= 1
        len(sku) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageMarketplace:
    r"""
    Marketplace specifies an image to use from the Azure Marketplace

    Attributes
    ----------
    offer : str, default is Undefined, required
        Offer specifies the name of a group of related images created by the publisher.
        For example, UbuntuServer, WindowsServer
    publisher : str, default is Undefined, required
        Publisher is the name of the organization that created the image
    sku : str, default is Undefined, required
        SKU specifies an instance of an offer, such as a major release of a distribution.
        For example, 18.04-LTS, 2019-Datacenter
    thirdPartyImage : bool, default is Undefined, optional
        ThirdPartyImage indicates the image is published by a third party publisher and a Plan
        will be generated for it.
    version : str, default is Undefined, required
        Version specifies the version of an image sku. The allowed formats
        are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
        Specify 'latest' to use the latest version of an image available at deploy time.
        Even if you use 'latest', the VM image will not automatically update after deploy
        time even if a new version becomes available.
    """


    offer: str

    publisher: str

    sku: str

    thirdPartyImage?: bool = False

    version: str


    check:
        len(offer) >= 1
        len(publisher) >= 1
        len(sku) >= 1
        len(version) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusImageSharedGallery:
    r"""
    SharedGallery specifies an image to use from an Azure Shared Image Gallery
    Deprecated: use ComputeGallery instead.

    Attributes
    ----------
    gallery : str, default is Undefined, required
        Gallery specifies the name of the shared image gallery that contains the image
    name : str, default is Undefined, required
        Name is the name of the image
    offer : str, default is Undefined, optional
        Offer specifies the name of a group of related images created by the publisher.
        For example, UbuntuServer, WindowsServer
        This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
        This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
    publisher : str, default is Undefined, optional
        Publisher is the name of the organization that created the image.
        This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
        This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
    resourceGroup : str, default is Undefined, required
        ResourceGroup specifies the resource group containing the shared image gallery
    sku : str, default is Undefined, optional
        SKU specifies an instance of an offer, such as a major release of a distribution.
        For example, 18.04-LTS, 2019-Datacenter
        This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
        This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
    subscriptionID : str, default is Undefined, required
        SubscriptionID is the identifier of the subscription that contains the shared image gallery
    version : str, default is Undefined, required
        Version specifies the version of the marketplace image. The allowed formats
        are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
        Specify 'latest' to use the latest version of an image available at deploy time.
        Even if you use 'latest', the VM image will not automatically update after deploy
        time even if a new version becomes available.
    """


    gallery: str

    name: str

    offer?: str

    publisher?: str

    resourceGroup: str

    sku?: str

    subscriptionID: str

    version: str


    check:
        len(gallery) >= 1
        len(name) >= 1
        len(resourceGroup) >= 1
        len(subscriptionID) >= 1
        len(version) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusInstancesItems0:
    r"""
    AzureMachinePoolInstanceStatus provides status information for each instance in the VMSS.

    Attributes
    ----------
    instanceID : str, default is Undefined, optional
        InstanceID is the identification of the Machine Instance within the VMSS
    instanceName : str, default is Undefined, optional
        InstanceName is the name of the Machine Instance within the VMSS
    latestModelApplied : bool, default is Undefined, required
        LatestModelApplied indicates the instance is running the most up-to-date VMSS model. A VMSS model describes
        the image version the VM is running. If the instance is not running the latest model, it means the instance
        may not be running the version of Kubernetes the Machine Pool has specified and needs to be updated.
    providerID : str, default is Undefined, optional
        ProviderID is the provider identification of the VMSS Instance
    provisioningState : str, default is Undefined, optional
        ProvisioningState is the provisioning state of the Azure virtual machine instance.
    version : str, default is Undefined, optional
        Version defines the Kubernetes version for the VM Instance
    """


    instanceID?: str

    instanceName?: str

    latestModelApplied: bool

    providerID?: str

    provisioningState?: str

    version?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachinePoolStatusLongRunningOperationStatesItems0:
    r"""
    Future contains the data needed for an Azure long-running operation to continue across reconcile loops.

    Attributes
    ----------
    data : str, default is Undefined, required
        Data is the base64 url encoded json Azure AutoRest Future.
    name : str, default is Undefined, required
        Name is the name of the Azure resource.
        Together with the service name, this forms the unique identifier for the future.
    resourceGroup : str, default is Undefined, optional
        ResourceGroup is the Azure resource group for the resource.
    serviceName : str, default is Undefined, required
        ServiceName is the name of the Azure service.
        Together with the name of the resource, this forms the unique identifier for the future.
    $type : str, default is Undefined, required
        Type describes the type of future, such as update, create, delete, etc.
    """


    data: str

    name: str

    resourceGroup?: str

    serviceName: str

    $type: str


