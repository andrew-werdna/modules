"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema AzureCluster:
    r"""
    AzureCluster is the Schema for the azureclusters API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AzureCluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AzureClusterSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1AzureClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "AzureCluster" = "AzureCluster"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpec

    status?: InfrastructureClusterxK8sIoV1beta1AzureClusterStatus


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpec:
    r"""
    AzureClusterSpec defines the desired state of AzureCluster.

    Attributes
    ----------
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the
        ones added by default.
    azureEnvironment : str, default is Undefined, optional
        AzureEnvironment is the name of the AzureCloud to be used.
        The default value that would be used by most users is "AzurePublicCloud", other values are:
        - ChinaCloud: "AzureChinaCloud"
        - GermanCloud: "AzureGermanCloud"
        - PublicCloud: "AzurePublicCloud"
        - USGovernmentCloud: "AzureUSGovernmentCloud"

        Note that values other than the default must also be accompanied by corresponding changes to the
        aso-controller-settings Secret to configure ASO to refer to the non-Public cloud. ASO currently does
        not support referring to multiple different clouds in a single installation. The following fields must
        be defined in the Secret:
        - AZURE_AUTHORITY_HOST
        - AZURE_RESOURCE_MANAGER_ENDPOINT
        - AZURE_RESOURCE_MANAGER_AUDIENCE

        See the [ASO docs] for more details.

        [ASO docs]: https://azure.github.io/azure-service-operator/guide/aso-controller-settings-options/
    bastionSpec : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpec, default is Undefined, optional
        bastion spec
    cloudProviderConfigOverrides : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverrides, default is Undefined, optional
        cloud provider config overrides
    controlPlaneEnabled : bool, default is True, optional
        ControlPlaneEnabled enables control plane components in the cluster.
    controlPlaneEndpoint : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecControlPlaneEndpoint, default is Undefined, optional
        control plane endpoint
    extendedLocation : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecExtendedLocation, default is Undefined, optional
        extended location
    failureDomains : {str:InfrastructureClusterxK8sIoV1beta1AzureClusterSpecFailureDomainsAnon}, default is Undefined, optional
        FailureDomains is a list of failure domains in the cluster's region, used to restrict
        eligibility to host the control plane. A FailureDomain maps to an availability zone,
        which is a separated group of datacenters within a region.
        See: https://learn.microsoft.com/azure/reliability/availability-zones-overview
    identityRef : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecIdentityRef, default is Undefined, optional
        identity ref
    location : str, default is Undefined, required
        location
    networkSpec : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpec, default is Undefined, optional
        network spec
    resourceGroup : str, default is Undefined, optional
        resource group
    subscriptionID : str, default is Undefined, optional
        subscription ID
    """


    additionalTags?: {str:str}

    azureEnvironment?: str

    bastionSpec?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpec

    cloudProviderConfigOverrides?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverrides

    controlPlaneEnabled?: bool = True

    controlPlaneEndpoint?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecControlPlaneEndpoint

    extendedLocation?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecExtendedLocation

    failureDomains?: {str:InfrastructureClusterxK8sIoV1beta1AzureClusterSpecFailureDomainsAnon}

    identityRef?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecIdentityRef

    location: str

    networkSpec?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpec

    resourceGroup?: str

    subscriptionID?: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpec:
    r"""
    BastionSpec encapsulates all things related to the Bastions in the cluster.

    Attributes
    ----------
    azureBastion : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastion, default is Undefined, optional
        azure bastion
    """


    azureBastion?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastion


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastion:
    r"""
    AzureBastion specifies how the Azure Bastion cloud component should be configured.

    Attributes
    ----------
    enableTunneling : bool, default is Undefined, optional
        EnableTunneling enables the native client support feature for the Azure Bastion Host. Defaults to false.
    name : str, default is Undefined, optional
        name
    publicIP : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionPublicIP, default is Undefined, optional
        public IP
    sku : str, default is "Basic", optional
        BastionHostSkuName configures the tier of the Azure Bastion Host. Can be either Basic or Standard. Defaults to Basic.
    subnet : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnet, default is Undefined, optional
        subnet
    """


    enableTunneling?: bool = False

    name?: str

    publicIP?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionPublicIP

    sku?: "Basic" | "Standard" = "Basic"

    subnet?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnet


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionPublicIP:
    r"""
    PublicIPSpec defines the inputs to create an Azure public IP address.

    Attributes
    ----------
    dnsName : str, default is Undefined, optional
        dns name
    ipTags : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionPublicIPIPTagsItems0], default is Undefined, optional
        ip tags
    name : str, default is Undefined, required
        name
    """


    dnsName?: str

    ipTags?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionPublicIPIPTagsItems0]

    name: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionPublicIPIPTagsItems0:
    r"""
    IPTag contains the IpTag associated with the object.

    Attributes
    ----------
    tag : str, default is Undefined, required
        Tag specifies the value of the IP tag associated with the public IP. Example: SQL.
    $type : str, default is Undefined, required
        Type specifies the IP tag type. Example: FirstPartyUsage.
    """


    tag: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnet:
    r"""
    SubnetSpec configures an Azure subnet.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, optional
        CIDRBlocks defines the subnet's address space, specified as one or more address prefixes in CIDR notation.
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the subnet.
        READ-ONLY
    name : str, default is Undefined, required
        Name defines a name for the subnet resource.
    natGateway : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetNatGateway, default is Undefined, optional
        nat gateway
    privateEndpoints : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetPrivateEndpointsItems0], default is Undefined, optional
        PrivateEndpoints defines a list of private endpoints that should be attached to this subnet.
    role : str, default is Undefined, required
        Role defines the subnet role (eg. Node, ControlPlane)
    routeTable : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetRouteTable, default is Undefined, optional
        route table
    securityGroup : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetSecurityGroup, default is Undefined, optional
        security group
    serviceEndpoints : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetServiceEndpointsItems0], default is Undefined, optional
        ServiceEndpoints is a slice of Virtual Network service endpoints to enable for the subnets.
    """


    cidrBlocks?: [str]

    id?: str

    name: str

    natGateway?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetNatGateway

    privateEndpoints?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetPrivateEndpointsItems0]

    role: "node" | "control-plane" | "bastion" | "cluster"

    routeTable?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetRouteTable

    securityGroup?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetSecurityGroup

    serviceEndpoints?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetServiceEndpointsItems0]


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetNatGateway:
    r"""
    NatGateway associated with this subnet.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the NAT gateway.
        READ-ONLY
    ip : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetNatGatewayIP, default is Undefined, optional
        ip
    name : str, default is Undefined, required
        name
    """


    id?: str

    ip?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetNatGatewayIP

    name: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetNatGatewayIP:
    r"""
    PublicIPSpec defines the inputs to create an Azure public IP address.

    Attributes
    ----------
    dnsName : str, default is Undefined, optional
        dns name
    ipTags : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetNatGatewayIPIPTagsItems0], default is Undefined, optional
        ip tags
    name : str, default is Undefined, required
        name
    """


    dnsName?: str

    ipTags?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetNatGatewayIPIPTagsItems0]

    name: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetNatGatewayIPIPTagsItems0:
    r"""
    IPTag contains the IpTag associated with the object.

    Attributes
    ----------
    tag : str, default is Undefined, required
        Tag specifies the value of the IP tag associated with the public IP. Example: SQL.
    $type : str, default is Undefined, required
        Type specifies the IP tag type. Example: FirstPartyUsage.
    """


    tag: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetPrivateEndpointsItems0:
    r"""
    PrivateEndpointSpec configures an Azure Private Endpoint.

    Attributes
    ----------
    applicationSecurityGroups : [str], default is Undefined, optional
        ApplicationSecurityGroups specifies the Application security group in which the private endpoint IP configuration is included.
    customNetworkInterfaceName : str, default is Undefined, optional
        CustomNetworkInterfaceName specifies the network interface name associated with the private endpoint.
    location : str, default is Undefined, optional
        Location specifies the region to create the private endpoint.
    manualApproval : bool, default is Undefined, optional
        ManualApproval specifies if the connection approval needs to be done manually or not.
        Set it true when the network admin does not have access to approve connections to the remote resource.
        Defaults to false.
    name : str, default is Undefined, required
        Name specifies the name of the private endpoint.
    privateIPAddresses : [str], default is Undefined, optional
        PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
        They have to be part of the subnet where the private endpoint is linked.
    privateLinkServiceConnections : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetPrivateEndpointsItems0PrivateLinkServiceConnectionsItems0], default is Undefined, optional
        PrivateLinkServiceConnections specifies Private Link Service Connections of the private endpoint.
    """


    applicationSecurityGroups?: [str]

    customNetworkInterfaceName?: str

    location?: str

    manualApproval?: bool

    name: str

    privateIPAddresses?: [str]

    privateLinkServiceConnections?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetPrivateEndpointsItems0PrivateLinkServiceConnectionsItems0]


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetPrivateEndpointsItems0PrivateLinkServiceConnectionsItems0:
    r"""
    PrivateLinkServiceConnection defines the specification for a private link service connection associated with a private endpoint.

    Attributes
    ----------
    groupIDs : [str], default is Undefined, optional
        GroupIDs specifies the ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
    name : str, default is Undefined, optional
        Name specifies the name of the private link service.
    privateLinkServiceID : str, default is Undefined, optional
        PrivateLinkServiceID specifies the resource ID of the private link service.
    requestMessage : str, default is Undefined, optional
        RequestMessage specifies a message passed to the owner of the remote resource with the private endpoint connection request.
    """


    groupIDs?: [str]

    name?: str

    privateLinkServiceID?: str

    requestMessage?: str


    check:
        len(requestMessage) <= 140 if requestMessage


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetRouteTable:
    r"""
    RouteTable defines the route table that should be attached to this subnet.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the route table.
        READ-ONLY
    name : str, default is Undefined, required
        name
    """


    id?: str

    name: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetSecurityGroup:
    r"""
    SecurityGroup defines the NSG (network security group) that should be attached to this subnet.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the security group.
        READ-ONLY
    name : str, default is Undefined, required
        name
    securityRules : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetSecurityGroupSecurityRulesItems0], default is Undefined, optional
        SecurityRules is a slice of Azure security rules for security groups.
    tags : {str:str}, default is Undefined, optional
        Tags defines a map of tags.
    """


    id?: str

    name: str

    securityRules?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetSecurityGroupSecurityRulesItems0]

    tags?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetSecurityGroupSecurityRulesItems0:
    r"""
    SecurityRule defines an Azure security rule for security groups.

    Attributes
    ----------
    action : str, default is "Allow", optional
        Action specifies whether network traffic is allowed or denied. Can either be "Allow" or "Deny". Defaults to "Allow".
    description : str, default is Undefined, required
        A description for this rule. Restricted to 140 chars.
    destination : str, default is Undefined, optional
        Destination is the destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
    destinationPorts : str, default is Undefined, optional
        DestinationPorts specifies the destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
    direction : str, default is Undefined, required
        Direction indicates whether the rule applies to inbound, or outbound traffic. "Inbound" or "Outbound".
    name : str, default is Undefined, required
        Name is a unique name within the network security group.
    priority : int, default is Undefined, optional
        Priority is a number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.
    $protocol : str, default is Undefined, required
        Protocol specifies the protocol type. "Tcp", "Udp", "Icmp", or "*".
    source : str, default is Undefined, optional
        Source specifies the CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
    sourcePorts : str, default is Undefined, optional
        SourcePorts specifies source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
    sources : [str], default is Undefined, optional
        Sources specifies The CIDR or source IP ranges.
    """


    action?: "Allow" | "Deny" = "Allow"

    description: str

    destination?: str

    destinationPorts?: str

    direction: "Inbound" | "Outbound"

    name: str

    priority?: int

    $protocol: "Tcp" | "Udp" | "Icmp" | "*"

    source?: str

    sourcePorts?: str

    sources?: [str]


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecBastionSpecAzureBastionSubnetServiceEndpointsItems0:
    r"""
    ServiceEndpointSpec configures an Azure Service Endpoint.

    Attributes
    ----------
    locations : [str], default is Undefined, required
        locations
    service : str, default is Undefined, required
        service
    """


    locations: [str]

    service: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverrides:
    r"""
    CloudProviderConfigOverrides is an optional set of configuration values that can be overridden in azure cloud provider config.
    This is only a subset of options that are available in azure cloud provider config.
    Some values for the cloud provider config are inferred from other parts of cluster api provider azure spec, and may not be available for overrides.
    See: https://cloud-provider-azure.sigs.k8s.io/install/configs
    Note: All cloud provider config values can be customized by creating the secret beforehand. CloudProviderConfigOverrides is only used when the secret is managed by the Azure Provider.

    Attributes
    ----------
    backOffs : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverridesBackOffs, default is Undefined, optional
        back offs
    rateLimits : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverridesRateLimitsItems0], default is Undefined, optional
        rate limits
    """


    backOffs?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverridesBackOffs

    rateLimits?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverridesRateLimitsItems0]


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverridesBackOffs:
    r"""
    BackOffConfig indicates the back-off config options.

    Attributes
    ----------
    cloudProviderBackoff : bool, default is Undefined, optional
        cloud provider backoff
    cloudProviderBackoffDuration : int, default is Undefined, optional
        cloud provider backoff duration
    cloudProviderBackoffExponent : int | str, default is Undefined, optional
        cloud provider backoff exponent
    cloudProviderBackoffJitter : int | str, default is Undefined, optional
        cloud provider backoff jitter
    cloudProviderBackoffRetries : int, default is Undefined, optional
        cloud provider backoff retries
    """


    cloudProviderBackoff?: bool

    cloudProviderBackoffDuration?: int

    cloudProviderBackoffExponent?: int | str

    cloudProviderBackoffJitter?: int | str

    cloudProviderBackoffRetries?: int


    check:
        _regex_match(str(cloudProviderBackoffExponent), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if cloudProviderBackoffExponent
        _regex_match(str(cloudProviderBackoffJitter), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if cloudProviderBackoffJitter


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverridesRateLimitsItems0:
    r"""
    RateLimitSpec represents the rate limit configuration for a particular kind of resource.
    Eg. loadBalancerRateLimit is used to configure rate limits for load balancers.
    This eventually gets converted to CloudProviderRateLimitConfig that cloud-provider-azure expects.
    See: https://github.com/kubernetes-sigs/cloud-provider-azure/blob/d585c2031925b39c925624302f22f8856e29e352/pkg/provider/azure_ratelimit.go#L25
    We cannot use CloudProviderRateLimitConfig directly because floating point values are not supported in controller-tools.
    See: https://github.com/kubernetes-sigs/controller-tools/issues/245

    Attributes
    ----------
    config : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverridesRateLimitsItems0Config, default is Undefined, optional
        config
    name : str, default is Undefined, required
        Name is the name of the rate limit spec.
    """


    config?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverridesRateLimitsItems0Config

    name: "defaultRateLimit" | "routeRateLimit" | "subnetsRateLimit" | "interfaceRateLimit" | "routeTableRateLimit" | "loadBalancerRateLimit" | "publicIPAddressRateLimit" | "securityGroupRateLimit" | "virtualMachineRateLimit" | "storageAccountRateLimit" | "diskRateLimit" | "snapshotRateLimit" | "virtualMachineScaleSetRateLimit" | "virtualMachineSizesRateLimit" | "availabilitySetRateLimit"


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecCloudProviderConfigOverridesRateLimitsItems0Config:
    r"""
    RateLimitConfig indicates the rate limit config options.

    Attributes
    ----------
    cloudProviderRateLimit : bool, default is Undefined, optional
        cloud provider rate limit
    cloudProviderRateLimitBucket : int, default is Undefined, optional
        cloud provider rate limit bucket
    cloudProviderRateLimitBucketWrite : int, default is Undefined, optional
        cloud provider rate limit bucket write
    cloudProviderRateLimitQPS : int | str, default is Undefined, optional
        cloud provider rate limit QPS
    cloudProviderRateLimitQPSWrite : int | str, default is Undefined, optional
        cloud provider rate limit QPS write
    """


    cloudProviderRateLimit?: bool

    cloudProviderRateLimitBucket?: int

    cloudProviderRateLimitBucketWrite?: int

    cloudProviderRateLimitQPS?: int | str

    cloudProviderRateLimitQPSWrite?: int | str


    check:
        _regex_match(str(cloudProviderRateLimitQPS), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if cloudProviderRateLimitQPS
        _regex_match(str(cloudProviderRateLimitQPSWrite), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if cloudProviderRateLimitQPSWrite


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecControlPlaneEndpoint:
    r"""
    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane. It is not recommended to set
    this when creating an AzureCluster as CAPZ will set this for you. However, if it is set, CAPZ will not change it.

    Attributes
    ----------
    host : str, default is Undefined, required
        host is the hostname on which the API server is serving.
    port : int, default is Undefined, required
        port is the port on which the API server is serving.
    """


    host: str

    port: int


    check:
        len(host) <= 512


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecExtendedLocation:
    r"""
    ExtendedLocation is an optional set of ExtendedLocation properties for clusters on Azure public MEC.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name defines the name for the extended location.
    $type : str, default is Undefined, required
        Type defines the type for the extended location.
    """


    name: str

    $type: "EdgeZone"


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecFailureDomainsAnon:
    r"""
    FailureDomainSpec is the Schema for Cluster API failure domains.
    It allows controllers to understand how many failure domains a cluster can optionally span across.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        attributes is a free form map of attributes an infrastructure provider might use or require.
    controlPlane : bool, default is Undefined, optional
        controlPlane determines if this failure domain is suitable for use by control plane machines.
    """


    attributes?: {str:str}

    controlPlane?: bool


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecIdentityRef:
    r"""
    IdentityRef is a reference to an AzureIdentity to be used when reconciling this cluster

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpec:
    r"""
    NetworkSpec encapsulates all things related to Azure network.

    Attributes
    ----------
    additionalAPIServerLBPorts : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAdditionalAPIServerLBPortsItems0], default is Undefined, optional
        AdditionalAPIServerLBPorts specifies extra inbound ports for the APIServer load balancer.
        Each port specified (e.g., 9345) creates an inbound rule where the frontend port and the backend port are the same.
    apiServerLB : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLB, default is Undefined, optional
        api server l b
    controlPlaneOutboundLB : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLB, default is Undefined, optional
        control plane outbound l b
    nodeOutboundLB : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLB, default is Undefined, optional
        node outbound l b
    privateDNSZoneName : str, default is Undefined, optional
        PrivateDNSZoneName defines the zone name for the Azure Private DNS.
    privateDNSZoneResourceGroup : str, default is Undefined, optional
        PrivateDNSZoneResourceGroup defines the resource group to be used for Azure Private DNS Zone.
        If not specified, the resource group of the cluster will be used to create the Azure Private DNS Zone.
    subnets : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0], default is Undefined, optional
        Subnets is the configuration for the control-plane subnet and the node subnet.
    vnet : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnet, default is Undefined, optional
        vnet
    """


    additionalAPIServerLBPorts?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAdditionalAPIServerLBPortsItems0]

    apiServerLB?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLB

    controlPlaneOutboundLB?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLB

    nodeOutboundLB?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLB

    privateDNSZoneName?: str

    privateDNSZoneResourceGroup?: str

    subnets?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0]

    vnet?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnet


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLB:
    r"""
    APIServerLB is the configuration for the control-plane load balancer.

    Attributes
    ----------
    backendPool : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBBackendPool, default is Undefined, optional
        backend pool
    frontendIPs : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBFrontendIPsItems0], default is Undefined, optional
        frontend i ps
    frontendIPsCount : int, default is Undefined, optional
        FrontendIPsCount specifies the number of frontend IP addresses for the load balancer.
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the load balancer.
        READ-ONLY
    idleTimeoutInMinutes : int, default is Undefined, optional
        IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.
    name : str, default is Undefined, optional
        name
    sku : str, default is Undefined, optional
        SKU defines an Azure load balancer SKU.
    $type : str, default is Undefined, optional
        LBType defines an Azure load balancer Type.
    """


    backendPool?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBBackendPool

    frontendIPs?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBFrontendIPsItems0]

    frontendIPsCount?: int

    id?: str

    idleTimeoutInMinutes?: int

    name?: str

    sku?: str

    $type?: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBBackendPool:
    r"""
    BackendPool describes the backend pool of the load balancer.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name specifies the name of backend pool for the load balancer. If not specified, the default name will
        be set, depending on the load balancer role.
    """


    name?: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBFrontendIPsItems0:
    r"""
    FrontendIP defines a load balancer frontend IP configuration.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    privateIP : str, default is Undefined, optional
        private IP
    publicIP : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBFrontendIPsItems0PublicIP, default is Undefined, optional
        public IP
    """


    name: str

    privateIP?: str

    publicIP?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBFrontendIPsItems0PublicIP


    check:
        len(name) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBFrontendIPsItems0PublicIP:
    r"""
    PublicIPSpec defines the inputs to create an Azure public IP address.

    Attributes
    ----------
    dnsName : str, default is Undefined, optional
        dns name
    ipTags : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBFrontendIPsItems0PublicIPIPTagsItems0], default is Undefined, optional
        ip tags
    name : str, default is Undefined, required
        name
    """


    dnsName?: str

    ipTags?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBFrontendIPsItems0PublicIPIPTagsItems0]

    name: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAPIServerLBFrontendIPsItems0PublicIPIPTagsItems0:
    r"""
    IPTag contains the IpTag associated with the object.

    Attributes
    ----------
    tag : str, default is Undefined, required
        Tag specifies the value of the IP tag associated with the public IP. Example: SQL.
    $type : str, default is Undefined, required
        Type specifies the IP tag type. Example: FirstPartyUsage.
    """


    tag: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecAdditionalAPIServerLBPortsItems0:
    r"""
    LoadBalancerPort specifies additional port for the API server load balancer.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name for the additional port within LB definition
    port : int, default is Undefined, required
        Port for the LB definition
    """


    name: str

    port: int


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLB:
    r"""
    ControlPlaneOutboundLB is the configuration for the control-plane outbound load balancer.
    This is different from APIServerLB, and is used only in private clusters (optionally) for enabling outbound traffic.

    Attributes
    ----------
    backendPool : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBBackendPool, default is Undefined, optional
        backend pool
    frontendIPs : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBFrontendIPsItems0], default is Undefined, optional
        frontend i ps
    frontendIPsCount : int, default is Undefined, optional
        FrontendIPsCount specifies the number of frontend IP addresses for the load balancer.
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the load balancer.
        READ-ONLY
    idleTimeoutInMinutes : int, default is Undefined, optional
        IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.
    name : str, default is Undefined, optional
        name
    sku : str, default is Undefined, optional
        SKU defines an Azure load balancer SKU.
    $type : str, default is Undefined, optional
        LBType defines an Azure load balancer Type.
    """


    backendPool?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBBackendPool

    frontendIPs?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBFrontendIPsItems0]

    frontendIPsCount?: int

    id?: str

    idleTimeoutInMinutes?: int

    name?: str

    sku?: str

    $type?: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBBackendPool:
    r"""
    BackendPool describes the backend pool of the load balancer.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name specifies the name of backend pool for the load balancer. If not specified, the default name will
        be set, depending on the load balancer role.
    """


    name?: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBFrontendIPsItems0:
    r"""
    FrontendIP defines a load balancer frontend IP configuration.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    privateIP : str, default is Undefined, optional
        private IP
    publicIP : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBFrontendIPsItems0PublicIP, default is Undefined, optional
        public IP
    """


    name: str

    privateIP?: str

    publicIP?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBFrontendIPsItems0PublicIP


    check:
        len(name) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBFrontendIPsItems0PublicIP:
    r"""
    PublicIPSpec defines the inputs to create an Azure public IP address.

    Attributes
    ----------
    dnsName : str, default is Undefined, optional
        dns name
    ipTags : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBFrontendIPsItems0PublicIPIPTagsItems0], default is Undefined, optional
        ip tags
    name : str, default is Undefined, required
        name
    """


    dnsName?: str

    ipTags?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBFrontendIPsItems0PublicIPIPTagsItems0]

    name: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecControlPlaneOutboundLBFrontendIPsItems0PublicIPIPTagsItems0:
    r"""
    IPTag contains the IpTag associated with the object.

    Attributes
    ----------
    tag : str, default is Undefined, required
        Tag specifies the value of the IP tag associated with the public IP. Example: SQL.
    $type : str, default is Undefined, required
        Type specifies the IP tag type. Example: FirstPartyUsage.
    """


    tag: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLB:
    r"""
    NodeOutboundLB is the configuration for the node outbound load balancer.

    Attributes
    ----------
    backendPool : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBBackendPool, default is Undefined, optional
        backend pool
    frontendIPs : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBFrontendIPsItems0], default is Undefined, optional
        frontend i ps
    frontendIPsCount : int, default is Undefined, optional
        FrontendIPsCount specifies the number of frontend IP addresses for the load balancer.
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the load balancer.
        READ-ONLY
    idleTimeoutInMinutes : int, default is Undefined, optional
        IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.
    name : str, default is Undefined, optional
        name
    sku : str, default is Undefined, optional
        SKU defines an Azure load balancer SKU.
    $type : str, default is Undefined, optional
        LBType defines an Azure load balancer Type.
    """


    backendPool?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBBackendPool

    frontendIPs?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBFrontendIPsItems0]

    frontendIPsCount?: int

    id?: str

    idleTimeoutInMinutes?: int

    name?: str

    sku?: str

    $type?: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBBackendPool:
    r"""
    BackendPool describes the backend pool of the load balancer.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name specifies the name of backend pool for the load balancer. If not specified, the default name will
        be set, depending on the load balancer role.
    """


    name?: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBFrontendIPsItems0:
    r"""
    FrontendIP defines a load balancer frontend IP configuration.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    privateIP : str, default is Undefined, optional
        private IP
    publicIP : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBFrontendIPsItems0PublicIP, default is Undefined, optional
        public IP
    """


    name: str

    privateIP?: str

    publicIP?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBFrontendIPsItems0PublicIP


    check:
        len(name) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBFrontendIPsItems0PublicIP:
    r"""
    PublicIPSpec defines the inputs to create an Azure public IP address.

    Attributes
    ----------
    dnsName : str, default is Undefined, optional
        dns name
    ipTags : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBFrontendIPsItems0PublicIPIPTagsItems0], default is Undefined, optional
        ip tags
    name : str, default is Undefined, required
        name
    """


    dnsName?: str

    ipTags?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBFrontendIPsItems0PublicIPIPTagsItems0]

    name: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecNodeOutboundLBFrontendIPsItems0PublicIPIPTagsItems0:
    r"""
    IPTag contains the IpTag associated with the object.

    Attributes
    ----------
    tag : str, default is Undefined, required
        Tag specifies the value of the IP tag associated with the public IP. Example: SQL.
    $type : str, default is Undefined, required
        Type specifies the IP tag type. Example: FirstPartyUsage.
    """


    tag: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0:
    r"""
    SubnetSpec configures an Azure subnet.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, optional
        CIDRBlocks defines the subnet's address space, specified as one or more address prefixes in CIDR notation.
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the subnet.
        READ-ONLY
    name : str, default is Undefined, required
        Name defines a name for the subnet resource.
    natGateway : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0NatGateway, default is Undefined, optional
        nat gateway
    privateEndpoints : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0PrivateEndpointsItems0], default is Undefined, optional
        PrivateEndpoints defines a list of private endpoints that should be attached to this subnet.
    role : str, default is Undefined, required
        Role defines the subnet role (eg. Node, ControlPlane)
    routeTable : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0RouteTable, default is Undefined, optional
        route table
    securityGroup : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0SecurityGroup, default is Undefined, optional
        security group
    serviceEndpoints : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0ServiceEndpointsItems0], default is Undefined, optional
        ServiceEndpoints is a slice of Virtual Network service endpoints to enable for the subnets.
    """


    cidrBlocks?: [str]

    id?: str

    name: str

    natGateway?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0NatGateway

    privateEndpoints?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0PrivateEndpointsItems0]

    role: "node" | "control-plane" | "bastion" | "cluster"

    routeTable?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0RouteTable

    securityGroup?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0SecurityGroup

    serviceEndpoints?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0ServiceEndpointsItems0]


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0NatGateway:
    r"""
    NatGateway associated with this subnet.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the NAT gateway.
        READ-ONLY
    ip : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0NatGatewayIP, default is Undefined, optional
        ip
    name : str, default is Undefined, required
        name
    """


    id?: str

    ip?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0NatGatewayIP

    name: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0NatGatewayIP:
    r"""
    PublicIPSpec defines the inputs to create an Azure public IP address.

    Attributes
    ----------
    dnsName : str, default is Undefined, optional
        dns name
    ipTags : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0NatGatewayIPIPTagsItems0], default is Undefined, optional
        ip tags
    name : str, default is Undefined, required
        name
    """


    dnsName?: str

    ipTags?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0NatGatewayIPIPTagsItems0]

    name: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0NatGatewayIPIPTagsItems0:
    r"""
    IPTag contains the IpTag associated with the object.

    Attributes
    ----------
    tag : str, default is Undefined, required
        Tag specifies the value of the IP tag associated with the public IP. Example: SQL.
    $type : str, default is Undefined, required
        Type specifies the IP tag type. Example: FirstPartyUsage.
    """


    tag: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0PrivateEndpointsItems0:
    r"""
    PrivateEndpointSpec configures an Azure Private Endpoint.

    Attributes
    ----------
    applicationSecurityGroups : [str], default is Undefined, optional
        ApplicationSecurityGroups specifies the Application security group in which the private endpoint IP configuration is included.
    customNetworkInterfaceName : str, default is Undefined, optional
        CustomNetworkInterfaceName specifies the network interface name associated with the private endpoint.
    location : str, default is Undefined, optional
        Location specifies the region to create the private endpoint.
    manualApproval : bool, default is Undefined, optional
        ManualApproval specifies if the connection approval needs to be done manually or not.
        Set it true when the network admin does not have access to approve connections to the remote resource.
        Defaults to false.
    name : str, default is Undefined, required
        Name specifies the name of the private endpoint.
    privateIPAddresses : [str], default is Undefined, optional
        PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
        They have to be part of the subnet where the private endpoint is linked.
    privateLinkServiceConnections : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0PrivateEndpointsItems0PrivateLinkServiceConnectionsItems0], default is Undefined, optional
        PrivateLinkServiceConnections specifies Private Link Service Connections of the private endpoint.
    """


    applicationSecurityGroups?: [str]

    customNetworkInterfaceName?: str

    location?: str

    manualApproval?: bool

    name: str

    privateIPAddresses?: [str]

    privateLinkServiceConnections?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0PrivateEndpointsItems0PrivateLinkServiceConnectionsItems0]


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0PrivateEndpointsItems0PrivateLinkServiceConnectionsItems0:
    r"""
    PrivateLinkServiceConnection defines the specification for a private link service connection associated with a private endpoint.

    Attributes
    ----------
    groupIDs : [str], default is Undefined, optional
        GroupIDs specifies the ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
    name : str, default is Undefined, optional
        Name specifies the name of the private link service.
    privateLinkServiceID : str, default is Undefined, optional
        PrivateLinkServiceID specifies the resource ID of the private link service.
    requestMessage : str, default is Undefined, optional
        RequestMessage specifies a message passed to the owner of the remote resource with the private endpoint connection request.
    """


    groupIDs?: [str]

    name?: str

    privateLinkServiceID?: str

    requestMessage?: str


    check:
        len(requestMessage) <= 140 if requestMessage


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0RouteTable:
    r"""
    RouteTable defines the route table that should be attached to this subnet.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the route table.
        READ-ONLY
    name : str, default is Undefined, required
        name
    """


    id?: str

    name: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0SecurityGroup:
    r"""
    SecurityGroup defines the NSG (network security group) that should be attached to this subnet.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the security group.
        READ-ONLY
    name : str, default is Undefined, required
        name
    securityRules : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0SecurityGroupSecurityRulesItems0], default is Undefined, optional
        SecurityRules is a slice of Azure security rules for security groups.
    tags : {str:str}, default is Undefined, optional
        Tags defines a map of tags.
    """


    id?: str

    name: str

    securityRules?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0SecurityGroupSecurityRulesItems0]

    tags?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0SecurityGroupSecurityRulesItems0:
    r"""
    SecurityRule defines an Azure security rule for security groups.

    Attributes
    ----------
    action : str, default is "Allow", optional
        Action specifies whether network traffic is allowed or denied. Can either be "Allow" or "Deny". Defaults to "Allow".
    description : str, default is Undefined, required
        A description for this rule. Restricted to 140 chars.
    destination : str, default is Undefined, optional
        Destination is the destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
    destinationPorts : str, default is Undefined, optional
        DestinationPorts specifies the destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
    direction : str, default is Undefined, required
        Direction indicates whether the rule applies to inbound, or outbound traffic. "Inbound" or "Outbound".
    name : str, default is Undefined, required
        Name is a unique name within the network security group.
    priority : int, default is Undefined, optional
        Priority is a number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.
    $protocol : str, default is Undefined, required
        Protocol specifies the protocol type. "Tcp", "Udp", "Icmp", or "*".
    source : str, default is Undefined, optional
        Source specifies the CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
    sourcePorts : str, default is Undefined, optional
        SourcePorts specifies source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
    sources : [str], default is Undefined, optional
        Sources specifies The CIDR or source IP ranges.
    """


    action?: "Allow" | "Deny" = "Allow"

    description: str

    destination?: str

    destinationPorts?: str

    direction: "Inbound" | "Outbound"

    name: str

    priority?: int

    $protocol: "Tcp" | "Udp" | "Icmp" | "*"

    source?: str

    sourcePorts?: str

    sources?: [str]


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecSubnetsItems0ServiceEndpointsItems0:
    r"""
    ServiceEndpointSpec configures an Azure Service Endpoint.

    Attributes
    ----------
    locations : [str], default is Undefined, required
        locations
    service : str, default is Undefined, required
        service
    """


    locations: [str]

    service: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnet:
    r"""
    Vnet is the configuration for the Azure virtual network.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, optional
        CIDRBlocks defines the virtual network's address space, specified as one or more address prefixes in CIDR notation.
    id : str, default is Undefined, optional
        ID is the Azure resource ID of the virtual network.
        READ-ONLY
    name : str, default is Undefined, required
        Name defines a name for the virtual network resource.
    peerings : [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnetPeeringsItems0], default is Undefined, optional
        Peerings defines a list of peerings of the newly created virtual network with existing virtual networks.
    resourceGroup : str, default is Undefined, optional
        ResourceGroup is the name of the resource group of the existing virtual network
        or the resource group where a managed virtual network should be created.
    tags : {str:str}, default is Undefined, optional
        Tags is a collection of tags describing the resource.
    """


    cidrBlocks?: [str]

    id?: str

    name: str

    peerings?: [InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnetPeeringsItems0]

    resourceGroup?: str

    tags?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnetPeeringsItems0:
    r"""
    VnetPeeringSpec specifies an existing remote virtual network to peer with the AzureCluster's virtual network.

    Attributes
    ----------
    forwardPeeringProperties : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnetPeeringsItems0ForwardPeeringProperties, default is Undefined, optional
        forward peering properties
    remoteVnetName : str, default is Undefined, required
        RemoteVnetName defines name of the remote virtual network.
    resourceGroup : str, default is Undefined, optional
        ResourceGroup is the resource group name of the remote virtual network.
    reversePeeringProperties : InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnetPeeringsItems0ReversePeeringProperties, default is Undefined, optional
        reverse peering properties
    """


    forwardPeeringProperties?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnetPeeringsItems0ForwardPeeringProperties

    remoteVnetName: str

    resourceGroup?: str

    reversePeeringProperties?: InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnetPeeringsItems0ReversePeeringProperties


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnetPeeringsItems0ForwardPeeringProperties:
    r"""
    ForwardPeeringProperties specifies VnetPeeringProperties for peering from the cluster's virtual network to the
    remote virtual network.

    Attributes
    ----------
    allowForwardedTraffic : bool, default is Undefined, optional
        AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be
        allowed/disallowed in remote virtual network.
    allowGatewayTransit : bool, default is Undefined, optional
        AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual
        network.
    allowVirtualNetworkAccess : bool, default is Undefined, optional
        AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access
        the VMs in remote virtual network space.
    useRemoteGateways : bool, default is Undefined, optional
        UseRemoteGateways specifies if remote gateways can be used on this virtual network.
        If the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network
        will use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.
        This flag cannot be set if virtual network already has a gateway.
    """


    allowForwardedTraffic?: bool

    allowGatewayTransit?: bool

    allowVirtualNetworkAccess?: bool

    useRemoteGateways?: bool


schema InfrastructureClusterxK8sIoV1beta1AzureClusterSpecNetworkSpecVnetPeeringsItems0ReversePeeringProperties:
    r"""
    ReversePeeringProperties specifies VnetPeeringProperties for peering from the remote virtual network to the
    cluster's virtual network.

    Attributes
    ----------
    allowForwardedTraffic : bool, default is Undefined, optional
        AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be
        allowed/disallowed in remote virtual network.
    allowGatewayTransit : bool, default is Undefined, optional
        AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual
        network.
    allowVirtualNetworkAccess : bool, default is Undefined, optional
        AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access
        the VMs in remote virtual network space.
    useRemoteGateways : bool, default is Undefined, optional
        UseRemoteGateways specifies if remote gateways can be used on this virtual network.
        If the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network
        will use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.
        This flag cannot be set if virtual network already has a gateway.
    """


    allowForwardedTraffic?: bool

    allowGatewayTransit?: bool

    allowVirtualNetworkAccess?: bool

    useRemoteGateways?: bool


schema InfrastructureClusterxK8sIoV1beta1AzureClusterStatus:
    r"""
    AzureClusterStatus defines the observed state of AzureCluster.

    Attributes
    ----------
    conditions : [InfrastructureClusterxK8sIoV1beta1AzureClusterStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the AzureCluster.
    failureDomains : {str:InfrastructureClusterxK8sIoV1beta1AzureClusterStatusFailureDomainsAnon}, default is Undefined, optional
        FailureDomains specifies the list of unique failure domains for the location/region of the cluster.
        A FailureDomain maps to Availability Zone with an Azure Region (if the region support them). An
        Availability Zone is a separate data center within a region and they can be used to ensure
        the cluster is more resilient to failure.
        See: https://learn.microsoft.com/azure/reliability/availability-zones-overview
        This list will be used by Cluster API to try and spread the machines across the failure domains.
    longRunningOperationStates : [InfrastructureClusterxK8sIoV1beta1AzureClusterStatusLongRunningOperationStatesItems0], default is Undefined, optional
        LongRunningOperationStates saves the states for Azure long-running operations so they can be continued on the
        next reconciliation loop.
    ready : bool, default is Undefined, optional
        Ready is true when the provider resource is ready.
    """


    conditions?: [InfrastructureClusterxK8sIoV1beta1AzureClusterStatusConditionsItems0]

    failureDomains?: {str:InfrastructureClusterxK8sIoV1beta1AzureClusterStatusFailureDomainsAnon}

    longRunningOperationStates?: [InfrastructureClusterxK8sIoV1beta1AzureClusterStatusLongRunningOperationStatesItems0]

    ready?: bool


schema InfrastructureClusterxK8sIoV1beta1AzureClusterStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        message is a human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        reason is the reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


    check:
        len(message) <= 10240 if message
        len(message) >= 1 if message
        len(reason) <= 256 if reason
        len(reason) >= 1 if reason
        len(severity) <= 32 if severity
        len($type) <= 256
        len($type) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureClusterStatusFailureDomainsAnon:
    r"""
    FailureDomainSpec is the Schema for Cluster API failure domains.
    It allows controllers to understand how many failure domains a cluster can optionally span across.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        attributes is a free form map of attributes an infrastructure provider might use or require.
    controlPlane : bool, default is Undefined, optional
        controlPlane determines if this failure domain is suitable for use by control plane machines.
    """


    attributes?: {str:str}

    controlPlane?: bool


schema InfrastructureClusterxK8sIoV1beta1AzureClusterStatusLongRunningOperationStatesItems0:
    r"""
    Future contains the data needed for an Azure long-running operation to continue across reconcile loops.

    Attributes
    ----------
    data : str, default is Undefined, required
        Data is the base64 url encoded json Azure AutoRest Future.
    name : str, default is Undefined, required
        Name is the name of the Azure resource.
        Together with the service name, this forms the unique identifier for the future.
    resourceGroup : str, default is Undefined, optional
        ResourceGroup is the Azure resource group for the resource.
    serviceName : str, default is Undefined, required
        ServiceName is the name of the Azure service.
        Together with the name of the resource, this forms the unique identifier for the future.
    $type : str, default is Undefined, required
        Type describes the type of future, such as update, create, delete, etc.
    """


    data: str

    name: str

    resourceGroup?: str

    serviceName: str

    $type: str


