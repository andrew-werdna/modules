"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AzureClusterIdentity:
    r"""
    AzureClusterIdentity is the Schema for the azureclustersidentities API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AzureClusterIdentity", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1AzureClusterIdentityStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "AzureClusterIdentity" = "AzureClusterIdentity"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpec

    status?: InfrastructureClusterxK8sIoV1beta1AzureClusterIdentityStatus


schema InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpec:
    r"""
    AzureClusterIdentitySpec defines the parameters that are used to create an AzureIdentity.

    Attributes
    ----------
    allowedNamespaces : InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecAllowedNamespaces, default is Undefined, optional
        allowed namespaces
    certPath : str, default is Undefined, optional
        CertPath is the path where certificates exist. When set, it takes precedence over ClientSecret for types that use certs like ServicePrincipalCertificate.
    clientID : str, default is Undefined, required
        ClientID is the service principal client ID.
        Both User Assigned MSI and SP can use this field.
    clientSecret : InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecClientSecret, default is Undefined, optional
        client secret
    resourceID : str, default is Undefined, optional
        ResourceID is the Azure resource ID for the User Assigned MSI resource.
        Only applicable when type is UserAssignedMSI.

        Deprecated: This field no longer has any effect.
    tenantID : str, default is Undefined, required
        TenantID is the service principal primary tenant id.
    $type : str, default is Undefined, required
        Type is the type of Azure Identity used.
        ServicePrincipal, ServicePrincipalCertificate, UserAssignedMSI, ManualServicePrincipal, UserAssignedIdentityCredential, or WorkloadIdentity.
    userAssignedIdentityCredentialsCloudType : str, default is Undefined, optional
        UserAssignedIdentityCredentialsCloudType is used with UserAssignedIdentityCredentialsPath to specify the Cloud
        type. Can only be one of the following values: public, china, or usgovernment
        If a value is not specified, defaults to public
    userAssignedIdentityCredentialsPath : str, default is Undefined, optional
        UserAssignedIdentityCredentialsPath is the path where an existing JSON file exists containing the JSON format of
        a UserAssignedIdentityCredentials struct.
        See the msi-dataplane for more details on UserAssignedIdentityCredentials - https://github.com/Azure/msi-dataplane/blob/main/pkg/dataplane/internal/client/models.go#L125
    """


    allowedNamespaces?: InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecAllowedNamespaces

    certPath?: str

    clientID: str

    clientSecret?: InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecClientSecret

    resourceID?: str

    tenantID: str

    $type: "ServicePrincipal" | "UserAssignedMSI" | "ManualServicePrincipal" | "ServicePrincipalCertificate" | "WorkloadIdentity" | "UserAssignedIdentityCredential"

    userAssignedIdentityCredentialsCloudType?: str

    userAssignedIdentityCredentialsPath?: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecAllowedNamespaces:
    r"""
    AllowedNamespaces is used to identify the namespaces the clusters are allowed to use the identity from.
    Namespaces can be selected either using an array of namespaces or with label selector.
    An empty allowedNamespaces object indicates that AzureClusters can use this identity from any namespace.
    If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
    A namespace should be either in the NamespaceList or match with Selector to use the identity.

    Attributes
    ----------
    list : [str], default is Undefined, optional
        A nil or empty list indicates that AzureCluster cannot use the identity from any namespace.
    selector : InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecAllowedNamespacesSelector, default is Undefined, optional
        selector
    """


    list?: [str]

    selector?: InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecAllowedNamespacesSelector


schema InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecAllowedNamespacesSelector:
    r"""
    Selector is a selector of namespaces that AzureCluster can
    use this Identity from. This is a standard Kubernetes LabelSelector,
    a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed.

    A nil or empty selector indicates that AzureCluster cannot use this
    AzureClusterIdentity from any namespace.

    Attributes
    ----------
    matchExpressions : [InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InfrastructureClusterxK8sIoV1beta1AzureClusterIdentitySpecClientSecret:
    r"""
    ClientSecret is a secret reference which should contain either a Service Principal password or certificate secret.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name is unique within a namespace to reference a secret resource.
    namespace : str, default is Undefined, optional
        namespace defines the space within which the secret name must be unique.
    """


    name?: str

    namespace?: str


schema InfrastructureClusterxK8sIoV1beta1AzureClusterIdentityStatus:
    r"""
    AzureClusterIdentityStatus defines the observed state of AzureClusterIdentity.

    Attributes
    ----------
    conditions : [InfrastructureClusterxK8sIoV1beta1AzureClusterIdentityStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the AzureClusterIdentity.
    """


    conditions?: [InfrastructureClusterxK8sIoV1beta1AzureClusterIdentityStatusConditionsItems0]


schema InfrastructureClusterxK8sIoV1beta1AzureClusterIdentityStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        message is a human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        reason is the reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


    check:
        len(message) <= 10240 if message
        len(message) >= 1 if message
        len(reason) <= 256 if reason
        len(reason) >= 1 if reason
        len(severity) <= 32 if severity
        len($type) <= 256
        len($type) >= 1


