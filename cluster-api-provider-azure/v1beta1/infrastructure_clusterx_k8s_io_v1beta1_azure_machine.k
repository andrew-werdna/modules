"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema AzureMachine:
    r"""
    AzureMachine is the Schema for the azuremachines API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AzureMachine", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AzureMachineSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1AzureMachineStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "AzureMachine" = "AzureMachine"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpec

    status?: InfrastructureClusterxK8sIoV1beta1AzureMachineStatus


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpec:
    r"""
    AzureMachineSpec defines the desired state of AzureMachine.

    Attributes
    ----------
    acceleratedNetworking : bool, default is Undefined, optional
        Deprecated: AcceleratedNetworking should be set in the networkInterfaces field.
    additionalCapabilities : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecAdditionalCapabilities, default is Undefined, optional
        additional capabilities
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
        Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the
        AzureMachine's value takes precedence.
    allocatePublicIP : bool, default is Undefined, optional
        AllocatePublicIP allows the ability to create dynamic public ips for machines where this value is true.
    capacityReservationGroupID : str, default is Undefined, optional
        CapacityReservationGroupID specifies the capacity reservation group resource id that should be
        used for allocating the virtual machine.
        The field size should be greater than 0 and the field input must start with '/'.
        The input for capacityReservationGroupID must be similar to '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}'.
        The keys which are used should be among 'subscriptions', 'providers' and 'resourcegroups' followed by valid ID or names respectively.
        It is optional but may not be changed once set.
    dataDisks : [InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0], default is Undefined, optional
        DataDisk specifies the parameters that are used to add one or more data disks to the machine
    diagnostics : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDiagnostics, default is Undefined, optional
        diagnostics
    disableExtensionOperations : bool, default is Undefined, optional
        DisableExtensionOperations specifies whether extension operations should be disabled on the virtual machine.
        Use this setting only if VMExtensions are not supported by your image, as it disables CAPZ bootstrapping extension used for detecting Kubernetes bootstrap failure.
        This may only be set to True when no extensions are configured on the virtual machine.
    disableVMBootstrapExtension : bool, default is Undefined, optional
        DisableVMBootstrapExtension specifies whether the VM bootstrap extension should be disabled on the virtual machine.
        Use this setting if you want to disable only the bootstrapping extension and not all extensions.
    dnsServers : [str], default is Undefined, optional
        DNSServers adds a list of DNS Server IP addresses to the VM NICs.
    enableIPForwarding : bool, default is Undefined, optional
        EnableIPForwarding enables IP Forwarding in Azure which is required for some CNI's to send traffic from a pods on one machine
        to another. This is required for IpV6 with Calico in combination with User Defined Routes (set by the Azure Cloud Controller
        manager). Default is false for disabled.
    failureDomain : str, default is Undefined, optional
        FailureDomain is the failure domain unique identifier this Machine should be attached to,
        as defined in Cluster API. This relates to an Azure Availability Zone
    identity : str, default is "None", optional
        Identity is the type of identity used for the virtual machine.
        The type 'SystemAssigned' is an implicitly created identity.
        The generated identity will be assigned a Subscription contributor role.
        The type 'UserAssigned' is a standalone Azure resource provided by the user
        and assigned to the VM
    image : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImage, default is Undefined, optional
        image
    networkInterfaces : [InfrastructureClusterxK8sIoV1beta1AzureMachineSpecNetworkInterfacesItems0], default is Undefined, optional
        NetworkInterfaces specifies a list of network interface configurations.
        If left unspecified, the VM will get a single network interface with a
        single IPConfig in the subnet specified in the cluster's node subnet field.
        The primary interface will be the first networkInterface specified (index 0) in the list.
    osDisk : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDisk, default is Undefined, required
        os disk
    providerID : str, default is Undefined, optional
        ProviderID is the unique identifier as specified by the cloud provider.
    roleAssignmentName : str, default is Undefined, optional
        Deprecated: RoleAssignmentName should be set in the systemAssignedIdentityRole field.
    securityProfile : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSecurityProfile, default is Undefined, optional
        security profile
    spotVMOptions : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSpotVMOptions, default is Undefined, optional
        spot VM options
    sshPublicKey : str, default is Undefined, optional
        SSHPublicKey is the SSH public key string, base64-encoded to add to a Virtual Machine. Linux only.
        Refer to documentation on how to set up SSH access on Windows instances.
    subnetName : str, default is Undefined, optional
        Deprecated: SubnetName should be set in the networkInterfaces field.
    systemAssignedIdentityRole : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSystemAssignedIdentityRole, default is Undefined, optional
        system assigned identity role
    userAssignedIdentities : [InfrastructureClusterxK8sIoV1beta1AzureMachineSpecUserAssignedIdentitiesItems0], default is Undefined, optional
        UserAssignedIdentities is a list of standalone Azure identities provided by the user
        The lifecycle of a user-assigned identity is managed separately from the lifecycle of
        the AzureMachine.
        See https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
    vmExtensions : [InfrastructureClusterxK8sIoV1beta1AzureMachineSpecVMExtensionsItems0], default is Undefined, optional
        VMExtensions specifies a list of extensions to be added to the virtual machine.
    vmSize : str, default is Undefined, required
        vm size
    """


    acceleratedNetworking?: bool

    additionalCapabilities?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecAdditionalCapabilities

    additionalTags?: {str:str}

    allocatePublicIP?: bool

    capacityReservationGroupID?: str

    dataDisks?: [InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0]

    diagnostics?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDiagnostics

    disableExtensionOperations?: bool

    disableVMBootstrapExtension?: bool

    dnsServers?: [str]

    enableIPForwarding?: bool

    failureDomain?: str

    identity?: "None" | "SystemAssigned" | "UserAssigned" = "None"

    image?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImage

    networkInterfaces?: [InfrastructureClusterxK8sIoV1beta1AzureMachineSpecNetworkInterfacesItems0]

    osDisk: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDisk

    providerID?: str

    roleAssignmentName?: str

    securityProfile?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSecurityProfile

    spotVMOptions?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSpotVMOptions

    sshPublicKey?: str

    subnetName?: str

    systemAssignedIdentityRole?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSystemAssignedIdentityRole

    userAssignedIdentities?: [InfrastructureClusterxK8sIoV1beta1AzureMachineSpecUserAssignedIdentitiesItems0]

    vmExtensions?: [InfrastructureClusterxK8sIoV1beta1AzureMachineSpecVMExtensionsItems0]

    vmSize: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecAdditionalCapabilities:
    r"""
    AdditionalCapabilities specifies additional capabilities enabled or disabled on the virtual machine.

    Attributes
    ----------
    ultraSSDEnabled : bool, default is Undefined, optional
        UltraSSDEnabled enables or disables Azure UltraSSD capability for the virtual machine.
        Defaults to true if Ultra SSD data disks are specified,
        otherwise it doesn't set the capability on the VM.
    """


    ultraSSDEnabled?: bool


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0:
    r"""
    DataDisk specifies the parameters that are used to add one or more data disks to the machine.

    Attributes
    ----------
    cachingType : str, default is Undefined, optional
        CachingType specifies the caching requirements.
    diskSizeGB : int, default is Undefined, required
        DiskSizeGB is the size in GB to assign to the data disk.
    lun : int, default is Undefined, optional
        Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
        The value must be between 0 and 63.
    managedDisk : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDisk, default is Undefined, optional
        managed disk
    nameSuffix : str, default is Undefined, required
        NameSuffix is the suffix to be appended to the machine name to generate the disk name.
        Each disk name will be in format <machineName>_<nameSuffix>.
    """


    cachingType?: "None" | "ReadOnly" | "ReadWrite"

    diskSizeGB: int

    lun?: int

    managedDisk?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDisk

    nameSuffix: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDisk:
    r"""
    ManagedDisk specifies the Managed Disk parameters for the data disk.

    Attributes
    ----------
    diskEncryptionSet : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDiskDiskEncryptionSet, default is Undefined, optional
        disk encryption set
    securityProfile : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDiskSecurityProfile, default is Undefined, optional
        security profile
    storageAccountType : str, default is Undefined, optional
        storage account type
    """


    diskEncryptionSet?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDiskDiskEncryptionSet

    securityProfile?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDiskSecurityProfile

    storageAccountType?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDiskDiskEncryptionSet:
    r"""
    DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the managed disk.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
    """


    id?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDiskSecurityProfile:
    r"""
    SecurityProfile specifies the security profile for the managed disk.

    Attributes
    ----------
    diskEncryptionSet : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDiskSecurityProfileDiskEncryptionSet, default is Undefined, optional
        disk encryption set
    securityEncryptionType : str, default is Undefined, optional
        SecurityEncryptionType specifies the encryption type of the managed disk.
        It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
        blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
        When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
        When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
        VirtualizedTrustedPlatformModule should be set to Enabled.
        It can be set only for Confidential VMs.
    """


    diskEncryptionSet?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDiskSecurityProfileDiskEncryptionSet

    securityEncryptionType?: "VMGuestStateOnly" | "DiskWithVMGuestState"


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDataDisksItems0ManagedDiskSecurityProfileDiskEncryptionSet:
    r"""
    DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
    managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
    VMGuest blob.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
    """


    id?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDiagnostics:
    r"""
    Diagnostics specifies the diagnostics settings for a virtual machine.
    If not specified then Boot diagnostics (Managed) will be enabled.

    Attributes
    ----------
    boot : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDiagnosticsBoot, default is Undefined, optional
        boot
    """


    boot?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDiagnosticsBoot


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDiagnosticsBoot:
    r"""
    Boot configures the boot diagnostics settings for the virtual machine.
    This allows to configure capturing serial output from the virtual machine on boot.
    This is useful for debugging software based launch issues.
    If not specified then Boot diagnostics (Managed) will be enabled.

    Attributes
    ----------
    storageAccountType : str, default is Undefined, required
        StorageAccountType determines if the storage account for storing the diagnostics data
        should be disabled (Disabled), provisioned by Azure (Managed) or by the user (UserManaged).
    userManaged : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDiagnosticsBootUserManaged, default is Undefined, optional
        user managed
    """


    storageAccountType: "Managed" | "UserManaged" | "Disabled"

    userManaged?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDiagnosticsBootUserManaged


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecDiagnosticsBootUserManaged:
    r"""
    UserManaged provides a reference to the user-managed storage account.

    Attributes
    ----------
    storageAccountURI : str, default is Undefined, required
        StorageAccountURI is the URI of the user-managed storage account.
        The URI typically will be `https://<mystorageaccountname>.blob.core.windows.net/`
        but may differ if you are using Azure DNS zone endpoints.
        You can find the correct endpoint by looking for the Blob Primary Endpoint in the
        endpoints tab in the Azure console or with the CLI by issuing
        `az storage account list --query='[].{name: name, "resource group": resourceGroup, "blob endpoint": primaryEndpoints.blob}'`.
    """


    storageAccountURI: str


    check:
        len(storageAccountURI) <= 1024
        _regex_match(str(storageAccountURI), r"^https://")


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImage:
    r"""
    Image is used to provide details of an image to use during VM creation.
    If image details are omitted, the default is to use an Azure Compute Gallery Image
    from CAPZ's community gallery.

    Attributes
    ----------
    computeGallery : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageComputeGallery, default is Undefined, optional
        compute gallery
    id : str, default is Undefined, optional
        ID specifies an image to use by ID
    marketplace : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageMarketplace, default is Undefined, optional
        marketplace
    sharedGallery : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageSharedGallery, default is Undefined, optional
        shared gallery
    """


    computeGallery?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageComputeGallery

    id?: str

    marketplace?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageMarketplace

    sharedGallery?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageSharedGallery


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageComputeGallery:
    r"""
    ComputeGallery specifies an image to use from the Azure Compute Gallery

    Attributes
    ----------
    gallery : str, default is Undefined, required
        Gallery specifies the name of the compute image gallery that contains the image
    name : str, default is Undefined, required
        Name is the name of the image
    plan : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageComputeGalleryPlan, default is Undefined, optional
        plan
    resourceGroup : str, default is Undefined, optional
        ResourceGroup specifies the resource group containing the private compute gallery.
    subscriptionID : str, default is Undefined, optional
        SubscriptionID is the identifier of the subscription that contains the private compute gallery.
    version : str, default is Undefined, required
        Version specifies the version of the marketplace image. The allowed formats
        are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
        Specify 'latest' to use the latest version of an image available at deploy time.
        Even if you use 'latest', the VM image will not automatically update after deploy
        time even if a new version becomes available.
    """


    gallery: str

    name: str

    plan?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageComputeGalleryPlan

    resourceGroup?: str

    subscriptionID?: str

    version: str


    check:
        len(gallery) >= 1
        len(name) >= 1
        len(version) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageComputeGalleryPlan:
    r"""
    Plan contains plan information.

    Attributes
    ----------
    offer : str, default is Undefined, required
        Offer specifies the name of a group of related images created by the publisher.
        For example, UbuntuServer, WindowsServer
    publisher : str, default is Undefined, required
        Publisher is the name of the organization that created the image
    sku : str, default is Undefined, required
        SKU specifies an instance of an offer, such as a major release of a distribution.
        For example, 18.04-LTS, 2019-Datacenter
    """


    offer: str

    publisher: str

    sku: str


    check:
        len(offer) >= 1
        len(publisher) >= 1
        len(sku) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageMarketplace:
    r"""
    Marketplace specifies an image to use from the Azure Marketplace

    Attributes
    ----------
    offer : str, default is Undefined, required
        Offer specifies the name of a group of related images created by the publisher.
        For example, UbuntuServer, WindowsServer
    publisher : str, default is Undefined, required
        Publisher is the name of the organization that created the image
    sku : str, default is Undefined, required
        SKU specifies an instance of an offer, such as a major release of a distribution.
        For example, 18.04-LTS, 2019-Datacenter
    thirdPartyImage : bool, default is Undefined, optional
        ThirdPartyImage indicates the image is published by a third party publisher and a Plan
        will be generated for it.
    version : str, default is Undefined, required
        Version specifies the version of an image sku. The allowed formats
        are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
        Specify 'latest' to use the latest version of an image available at deploy time.
        Even if you use 'latest', the VM image will not automatically update after deploy
        time even if a new version becomes available.
    """


    offer: str

    publisher: str

    sku: str

    thirdPartyImage?: bool = False

    version: str


    check:
        len(offer) >= 1
        len(publisher) >= 1
        len(sku) >= 1
        len(version) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecImageSharedGallery:
    r"""
    SharedGallery specifies an image to use from an Azure Shared Image Gallery
    Deprecated: use ComputeGallery instead.

    Attributes
    ----------
    gallery : str, default is Undefined, required
        Gallery specifies the name of the shared image gallery that contains the image
    name : str, default is Undefined, required
        Name is the name of the image
    offer : str, default is Undefined, optional
        Offer specifies the name of a group of related images created by the publisher.
        For example, UbuntuServer, WindowsServer
        This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
        This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
    publisher : str, default is Undefined, optional
        Publisher is the name of the organization that created the image.
        This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
        This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
    resourceGroup : str, default is Undefined, required
        ResourceGroup specifies the resource group containing the shared image gallery
    sku : str, default is Undefined, optional
        SKU specifies an instance of an offer, such as a major release of a distribution.
        For example, 18.04-LTS, 2019-Datacenter
        This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
        This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
    subscriptionID : str, default is Undefined, required
        SubscriptionID is the identifier of the subscription that contains the shared image gallery
    version : str, default is Undefined, required
        Version specifies the version of the marketplace image. The allowed formats
        are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
        Specify 'latest' to use the latest version of an image available at deploy time.
        Even if you use 'latest', the VM image will not automatically update after deploy
        time even if a new version becomes available.
    """


    gallery: str

    name: str

    offer?: str

    publisher?: str

    resourceGroup: str

    sku?: str

    subscriptionID: str

    version: str


    check:
        len(gallery) >= 1
        len(name) >= 1
        len(resourceGroup) >= 1
        len(subscriptionID) >= 1
        len(version) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecNetworkInterfacesItems0:
    r"""
    NetworkInterface defines a network interface.

    Attributes
    ----------
    acceleratedNetworking : bool, default is Undefined, optional
        AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on
        whether the requested VMSize supports accelerated networking.
        If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
    privateIPConfigs : int, default is Undefined, optional
        PrivateIPConfigs specifies the number of private IP addresses to attach to the interface.
        Defaults to 1 if not specified.
    subnetName : str, default is Undefined, optional
        SubnetName specifies the subnet in which the new network interface will be placed.
    """


    acceleratedNetworking?: bool

    privateIPConfigs?: int

    subnetName?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDisk:
    r"""
    OSDisk specifies the parameters for the operating system disk of the machine

    Attributes
    ----------
    cachingType : str, default is "None", optional
        CachingType specifies the caching requirements.
    diffDiskSettings : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskDiffDiskSettings, default is Undefined, optional
        diff disk settings
    diskSizeGB : int, default is Undefined, optional
        DiskSizeGB is the size in GB to assign to the OS disk.
        Will have a default of 30GB if not provided
    managedDisk : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDisk, default is Undefined, optional
        managed disk
    osType : str, default is "Linux", required
        os type
    """


    cachingType?: "None" | "ReadOnly" | "ReadWrite" = "None"

    diffDiskSettings?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskDiffDiskSettings

    diskSizeGB?: int

    managedDisk?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDisk

    osType: str = "Linux"


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskDiffDiskSettings:
    r"""
    DiffDiskSettings describe ephemeral disk settings for the os disk.

    Attributes
    ----------
    option : str, default is Undefined, required
        Option enables ephemeral OS when set to "Local"
        See https://learn.microsoft.com/azure/virtual-machines/ephemeral-os-disks for full details
    placement : str, default is Undefined, optional
        Placement specifies the ephemeral disk placement for operating system disk. If placement is specified, Option must be set to "Local".
    """


    option: "Local"

    placement?: "CacheDisk" | "NvmeDisk" | "ResourceDisk"


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDisk:
    r"""
    ManagedDisk specifies the Managed Disk parameters for the OS disk.

    Attributes
    ----------
    diskEncryptionSet : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDiskDiskEncryptionSet, default is Undefined, optional
        disk encryption set
    securityProfile : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDiskSecurityProfile, default is Undefined, optional
        security profile
    storageAccountType : str, default is Undefined, optional
        storage account type
    """


    diskEncryptionSet?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDiskDiskEncryptionSet

    securityProfile?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDiskSecurityProfile

    storageAccountType?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDiskDiskEncryptionSet:
    r"""
    DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the managed disk.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
    """


    id?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDiskSecurityProfile:
    r"""
    SecurityProfile specifies the security profile for the managed disk.

    Attributes
    ----------
    diskEncryptionSet : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDiskSecurityProfileDiskEncryptionSet, default is Undefined, optional
        disk encryption set
    securityEncryptionType : str, default is Undefined, optional
        SecurityEncryptionType specifies the encryption type of the managed disk.
        It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
        blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
        When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
        When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
        VirtualizedTrustedPlatformModule should be set to Enabled.
        It can be set only for Confidential VMs.
    """


    diskEncryptionSet?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDiskSecurityProfileDiskEncryptionSet

    securityEncryptionType?: "VMGuestStateOnly" | "DiskWithVMGuestState"


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecOsDiskManagedDiskSecurityProfileDiskEncryptionSet:
    r"""
    DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
    managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
    VMGuest blob.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
    """


    id?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSecurityProfile:
    r"""
    SecurityProfile specifies the Security profile settings for a virtual machine.

    Attributes
    ----------
    encryptionAtHost : bool, default is Undefined, optional
        This field indicates whether Host Encryption should be enabled
        or disabled for a virtual machine or virtual machine scale set.
        This should be disabled when SecurityEncryptionType is set to DiskWithVMGuestState.
        Default is disabled.
    securityType : str, default is Undefined, optional
        SecurityType specifies the SecurityType of the virtual machine. It has to be set to any specified value to
        enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set.
    uefiSettings : InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSecurityProfileUefiSettings, default is Undefined, optional
        uefi settings
    """


    encryptionAtHost?: bool

    securityType?: "ConfidentialVM" | "TrustedLaunch"

    uefiSettings?: InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSecurityProfileUefiSettings


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSecurityProfileUefiSettings:
    r"""
    UefiSettings specifies the security settings like secure boot and vTPM used while creating the virtual machine.

    Attributes
    ----------
    secureBootEnabled : bool, default is Undefined, optional
        SecureBootEnabled specifies whether secure boot should be enabled on the virtual machine.
        Secure Boot verifies the digital signature of all boot components and halts the boot process if signature verification fails.
        If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
    vTpmEnabled : bool, default is Undefined, optional
        VTpmEnabled specifies whether vTPM should be enabled on the virtual machine.
        When true it enables the virtualized trusted platform module measurements to create a known good boot integrity policy baseline.
        The integrity policy baseline is used for comparison with measurements from subsequent VM boots to determine if anything has changed.
        This is required to be set to Enabled if SecurityEncryptionType is defined.
        If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
    """


    secureBootEnabled?: bool

    vTpmEnabled?: bool


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSpotVMOptions:
    r"""
    SpotVMOptions allows the ability to specify the Machine should use a Spot VM

    Attributes
    ----------
    evictionPolicy : str, default is Undefined, optional
        EvictionPolicy defines the behavior of the virtual machine when it is evicted. It can be either Delete or Deallocate.
    maxPrice : int | str, default is Undefined, optional
        MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
    """


    evictionPolicy?: "Deallocate" | "Delete"

    maxPrice?: int | str


    check:
        _regex_match(str(maxPrice), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if maxPrice


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecSystemAssignedIdentityRole:
    r"""
    SystemAssignedIdentityRole defines the role and scope to assign to the system-assigned identity.

    Attributes
    ----------
    definitionID : str, default is Undefined, optional
        DefinitionID is the ID of the role definition to create for a system assigned identity. It can be an Azure built-in role or a custom role.
        Refer to built-in roles: https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles
    name : str, default is Undefined, optional
        Name is the name of the role assignment to create for a system assigned identity. It can be any valid UUID.
        If not specified, a random UUID will be generated.
    scope : str, default is Undefined, optional
        Scope is the scope that the role assignment or definition applies to. The scope can be any REST resource instance.
        If not specified, the scope will be the subscription.
    """


    definitionID?: str

    name?: str

    scope?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecUserAssignedIdentitiesItems0:
    r"""
    UserAssignedIdentity defines the user-assigned identities provided
    by the user to be assigned to Azure resources.

    Attributes
    ----------
    providerID : str, default is Undefined, required
        ProviderID is the identification ID of the user-assigned Identity, the format of an identity is:
        'azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'
    """


    providerID: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineSpecVMExtensionsItems0:
    r"""
    VMExtension specifies the parameters for a custom VM extension.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the extension.
    protectedSettings : {str:str}, default is Undefined, optional
        ProtectedSettings is a JSON formatted protected settings for the extension.
    publisher : str, default is Undefined, required
        Publisher is the name of the extension handler publisher.
    settings : {str:str}, default is Undefined, optional
        Settings is a JSON formatted public settings for the extension.
    version : str, default is Undefined, required
        Version specifies the version of the script handler.
    """


    name: str

    protectedSettings?: {str:str}

    publisher: str

    settings?: {str:str}

    version: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineStatus:
    r"""
    AzureMachineStatus defines the observed state of AzureMachine.

    Attributes
    ----------
    addresses : [InfrastructureClusterxK8sIoV1beta1AzureMachineStatusAddressesItems0], default is Undefined, optional
        Addresses contains the Azure instance associated addresses.
    conditions : [InfrastructureClusterxK8sIoV1beta1AzureMachineStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the AzureMachine.
    failureMessage : str, default is Undefined, optional
        ErrorMessage will be set in the event that there is a terminal problem
        reconciling the Machine and will contain a more verbose string suitable
        for logging and human consumption.

        This field should not be set for transitive errors that a controller
        faces that are expected to be fixed automatically over
        time (like service outages), but instead indicate that something is
        fundamentally wrong with the Machine's spec or the configuration of
        the controller, and that manual intervention is required. Examples
        of terminal errors would be invalid combinations of settings in the
        spec, values that are unsupported by the controller, or the
        responsible controller itself being critically misconfigured.

        Any transient errors that occur during the reconciliation of Machines
        can be added as events to the Machine object and/or logged in the
        controller's output.
    failureReason : str, default is Undefined, optional
        ErrorReason will be set in the event that there is a terminal problem
        reconciling the Machine and will contain a succinct value suitable
        for machine interpretation.

        This field should not be set for transitive errors that a controller
        faces that are expected to be fixed automatically over
        time (like service outages), but instead indicate that something is
        fundamentally wrong with the Machine's spec or the configuration of
        the controller, and that manual intervention is required. Examples
        of terminal errors would be invalid combinations of settings in the
        spec, values that are unsupported by the controller, or the
        responsible controller itself being critically misconfigured.

        Any transient errors that occur during the reconciliation of Machines
        can be added as events to the Machine object and/or logged in the
        controller's output.
    longRunningOperationStates : [InfrastructureClusterxK8sIoV1beta1AzureMachineStatusLongRunningOperationStatesItems0], default is Undefined, optional
        LongRunningOperationStates saves the states for Azure long-running operations so they can be continued on the
        next reconciliation loop.
    ready : bool, default is Undefined, optional
        Ready is true when the provider resource is ready.
    vmState : str, default is Undefined, optional
        VMState is the provisioning state of the Azure virtual machine.
    """


    addresses?: [InfrastructureClusterxK8sIoV1beta1AzureMachineStatusAddressesItems0]

    conditions?: [InfrastructureClusterxK8sIoV1beta1AzureMachineStatusConditionsItems0]

    failureMessage?: str

    failureReason?: str

    longRunningOperationStates?: [InfrastructureClusterxK8sIoV1beta1AzureMachineStatusLongRunningOperationStatesItems0]

    ready?: bool

    vmState?: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineStatusAddressesItems0:
    r"""
    NodeAddress contains information for the node's address.

    Attributes
    ----------
    address : str, default is Undefined, required
        The node address.
    $type : str, default is Undefined, required
        Node address type, one of Hostname, ExternalIP or InternalIP.
    """


    address: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta1AzureMachineStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        message is a human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        reason is the reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


    check:
        len(message) <= 10240 if message
        len(message) >= 1 if message
        len(reason) <= 256 if reason
        len(reason) >= 1 if reason
        len(severity) <= 32 if severity
        len($type) <= 256
        len($type) >= 1


schema InfrastructureClusterxK8sIoV1beta1AzureMachineStatusLongRunningOperationStatesItems0:
    r"""
    Future contains the data needed for an Azure long-running operation to continue across reconcile loops.

    Attributes
    ----------
    data : str, default is Undefined, required
        Data is the base64 url encoded json Azure AutoRest Future.
    name : str, default is Undefined, required
        Name is the name of the Azure resource.
        Together with the service name, this forms the unique identifier for the future.
    resourceGroup : str, default is Undefined, optional
        ResourceGroup is the Azure resource group for the resource.
    serviceName : str, default is Undefined, required
        ServiceName is the name of the Azure service.
        Together with the name of the resource, this forms the unique identifier for the future.
    $type : str, default is Undefined, required
        Type describes the type of future, such as update, create, delete, etc.
    """


    data: str

    name: str

    resourceGroup?: str

    serviceName: str

    $type: str


