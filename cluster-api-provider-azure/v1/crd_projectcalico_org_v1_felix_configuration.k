"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema FelixConfiguration:
    r"""
    Felix Configuration contains the configuration for Felix.

    Attributes
    ----------
    apiVersion : str, default is "crd.projectcalico.org/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "FelixConfiguration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CrdProjectcalicoOrgV1FelixConfigurationSpec, default is Undefined, optional
        spec
    """


    apiVersion: "crd.projectcalico.org/v1" = "crd.projectcalico.org/v1"

    kind: "FelixConfiguration" = "FelixConfiguration"

    metadata?: v1.ObjectMeta

    spec?: CrdProjectcalicoOrgV1FelixConfigurationSpec


schema CrdProjectcalicoOrgV1FelixConfigurationSpec:
    r"""
    FelixConfigurationSpec contains the values of the Felix configuration.

    Attributes
    ----------
    allowIPIPPacketsFromWorkloads : bool, default is Undefined, optional
        AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]
    allowVXLANPacketsFromWorkloads : bool, default is Undefined, optional
        AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]
    awsSrcDstCheck : str, default is Undefined, optional
        Set source-destination-check on AWS EC2 instances. Accepted value must be one of "DoNothing", "Enable" or "Disable". [Default: DoNothing]
    bpfConnectTimeLoadBalancingEnabled : bool, default is Undefined, optional
        BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]
    bpfDSROptoutCIDRs : [str], default is Undefined, optional
        BPFDSROptoutCIDRs is a list of CIDRs which are excluded from DSR. That is, clients in those CIDRs will accesses nodeports as if BPFExternalServiceMode was set to Tunnel.
    bpfDataIfacePattern : str, default is Undefined, optional
        BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).
    bpfDisableUnprivileged : bool, default is Undefined, optional
        BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]
    bpfEnabled : bool, default is Undefined, optional
        BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]
    bpfEnforceRPF : str, default is Undefined, optional
        BPFEnforceRPF enforce strict RPF on all host interfaces with BPF programs regardless of what is the per-interfaces or global setting. Possible values are Disabled, Strict or Loose. [Default: Loose]
    bpfExtToServiceConnmark : int, default is Undefined, optional
        BPFExtToServiceConnmark in BPF mode, control a 32bit mark that is set on connections from an external client to a local service. This mark allows us to control how packets of that connection are routed within the host and how is routing interpreted by RPF check. [Default: 0]
    bpfExternalServiceMode : str, default is Undefined, optional
        BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to "Tunnel" then both request and response traffic is tunneled to the remote node.  If set to "DSR", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In "DSR" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]
    bpfHostConntrackBypass : bool, default is Undefined, optional
        BPFHostConntrackBypass Controls whether to bypass Linux conntrack in BPF mode for workloads and services. [Default: true - bypass Linux conntrack]
    bpfKubeProxyEndpointSlicesEnabled : bool, default is Undefined, optional
        BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.
    bpfKubeProxyIptablesCleanupEnabled : bool, default is Undefined, optional
        BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]
    bpfKubeProxyMinSyncPeriod : str, default is Undefined, optional
        BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]
    bpfL3IfacePattern : str, default is Undefined, optional
        BPFL3IfacePattern is a regular expression that allows to list tunnel devices like wireguard or vxlan (i.e., L3 devices) in addition to BPFDataIfacePattern. That is, tunnel interfaces not created by Calico, that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.
    bpfLogLevel : str, default is Undefined, optional
        BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of "Off", "Info", or "Debug".  The logs are emitted to the BPF trace pipe, accessible with the command `tc exec bpf debug`. [Default: Off].
    bpfMapSizeConntrack : int, default is Undefined, optional
        BPFMapSizeConntrack sets the size for the conntrack map.  This map must be large enough to hold an entry for each active connection.  Warning: changing the size of the conntrack map can cause disruption.
    bpfMapSizeIPSets : int, default is Undefined, optional
        BPFMapSizeIPSets sets the size for ipsets map.  The IP sets map must be large enough to hold an entry for each endpoint matched by every selector in the source/destination matches in network policy.  Selectors such as "all()" can result in large numbers of entries (one entry per endpoint in that case).
    bpfMapSizeIfState : int, default is Undefined, optional
        BPFMapSizeIfState sets the size for ifstate map.  The ifstate map must be large enough to hold an entry for each device (host + workloads) on a host.
    bpfMapSizeNATAffinity : int, default is Undefined, optional
        bpf map size n a t affinity
    bpfMapSizeNATBackend : int, default is Undefined, optional
        BPFMapSizeNATBackend sets the size for nat back end map. This is the total number of endpoints. This is mostly more than the size of the number of services.
    bpfMapSizeNATFrontend : int, default is Undefined, optional
        BPFMapSizeNATFrontend sets the size for nat front end map. FrontendMap should be large enough to hold an entry for each nodeport, external IP and each port in each service.
    bpfMapSizeRoute : int, default is Undefined, optional
        BPFMapSizeRoute sets the size for the routes map.  The routes map should be large enough to hold one entry per workload and a handful of entries per host (enough to cover its own IPs and tunnel IPs).
    bpfPSNATPorts : int | str, default is Undefined, optional
        BPFPSNATPorts sets the range from which we randomly pick a port if there is a source port collision. This should be within the ephemeral range as defined by RFC 6056 (1024–65535) and preferably outside the  ephemeral ranges used by common operating systems. Linux uses 32768–60999, while others mostly use the IANA defined range 49152–65535. It is not necessarily a problem if this range overlaps with the operating systems. Both ends of the range are inclusive. [Default: 20000:29999]
    bpfPolicyDebugEnabled : bool, default is Undefined, optional
        BPFPolicyDebugEnabled when true, Felix records detailed information about the BPF policy programs, which can be examined with the calico-bpf command-line tool.
    chainInsertMode : str, default is Undefined, optional
        ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]
    dataplaneDriver : str, default is Undefined, optional
        DataplaneDriver filename of the external dataplane driver to use.  Only used if UseInternalDataplaneDriver is set to false.
    dataplaneWatchdogTimeout : str, default is Undefined, optional
        DataplaneWatchdogTimeout is the readiness/liveness timeout used for Felix's (internal) dataplane driver. Increase this value if you experience spurious non-ready or non-live events when Felix is under heavy load. Decrease the value to get felix to report non-live or non-ready more quickly. [Default: 90s] 
         Deprecated: replaced by the generic HealthTimeoutOverrides.
    debugDisableLogDropping : bool, default is Undefined, optional
        debug disable log dropping
    debugMemoryProfilePath : str, default is Undefined, optional
        debug memory profile path
    debugSimulateCalcGraphHangAfter : str, default is Undefined, optional
        debug simulate calc graph hang after
    debugSimulateDataplaneHangAfter : str, default is Undefined, optional
        debug simulate dataplane hang after
    defaultEndpointToHostAction : str, default is Undefined, optional
        DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables "DROP" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables "INPUT" chain; Calico will insert its rules at the top of that chain, then "RETURN" packets to the "INPUT" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]
    deviceRouteProtocol : int, default is Undefined, optional
        This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.
    deviceRouteSourceAddress : str, default is Undefined, optional
        This is the IPv4 source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.
    deviceRouteSourceAddressIPv6 : str, default is Undefined, optional
        This is the IPv6 source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.
    disableConntrackInvalidCheck : bool, default is Undefined, optional
        disable conntrack invalid check
    endpointReportingDelay : str, default is Undefined, optional
        endpoint reporting delay
    endpointReportingEnabled : bool, default is Undefined, optional
        endpoint reporting enabled
    externalNodesList : [str], default is Undefined, optional
        ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.
    failsafeInboundHostPorts : [CrdProjectcalicoOrgV1FelixConfigurationSpecFailsafeInboundHostPortsItems0], default is Undefined, optional
        FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to "tcp". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]
    failsafeOutboundHostPorts : [CrdProjectcalicoOrgV1FelixConfigurationSpecFailsafeOutboundHostPortsItems0], default is Undefined, optional
        FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to "tcp". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]
    featureDetectOverride : str, default is Undefined, optional
        FeatureDetectOverride is used to override feature detection based on auto-detected platform capabilities.  Values are specified in a comma separated list with no spaces, example; "SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=".  "true" or "false" will force the feature, empty or omitted values are auto-detected.
    featureGates : str, default is Undefined, optional
        FeatureGates is used to enable or disable tech-preview Calico features. Values are specified in a comma separated list with no spaces, example; "BPFConnectTimeLoadBalancingWorkaround=enabled,XyZ=false". This is used to enable features that are not fully production ready.
    floatingIPs : str, default is Undefined, optional
        FloatingIPs configures whether or not Felix will program non-OpenStack floating IP addresses.  (OpenStack-derived floating IPs are always programmed, regardless of this setting.)
    genericXDPEnabled : bool, default is Undefined, optional
        GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]
    healthEnabled : bool, default is Undefined, optional
        health enabled
    healthHost : str, default is Undefined, optional
        health host
    healthPort : int, default is Undefined, optional
        health port
    healthTimeoutOverrides : [CrdProjectcalicoOrgV1FelixConfigurationSpecHealthTimeoutOverridesItems0], default is Undefined, optional
        HealthTimeoutOverrides allows the internal watchdog timeouts of individual subcomponents to be overridden.  This is useful for working around "false positive" liveness timeouts that can occur in particularly stressful workloads or if CPU is constrained.  For a list of active subcomponents, see Felix's logs.
    interfaceExclude : str, default is Undefined, optional
        InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]
    interfacePrefix : str, default is Undefined, optional
        InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]
    interfaceRefreshInterval : str, default is Undefined, optional
        InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.
    ipipEnabled : bool, default is Undefined, optional
        IPIPEnabled overrides whether Felix should configure an IPIP interface on the host. Optional as Felix determines this based on the existing IP pools. [Default: nil (unset)]
    ipipMTU : int, default is Undefined, optional
        IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]
    ipsetsRefreshInterval : str, default is Undefined, optional
        IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]
    iptablesBackend : str, default is Undefined, optional
        IptablesBackend specifies which backend of iptables will be used. The default is Auto.
    iptablesFilterAllowAction : str, default is Undefined, optional
        iptables filter allow action
    iptablesFilterDenyAction : str, default is Undefined, optional
        IptablesFilterDenyAction controls what happens to traffic that is denied by network policy. By default Calico blocks traffic with an iptables "DROP" action. If you want to use "REJECT" action instead you can configure it in here.
    iptablesLockFilePath : str, default is Undefined, optional
        IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]
    iptablesLockProbeInterval : str, default is Undefined, optional
        IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]
    iptablesLockTimeout : str, default is Undefined, optional
        IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]
    iptablesMangleAllowAction : str, default is Undefined, optional
        iptables mangle allow action
    iptablesMarkMask : int, default is Undefined, optional
        IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]
    iptablesNATOutgoingInterfaceFilter : str, default is Undefined, optional
        iptables n a t outgoing interface filter
    iptablesPostWriteCheckInterval : str, default is Undefined, optional
        IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]
    iptablesRefreshInterval : str, default is Undefined, optional
        IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]
    ipv6Support : bool, default is Undefined, optional
        IPv6Support controls whether Felix enables support for IPv6 (if supported by the in-use dataplane).
    kubeNodePortRanges : [int | str], default is Undefined, optional
        KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].
    logDebugFilenameRegex : str, default is Undefined, optional
        LogDebugFilenameRegex controls which source code files have their Debug log output included in the logs. Only logs from files with names that match the given regular expression are included.  The filter only applies to Debug level logs.
    logFilePath : str, default is Undefined, optional
        LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]
    logPrefix : str, default is Undefined, optional
        LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]
    logSeverityFile : str, default is Undefined, optional
        LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]
    logSeverityScreen : str, default is Undefined, optional
        LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]
    logSeveritySys : str, default is Undefined, optional
        LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]
    maxIpsetSize : int, default is Undefined, optional
        max ipset size
    metadataAddr : str, default is Undefined, optional
        MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]
    metadataPort : int, default is Undefined, optional
        MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].
    mtuIfacePattern : str, default is Undefined, optional
        MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).
    natOutgoingAddress : str, default is Undefined, optional
        NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)
    natPortRange : int | str, default is Undefined, optional
        NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.
    netlinkTimeout : str, default is Undefined, optional
        netlink timeout
    openstackRegion : str, default is Undefined, optional
        OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]
    policySyncPathPrefix : str, default is Undefined, optional
        PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]
    prometheusGoMetricsEnabled : bool, default is Undefined, optional
        PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]
    prometheusMetricsEnabled : bool, default is Undefined, optional
        PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]
    prometheusMetricsHost : str, default is Undefined, optional
        PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]
    prometheusMetricsPort : int, default is Undefined, optional
        PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]
    prometheusProcessMetricsEnabled : bool, default is Undefined, optional
        PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]
    prometheusWireGuardMetricsEnabled : bool, default is Undefined, optional
        PrometheusWireGuardMetricsEnabled disables wireguard metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]
    removeExternalRoutes : bool, default is Undefined, optional
        Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.
    reportingInterval : str, default is Undefined, optional
        ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]
    reportingTTL : str, default is Undefined, optional
        ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]
    routeRefreshInterval : str, default is Undefined, optional
        RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]
    routeSource : str, default is Undefined, optional
        RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.
    routeSyncDisabled : bool, default is Undefined, optional
        RouteSyncDisabled will disable all operations performed on the route table. Set to true to run in network-policy mode only.
    routeTableRange : CrdProjectcalicoOrgV1FelixConfigurationSpecRouteTableRange, default is Undefined, optional
        route table range
    routeTableRanges : [CrdProjectcalicoOrgV1FelixConfigurationSpecRouteTableRangesItems0], default is Undefined, optional
        Calico programs additional Linux route tables for various purposes. RouteTableRanges specifies a set of table index ranges that Calico should use. Deprecates`RouteTableRange`, overrides `RouteTableRange`.
    serviceLoopPrevention : str, default is Undefined, optional
        When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to "Disabled", in which case such routing loops continue to be allowed. [Default: Drop]
    sidecarAccelerationEnabled : bool, default is Undefined, optional
        SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]
    usageReportingEnabled : bool, default is Undefined, optional
        UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]
    usageReportingInitialDelay : str, default is Undefined, optional
        UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]
    usageReportingInterval : str, default is Undefined, optional
        UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]
    useInternalDataplaneDriver : bool, default is Undefined, optional
        UseInternalDataplaneDriver, if true, Felix will use its internal dataplane programming logic.  If false, it will launch an external dataplane driver and communicate with it over protobuf.
    vxlanEnabled : bool, default is Undefined, optional
        VXLANEnabled overrides whether Felix should create the VXLAN tunnel device for IPv4 VXLAN networking. Optional as Felix determines this based on the existing IP pools. [Default: nil (unset)]
    vxlanMTU : int, default is Undefined, optional
        VXLANMTU is the MTU to set on the IPv4 VXLAN tunnel device. See Configuring MTU [Default: 1410]
    vxlanMTUV6 : int, default is Undefined, optional
        VXLANMTUV6 is the MTU to set on the IPv6 VXLAN tunnel device. See Configuring MTU [Default: 1390]
    vxlanPort : int, default is Undefined, optional
        vxlan port
    vxlanVNI : int, default is Undefined, optional
        vxlan v n i
    wireguardEnabled : bool, default is Undefined, optional
        WireguardEnabled controls whether Wireguard is enabled for IPv4 (encapsulating IPv4 traffic over an IPv4 underlay network). [Default: false]
    wireguardEnabledV6 : bool, default is Undefined, optional
        WireguardEnabledV6 controls whether Wireguard is enabled for IPv6 (encapsulating IPv6 traffic over an IPv6 underlay network). [Default: false]
    wireguardHostEncryptionEnabled : bool, default is Undefined, optional
        WireguardHostEncryptionEnabled controls whether Wireguard host-to-host encryption is enabled. [Default: false]
    wireguardInterfaceName : str, default is Undefined, optional
        WireguardInterfaceName specifies the name to use for the IPv4 Wireguard interface. [Default: wireguard.cali]
    wireguardInterfaceNameV6 : str, default is Undefined, optional
        WireguardInterfaceNameV6 specifies the name to use for the IPv6 Wireguard interface. [Default: wg-v6.cali]
    wireguardKeepAlive : str, default is Undefined, optional
        WireguardKeepAlive controls Wireguard PersistentKeepalive option. Set 0 to disable. [Default: 0]
    wireguardListeningPort : int, default is Undefined, optional
        WireguardListeningPort controls the listening port used by IPv4 Wireguard. [Default: 51820]
    wireguardListeningPortV6 : int, default is Undefined, optional
        WireguardListeningPortV6 controls the listening port used by IPv6 Wireguard. [Default: 51821]
    wireguardMTU : int, default is Undefined, optional
        WireguardMTU controls the MTU on the IPv4 Wireguard interface. See Configuring MTU [Default: 1440]
    wireguardMTUV6 : int, default is Undefined, optional
        WireguardMTUV6 controls the MTU on the IPv6 Wireguard interface. See Configuring MTU [Default: 1420]
    wireguardRoutingRulePriority : int, default is Undefined, optional
        WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]
    workloadSourceSpoofing : str, default is Undefined, optional
        WorkloadSourceSpoofing controls whether pods can use the allowedSourcePrefixes annotation to send traffic with a source IP address that is not theirs. This is disabled by default. When set to "Any", pods can request any prefix.
    xdpEnabled : bool, default is Undefined, optional
        XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]
    xdpRefreshInterval : str, default is Undefined, optional
        XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]
    """


    allowIPIPPacketsFromWorkloads?: bool

    allowVXLANPacketsFromWorkloads?: bool

    awsSrcDstCheck?: "DoNothing" | "Enable" | "Disable"

    bpfConnectTimeLoadBalancingEnabled?: bool

    bpfDSROptoutCIDRs?: [str]

    bpfDataIfacePattern?: str

    bpfDisableUnprivileged?: bool

    bpfEnabled?: bool

    bpfEnforceRPF?: str

    bpfExtToServiceConnmark?: int

    bpfExternalServiceMode?: str

    bpfHostConntrackBypass?: bool

    bpfKubeProxyEndpointSlicesEnabled?: bool

    bpfKubeProxyIptablesCleanupEnabled?: bool

    bpfKubeProxyMinSyncPeriod?: str

    bpfL3IfacePattern?: str

    bpfLogLevel?: str

    bpfMapSizeConntrack?: int

    bpfMapSizeIPSets?: int

    bpfMapSizeIfState?: int

    bpfMapSizeNATAffinity?: int

    bpfMapSizeNATBackend?: int

    bpfMapSizeNATFrontend?: int

    bpfMapSizeRoute?: int

    bpfPSNATPorts?: int | str

    bpfPolicyDebugEnabled?: bool

    chainInsertMode?: str

    dataplaneDriver?: str

    dataplaneWatchdogTimeout?: str

    debugDisableLogDropping?: bool

    debugMemoryProfilePath?: str

    debugSimulateCalcGraphHangAfter?: str

    debugSimulateDataplaneHangAfter?: str

    defaultEndpointToHostAction?: str

    deviceRouteProtocol?: int

    deviceRouteSourceAddress?: str

    deviceRouteSourceAddressIPv6?: str

    disableConntrackInvalidCheck?: bool

    endpointReportingDelay?: str

    endpointReportingEnabled?: bool

    externalNodesList?: [str]

    failsafeInboundHostPorts?: [CrdProjectcalicoOrgV1FelixConfigurationSpecFailsafeInboundHostPortsItems0]

    failsafeOutboundHostPorts?: [CrdProjectcalicoOrgV1FelixConfigurationSpecFailsafeOutboundHostPortsItems0]

    featureDetectOverride?: str

    featureGates?: str

    floatingIPs?: "Enabled" | "Disabled"

    genericXDPEnabled?: bool

    healthEnabled?: bool

    healthHost?: str

    healthPort?: int

    healthTimeoutOverrides?: [CrdProjectcalicoOrgV1FelixConfigurationSpecHealthTimeoutOverridesItems0]

    interfaceExclude?: str

    interfacePrefix?: str

    interfaceRefreshInterval?: str

    ipipEnabled?: bool

    ipipMTU?: int

    ipsetsRefreshInterval?: str

    iptablesBackend?: str

    iptablesFilterAllowAction?: str

    iptablesFilterDenyAction?: str

    iptablesLockFilePath?: str

    iptablesLockProbeInterval?: str

    iptablesLockTimeout?: str

    iptablesMangleAllowAction?: str

    iptablesMarkMask?: int

    iptablesNATOutgoingInterfaceFilter?: str

    iptablesPostWriteCheckInterval?: str

    iptablesRefreshInterval?: str

    ipv6Support?: bool

    kubeNodePortRanges?: [int | str]

    logDebugFilenameRegex?: str

    logFilePath?: str

    logPrefix?: str

    logSeverityFile?: str

    logSeverityScreen?: str

    logSeveritySys?: str

    maxIpsetSize?: int

    metadataAddr?: str

    metadataPort?: int

    mtuIfacePattern?: str

    natOutgoingAddress?: str

    natPortRange?: int | str

    netlinkTimeout?: str

    openstackRegion?: str

    policySyncPathPrefix?: str

    prometheusGoMetricsEnabled?: bool

    prometheusMetricsEnabled?: bool

    prometheusMetricsHost?: str

    prometheusMetricsPort?: int

    prometheusProcessMetricsEnabled?: bool

    prometheusWireGuardMetricsEnabled?: bool

    removeExternalRoutes?: bool

    reportingInterval?: str

    reportingTTL?: str

    routeRefreshInterval?: str

    routeSource?: str

    routeSyncDisabled?: bool

    routeTableRange?: CrdProjectcalicoOrgV1FelixConfigurationSpecRouteTableRange

    routeTableRanges?: [CrdProjectcalicoOrgV1FelixConfigurationSpecRouteTableRangesItems0]

    serviceLoopPrevention?: str

    sidecarAccelerationEnabled?: bool

    usageReportingEnabled?: bool

    usageReportingInitialDelay?: str

    usageReportingInterval?: str

    useInternalDataplaneDriver?: bool

    vxlanEnabled?: bool

    vxlanMTU?: int

    vxlanMTUV6?: int

    vxlanPort?: int

    vxlanVNI?: int

    wireguardEnabled?: bool

    wireguardEnabledV6?: bool

    wireguardHostEncryptionEnabled?: bool

    wireguardInterfaceName?: str

    wireguardInterfaceNameV6?: str

    wireguardKeepAlive?: str

    wireguardListeningPort?: int

    wireguardListeningPortV6?: int

    wireguardMTU?: int

    wireguardMTUV6?: int

    wireguardRoutingRulePriority?: int

    workloadSourceSpoofing?: str

    xdpEnabled?: bool

    xdpRefreshInterval?: str


    check:
        _regex_match(str(bpfPSNATPorts), r"^.*") if bpfPSNATPorts
        all kubeNodePortRanges in kubeNodePortRanges { _regex_match(str(kubeNodePortRanges), r"^.*") if kubeNodePortRanges } if kubeNodePortRanges
        _regex_match(str(natPortRange), r"^.*") if natPortRange


schema CrdProjectcalicoOrgV1FelixConfigurationSpecFailsafeInboundHostPortsItems0:
    r"""
    ProtoPort is combination of protocol, port, and CIDR. Protocol and port must be specified.

    Attributes
    ----------
    net : str, default is Undefined, optional
        net
    port : int, default is Undefined, required
        port
    $protocol : str, default is Undefined, required
        protocol
    """


    net?: str

    port: int

    $protocol: str


schema CrdProjectcalicoOrgV1FelixConfigurationSpecFailsafeOutboundHostPortsItems0:
    r"""
    ProtoPort is combination of protocol, port, and CIDR. Protocol and port must be specified.

    Attributes
    ----------
    net : str, default is Undefined, optional
        net
    port : int, default is Undefined, required
        port
    $protocol : str, default is Undefined, required
        protocol
    """


    net?: str

    port: int

    $protocol: str


schema CrdProjectcalicoOrgV1FelixConfigurationSpecHealthTimeoutOverridesItems0:
    r"""
    crd projectcalico org v1 felix configuration spec health timeout overrides items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    timeout : str, default is Undefined, required
        timeout
    """


    name: str

    timeout: str


schema CrdProjectcalicoOrgV1FelixConfigurationSpecRouteTableRange:
    r"""
    Deprecated in favor of RouteTableRanges. Calico programs additional Linux route tables for various purposes. RouteTableRange specifies the indices of the route tables that Calico should use.

    Attributes
    ----------
    max : int, default is Undefined, required
        max
    min : int, default is Undefined, required
        min
    """


    max: int

    min: int


schema CrdProjectcalicoOrgV1FelixConfigurationSpecRouteTableRangesItems0:
    r"""
    crd projectcalico org v1 felix configuration spec route table ranges items0

    Attributes
    ----------
    max : int, default is Undefined, required
        max
    min : int, default is Undefined, required
        min
    """


    max: int

    min: int


