"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema OAuth:
    r"""
    OAuth holds cluster-wide information about OAuth.  The canonical name is `cluster`. It is used to configure the integrated OAuth server. This configuration is only honored when the top level Authentication config has type set to IntegratedOAuth.

    Attributes
    ----------
    apiVersion : str, default is "config.openshift.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "OAuth", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ConfigOpenshiftIoV1OAuthSpec, default is Undefined, required
        spec
    status : any, default is Undefined, optional
        OAuthStatus shows current known state of OAuth server in the cluster
    """


    apiVersion: "config.openshift.io/v1" = "config.openshift.io/v1"

    kind: "OAuth" = "OAuth"

    metadata?: v1.ObjectMeta

    spec: ConfigOpenshiftIoV1OAuthSpec

    status?: any


schema ConfigOpenshiftIoV1OAuthSpec:
    r"""
    OAuthSpec contains desired cluster auth configuration

    Attributes
    ----------
    identityProviders : [ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0], default is Undefined, optional
        identityProviders is an ordered list of ways for a user to identify themselves. When this list is empty, no identities are provisioned for users.
    templates : ConfigOpenshiftIoV1OAuthSpecTemplates, default is Undefined, optional
        templates
    tokenConfig : ConfigOpenshiftIoV1OAuthSpecTokenConfig, default is Undefined, optional
        token config
    """


    identityProviders?: [ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0]

    templates?: ConfigOpenshiftIoV1OAuthSpecTemplates

    tokenConfig?: ConfigOpenshiftIoV1OAuthSpecTokenConfig


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0:
    r"""
    IdentityProvider provides identities for users authenticating using credentials

    Attributes
    ----------
    basicAuth : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuth, default is Undefined, optional
        basic auth
    github : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Github, default is Undefined, optional
        github
    gitlab : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Gitlab, default is Undefined, optional
        gitlab
    google : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Google, default is Undefined, optional
        google
    htpasswd : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Htpasswd, default is Undefined, optional
        htpasswd
    keystone : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Keystone, default is Undefined, optional
        keystone
    ldap : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Ldap, default is Undefined, optional
        ldap
    mappingMethod : str, default is Undefined, optional
        mappingMethod determines how identities from this provider are mapped to users Defaults to "claim"
    name : str, default is Undefined, optional
        name is used to qualify the identities returned by this provider. - It MUST be unique and not shared by any other identity provider used - It MUST be a valid path segment: name cannot equal "." or ".." or contain "/" or "%" or ":"   Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName
    openID : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenID, default is Undefined, optional
        open ID
    requestHeader : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0RequestHeader, default is Undefined, optional
        request header
    $type : str, default is Undefined, optional
        type identifies the identity provider type for this entry.
    """


    basicAuth?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuth

    github?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Github

    gitlab?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Gitlab

    google?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Google

    htpasswd?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Htpasswd

    keystone?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Keystone

    ldap?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Ldap

    mappingMethod?: str

    name?: str

    openID?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenID

    requestHeader?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0RequestHeader

    $type?: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuth:
    r"""
    basicAuth contains configuration options for the BasicAuth IdP

    Attributes
    ----------
    ca : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuthCa, default is Undefined, optional
        ca
    tlsClientCert : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuthTLSClientCert, default is Undefined, optional
        tls client cert
    tlsClientKey : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuthTLSClientKey, default is Undefined, optional
        tls client key
    url : str, default is Undefined, optional
        url is the remote URL to connect to
    """


    ca?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuthCa

    tlsClientCert?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuthTLSClientCert

    tlsClientKey?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuthTLSClientKey

    url?: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuthCa:
    r"""
    ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key "ca.crt" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced config map
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuthTLSClientCert:
    r"""
    tlsClientCert is an optional reference to a secret by name that contains the PEM-encoded TLS client certificate to present when connecting to the server. The key "tls.crt" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0BasicAuthTLSClientKey:
    r"""
    tlsClientKey is an optional reference to a secret by name that contains the PEM-encoded TLS private key for the client certificate referenced in tlsClientCert. The key "tls.key" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Github:
    r"""
    github enables user authentication using GitHub credentials

    Attributes
    ----------
    ca : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GithubCa, default is Undefined, optional
        ca
    clientID : str, default is Undefined, optional
        clientID is the oauth client ID
    clientSecret : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GithubClientSecret, default is Undefined, optional
        client secret
    hostname : str, default is Undefined, optional
        hostname is the optional domain (e.g. "mycompany.com") for use with a hosted instance of GitHub Enterprise. It must match the GitHub Enterprise settings value configured at /setup/settings#hostname.
    organizations : [str], default is Undefined, optional
        organizations optionally restricts which organizations are allowed to log in
    teams : [str], default is Undefined, optional
        teams optionally restricts which teams are allowed to log in. Format is <org>/<team>.
    """


    ca?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GithubCa

    clientID?: str

    clientSecret?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GithubClientSecret

    hostname?: str

    organizations?: [str]

    teams?: [str]


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GithubCa:
    r"""
    ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key "ca.crt" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. This can only be configured when hostname is set to a non-empty value. The namespace for this config map is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced config map
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GithubClientSecret:
    r"""
    clientSecret is a required reference to the secret by name containing the oauth client secret. The key "clientSecret" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Gitlab:
    r"""
    gitlab enables user authentication using GitLab credentials

    Attributes
    ----------
    ca : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GitlabCa, default is Undefined, optional
        ca
    clientID : str, default is Undefined, optional
        clientID is the oauth client ID
    clientSecret : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GitlabClientSecret, default is Undefined, optional
        client secret
    url : str, default is Undefined, optional
        url is the oauth server base URL
    """


    ca?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GitlabCa

    clientID?: str

    clientSecret?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GitlabClientSecret

    url?: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GitlabCa:
    r"""
    ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key "ca.crt" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced config map
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GitlabClientSecret:
    r"""
    clientSecret is a required reference to the secret by name containing the oauth client secret. The key "clientSecret" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Google:
    r"""
    google enables user authentication using Google credentials

    Attributes
    ----------
    clientID : str, default is Undefined, optional
        clientID is the oauth client ID
    clientSecret : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GoogleClientSecret, default is Undefined, optional
        client secret
    hostedDomain : str, default is Undefined, optional
        hostedDomain is the optional Google App domain (e.g. "mycompany.com") to restrict logins to
    """


    clientID?: str

    clientSecret?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GoogleClientSecret

    hostedDomain?: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0GoogleClientSecret:
    r"""
    clientSecret is a required reference to the secret by name containing the oauth client secret. The key "clientSecret" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Htpasswd:
    r"""
    htpasswd enables user authentication using an HTPasswd file to validate credentials

    Attributes
    ----------
    fileData : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0HtpasswdFileData, default is Undefined, optional
        file data
    """


    fileData?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0HtpasswdFileData


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0HtpasswdFileData:
    r"""
    fileData is a required reference to a secret by name containing the data to use as the htpasswd file. The key "htpasswd" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. If the specified htpasswd data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Keystone:
    r"""
    keystone enables user authentication using keystone password credentials

    Attributes
    ----------
    ca : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0KeystoneCa, default is Undefined, optional
        ca
    domainName : str, default is Undefined, optional
        domainName is required for keystone v3
    tlsClientCert : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0KeystoneTLSClientCert, default is Undefined, optional
        tls client cert
    tlsClientKey : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0KeystoneTLSClientKey, default is Undefined, optional
        tls client key
    url : str, default is Undefined, optional
        url is the remote URL to connect to
    """


    ca?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0KeystoneCa

    domainName?: str

    tlsClientCert?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0KeystoneTLSClientCert

    tlsClientKey?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0KeystoneTLSClientKey

    url?: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0KeystoneCa:
    r"""
    ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key "ca.crt" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced config map
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0KeystoneTLSClientCert:
    r"""
    tlsClientCert is an optional reference to a secret by name that contains the PEM-encoded TLS client certificate to present when connecting to the server. The key "tls.crt" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0KeystoneTLSClientKey:
    r"""
    tlsClientKey is an optional reference to a secret by name that contains the PEM-encoded TLS private key for the client certificate referenced in tlsClientCert. The key "tls.key" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0Ldap:
    r"""
    ldap enables user authentication using LDAP credentials

    Attributes
    ----------
    attributes : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0LdapAttributes, default is Undefined, optional
        attributes
    bindDN : str, default is Undefined, optional
        bindDN is an optional DN to bind with during the search phase.
    bindPassword : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0LdapBindPassword, default is Undefined, optional
        bind password
    ca : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0LdapCa, default is Undefined, optional
        ca
    insecure : bool, default is Undefined, optional
        insecure, if true, indicates the connection should not use TLS WARNING: Should not be set to `true` with the URL scheme "ldaps://" as "ldaps://" URLs always          attempt to connect using TLS, even when `insecure` is set to `true` When `true`, "ldap://" URLS connect insecurely. When `false`, "ldap://" URLs are upgraded to a TLS connection using StartTLS as specified in https://tools.ietf.org/html/rfc2830.
    url : str, default is Undefined, optional
        url is an RFC 2255 URL which specifies the LDAP search parameters to use. The syntax of the URL is: ldap://host:port/basedn?attribute?scope?filter
    """


    attributes?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0LdapAttributes

    bindDN?: str

    bindPassword?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0LdapBindPassword

    ca?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0LdapCa

    insecure?: bool

    url?: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0LdapAttributes:
    r"""
    attributes maps LDAP attributes to identities

    Attributes
    ----------
    email : [str], default is Undefined, optional
        email is the list of attributes whose values should be used as the email address. Optional. If unspecified, no email is set for the identity
    id : [str], default is Undefined, optional
        id is the list of attributes whose values should be used as the user ID. Required. First non-empty attribute is used. At least one attribute is required. If none of the listed attribute have a value, authentication fails. LDAP standard identity attribute is "dn"
    name : [str], default is Undefined, optional
        name is the list of attributes whose values should be used as the display name. Optional. If unspecified, no display name is set for the identity LDAP standard display name attribute is "cn"
    preferredUsername : [str], default is Undefined, optional
        preferredUsername is the list of attributes whose values should be used as the preferred username. LDAP standard login attribute is "uid"
    """


    email?: [str]

    id?: [str]

    name?: [str]

    preferredUsername?: [str]


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0LdapBindPassword:
    r"""
    bindPassword is an optional reference to a secret by name containing a password to bind with during the search phase. The key "bindPassword" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0LdapCa:
    r"""
    ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key "ca.crt" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced config map
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenID:
    r"""
    openID enables user authentication using OpenID credentials

    Attributes
    ----------
    ca : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenIDCa, default is Undefined, optional
        ca
    claims : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenIDClaims, default is Undefined, optional
        claims
    clientID : str, default is Undefined, optional
        clientID is the oauth client ID
    clientSecret : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenIDClientSecret, default is Undefined, optional
        client secret
    extraAuthorizeParameters : {str:str}, default is Undefined, optional
        extraAuthorizeParameters are any custom parameters to add to the authorize request.
    extraScopes : [str], default is Undefined, optional
        extraScopes are any scopes to request in addition to the standard "openid" scope.
    issuer : str, default is Undefined, optional
        issuer is the URL that the OpenID Provider asserts as its Issuer Identifier. It must use the https scheme with no query or fragment component.
    """


    ca?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenIDCa

    claims?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenIDClaims

    clientID?: str

    clientSecret?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenIDClientSecret

    extraAuthorizeParameters?: {str:str}

    extraScopes?: [str]

    issuer?: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenIDCa:
    r"""
    ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key "ca.crt" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced config map
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenIDClaims:
    r"""
    claims mappings

    Attributes
    ----------
    email : [str], default is Undefined, optional
        email is the list of claims whose values should be used as the email address. Optional. If unspecified, no email is set for the identity
    name : [str], default is Undefined, optional
        name is the list of claims whose values should be used as the display name. Optional. If unspecified, no display name is set for the identity
    preferredUsername : [str], default is Undefined, optional
        preferredUsername is the list of claims whose values should be used as the preferred username. If unspecified, the preferred username is determined from the value of the sub claim
    """


    email?: [str]

    name?: [str]

    preferredUsername?: [str]


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0OpenIDClientSecret:
    r"""
    clientSecret is a required reference to the secret by name containing the oauth client secret. The key "clientSecret" is used to locate the data. If the secret or expected key is not found, the identity provider is not honored. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0RequestHeader:
    r"""
    requestHeader enables user authentication using request header credentials

    Attributes
    ----------
    ca : ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0RequestHeaderCa, default is Undefined, optional
        ca
    challengeURL : str, default is Undefined, optional
        challengeURL is a URL to redirect unauthenticated /authorize requests to Unauthenticated requests from OAuth clients which expect WWW-Authenticate challenges will be redirected here. ${url} is replaced with the current URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url} ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query} Required when challenge is set to true.
    clientCommonNames : [str], default is Undefined, optional
        clientCommonNames is an optional list of common names to require a match from. If empty, any client certificate validated against the clientCA bundle is considered authoritative.
    emailHeaders : [str], default is Undefined, optional
        emailHeaders is the set of headers to check for the email address
    headers : [str], default is Undefined, optional
        headers is the set of headers to check for identity information
    loginURL : str, default is Undefined, optional
        loginURL is a URL to redirect unauthenticated /authorize requests to Unauthenticated requests from OAuth clients which expect interactive logins will be redirected here ${url} is replaced with the current URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url} ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query} Required when login is set to true.
    nameHeaders : [str], default is Undefined, optional
        nameHeaders is the set of headers to check for the display name
    preferredUsernameHeaders : [str], default is Undefined, optional
        preferredUsernameHeaders is the set of headers to check for the preferred username
    """


    ca?: ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0RequestHeaderCa

    challengeURL?: str

    clientCommonNames?: [str]

    emailHeaders?: [str]

    headers?: [str]

    loginURL?: str

    nameHeaders?: [str]

    preferredUsernameHeaders?: [str]


schema ConfigOpenshiftIoV1OAuthSpecIdentityProvidersItems0RequestHeaderCa:
    r"""
    ca is a required reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. Specifically, it allows verification of incoming requests to prevent header spoofing. The key "ca.crt" is used to locate the data. If the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. The namespace for this config map is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced config map
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecTemplates:
    r"""
    templates allow you to customize pages like the login page.

    Attributes
    ----------
    error : ConfigOpenshiftIoV1OAuthSpecTemplatesError, default is Undefined, optional
        error
    login : ConfigOpenshiftIoV1OAuthSpecTemplatesLogin, default is Undefined, optional
        login
    providerSelection : ConfigOpenshiftIoV1OAuthSpecTemplatesProviderSelection, default is Undefined, optional
        provider selection
    """


    error?: ConfigOpenshiftIoV1OAuthSpecTemplatesError

    login?: ConfigOpenshiftIoV1OAuthSpecTemplatesLogin

    providerSelection?: ConfigOpenshiftIoV1OAuthSpecTemplatesProviderSelection


schema ConfigOpenshiftIoV1OAuthSpecTemplatesError:
    r"""
    error is the name of a secret that specifies a go template to use to render error pages during the authentication or grant flow. The key "errors.html" is used to locate the template data. If specified and the secret or expected key is not found, the default error page is used. If the specified template is not valid, the default error page is used. If unspecified, the default error page is used. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecTemplatesLogin:
    r"""
    login is the name of a secret that specifies a go template to use to render the login page. The key "login.html" is used to locate the template data. If specified and the secret or expected key is not found, the default login page is used. If the specified template is not valid, the default login page is used. If unspecified, the default login page is used. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecTemplatesProviderSelection:
    r"""
    providerSelection is the name of a secret that specifies a go template to use to render the provider selection page. The key "providers.html" is used to locate the template data. If specified and the secret or expected key is not found, the default provider selection page is used. If the specified template is not valid, the default provider selection page is used. If unspecified, the default provider selection page is used. The namespace for this secret is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced secret
    """


    name: str


schema ConfigOpenshiftIoV1OAuthSpecTokenConfig:
    r"""
    tokenConfig contains options for authorization and access tokens

    Attributes
    ----------
    accessTokenInactivityTimeoutSeconds : int, default is Undefined, optional
        accessTokenInactivityTimeoutSeconds defines the default token inactivity timeout for tokens granted by any client. The value represents the maximum amount of time that can occur between consecutive uses of the token. Tokens become invalid if they are not used within this temporal window. The user will need to acquire a new token to regain access once a token times out. Valid values are integer values:   x < 0  Tokens time out is enabled but tokens never timeout unless configured per client (e.g. `-1`)   x = 0  Tokens time out is disabled (default)   x > 0  Tokens time out if there is no activity for x seconds The current minimum allowed value for X is 300 (5 minutes)
    accessTokenMaxAgeSeconds : int, default is Undefined, optional
        accessTokenMaxAgeSeconds defines the maximum age of access tokens
    """


    accessTokenInactivityTimeoutSeconds?: int

    accessTokenMaxAgeSeconds?: int


