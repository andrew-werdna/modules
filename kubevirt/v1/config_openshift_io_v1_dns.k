"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ConfigDNS:
    r"""
    DNS holds cluster-wide information about DNS. The canonical name is `cluster`

    Attributes
    ----------
    apiVersion : str, default is "config.openshift.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DNS", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ConfigOpenshiftIoV1DNSSpec, default is Undefined, required
        spec
    status : any, default is Undefined, optional
        status holds observed values from the cluster. They may not be overridden.
    """


    apiVersion: "config.openshift.io/v1" = "config.openshift.io/v1"

    kind: "DNS" = "DNS"

    metadata?: v1.ObjectMeta

    spec: ConfigOpenshiftIoV1DNSSpec

    status?: any


schema ConfigOpenshiftIoV1DNSSpec:
    r"""
    spec holds user settable values for configuration

    Attributes
    ----------
    baseDomain : str, default is Undefined, optional
        baseDomain is the base domain of the cluster. All managed DNS records will be sub-domains of this base. 
         For example, given the base domain `openshift.example.com`, an API server DNS record may be created for `cluster-api.openshift.example.com`. 
         Once set, this field cannot be changed.
    privateZone : ConfigOpenshiftIoV1DNSSpecPrivateZone, default is Undefined, optional
        private zone
    publicZone : ConfigOpenshiftIoV1DNSSpecPublicZone, default is Undefined, optional
        public zone
    """


    baseDomain?: str

    privateZone?: ConfigOpenshiftIoV1DNSSpecPrivateZone

    publicZone?: ConfigOpenshiftIoV1DNSSpecPublicZone


schema ConfigOpenshiftIoV1DNSSpecPrivateZone:
    r"""
    privateZone is the location where all the DNS records that are only available internally to the cluster exist. 
     If this field is nil, no private records should be created. 
     Once set, this field cannot be changed.

    Attributes
    ----------
    id : str, default is Undefined, optional
        id is the identifier that can be used to find the DNS hosted zone. 
         on AWS zone can be fetched using `ID` as id in [1] on Azure zone can be fetched using `ID` as a pre-determined name in [2], on GCP zone can be fetched using `ID` as a pre-determined name in [3]. 
         [1]: https://docs.aws.amazon.com/cli/latest/reference/route53/get-hosted-zone.html#options [2]: https://docs.microsoft.com/en-us/cli/azure/network/dns/zone?view=azure-cli-latest#az-network-dns-zone-show [3]: https://cloud.google.com/dns/docs/reference/v1/managedZones/get
    tags : {str:str}, default is Undefined, optional
        tags can be used to query the DNS hosted zone. 
         on AWS, resourcegroupstaggingapi [1] can be used to fetch a zone using `Tags` as tag-filters, 
         [1]: https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/get-resources.html#options
    """


    id?: str

    tags?: {str:str}


schema ConfigOpenshiftIoV1DNSSpecPublicZone:
    r"""
    publicZone is the location where all the DNS records that are publicly accessible to the internet exist. 
     If this field is nil, no public records should be created. 
     Once set, this field cannot be changed.

    Attributes
    ----------
    id : str, default is Undefined, optional
        id is the identifier that can be used to find the DNS hosted zone. 
         on AWS zone can be fetched using `ID` as id in [1] on Azure zone can be fetched using `ID` as a pre-determined name in [2], on GCP zone can be fetched using `ID` as a pre-determined name in [3]. 
         [1]: https://docs.aws.amazon.com/cli/latest/reference/route53/get-hosted-zone.html#options [2]: https://docs.microsoft.com/en-us/cli/azure/network/dns/zone?view=azure-cli-latest#az-network-dns-zone-show [3]: https://cloud.google.com/dns/docs/reference/v1/managedZones/get
    tags : {str:str}, default is Undefined, optional
        tags can be used to query the DNS hosted zone. 
         on AWS, resourcegroupstaggingapi [1] can be used to fetch a zone using `Tags` as tag-filters, 
         [1]: https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/get-resources.html#options
    """


    id?: str

    tags?: {str:str}


