"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Scheduler:
    r"""
    Scheduler holds cluster-wide config information to run the Kubernetes Scheduler and influence its placement decisions. The canonical name for this config is `cluster`.

    Attributes
    ----------
    apiVersion : str, default is "config.openshift.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Scheduler", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ConfigOpenshiftIoV1SchedulerSpec, default is Undefined, required
        spec
    status : any, default is Undefined, optional
        status holds observed values from the cluster. They may not be overridden.
    """


    apiVersion: "config.openshift.io/v1" = "config.openshift.io/v1"

    kind: "Scheduler" = "Scheduler"

    metadata?: v1.ObjectMeta

    spec: ConfigOpenshiftIoV1SchedulerSpec

    status?: any


schema ConfigOpenshiftIoV1SchedulerSpec:
    r"""
    spec holds user settable values for configuration

    Attributes
    ----------
    defaultNodeSelector : str, default is Undefined, optional
        defaultNodeSelector helps set the cluster-wide default node selector to restrict pod placement to specific nodes. This is applied to the pods created in all namespaces without a specified nodeSelector value. For example, defaultNodeSelector: "type=user-node,region=east" would set nodeSelector field in pod spec to "type=user-node,region=east" to all pods created in all namespaces. Namespaces having project-wide node selectors won't be impacted even if this field is set. This adds an annotation section to the namespace. For example, if a new namespace is created with node-selector='type=user-node,region=east', the annotation openshift.io/node-selector: type=user-node,region=east gets added to the project. When the openshift.io/node-selector annotation is set on the project the value is used in preference to the value we are setting for defaultNodeSelector field. For instance, openshift.io/node-selector: "type=user-node,region=west" means that the default of "type=user-node,region=east" set in defaultNodeSelector would not be applied.
    mastersSchedulable : bool, default is Undefined, optional
        MastersSchedulable allows masters nodes to be schedulable. When this flag is turned on, all the master nodes in the cluster will be made schedulable, so that workload pods can run on them. The default value for this field is false, meaning none of the master nodes are schedulable. Important Note: Once the workload pods start running on the master nodes, extreme care must be taken to ensure that cluster-critical control plane components are not impacted. Please turn on this field after doing due diligence.
    policy : ConfigOpenshiftIoV1SchedulerSpecPolicy, default is Undefined, optional
        policy
    """


    defaultNodeSelector?: str

    mastersSchedulable?: bool

    policy?: ConfigOpenshiftIoV1SchedulerSpecPolicy


schema ConfigOpenshiftIoV1SchedulerSpecPolicy:
    r"""
    policy is a reference to a ConfigMap containing scheduler policy which has user specified predicates and priorities. If this ConfigMap is not available scheduler will default to use DefaultAlgorithmProvider. The namespace for this configmap is openshift-config.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the metadata.name of the referenced config map
    """


    name: str


