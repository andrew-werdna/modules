"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema OperatorDNS:
    r"""
    DNS manages the CoreDNS component to provide a name resolution service for pods and services in the cluster. 
     This supports the DNS-based service discovery specification: https://github.com/kubernetes/dns/blob/master/docs/specification.md 
     More details: https://kubernetes.io/docs/tasks/administer-cluster/coredns

    Attributes
    ----------
    apiVersion : str, default is "operator.openshift.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DNS", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OperatorOpenshiftIoV1DNSSpec, default is Undefined, optional
        spec
    status : OperatorOpenshiftIoV1DNSStatus, default is Undefined, optional
        status
    """


    apiVersion: "operator.openshift.io/v1" = "operator.openshift.io/v1"

    kind: "DNS" = "DNS"

    metadata?: v1.ObjectMeta

    spec?: OperatorOpenshiftIoV1DNSSpec

    status?: OperatorOpenshiftIoV1DNSStatus


schema OperatorOpenshiftIoV1DNSSpec:
    r"""
    spec is the specification of the desired behavior of the DNS.

    Attributes
    ----------
    servers : [OperatorOpenshiftIoV1DNSSpecServersItems0], default is Undefined, optional
        servers is a list of DNS resolvers that provide name query delegation for one or more subdomains outside the scope of the cluster domain. If servers consists of more than one Server, longest suffix match will be used to determine the Server. 
         For example, if there are two Servers, one for "foo.com" and another for "a.foo.com", and the name query is for "www.a.foo.com", it will be routed to the Server with Zone "a.foo.com". 
         If this field is nil, no servers are created.
    """


    servers?: [OperatorOpenshiftIoV1DNSSpecServersItems0]


schema OperatorOpenshiftIoV1DNSSpecServersItems0:
    r"""
    Server defines the schema for a server that runs per instance of CoreDNS.

    Attributes
    ----------
    forwardPlugin : OperatorOpenshiftIoV1DNSSpecServersItems0ForwardPlugin, default is Undefined, optional
        forward plugin
    name : str, default is Undefined, optional
        name is required and specifies a unique name for the server. Name must comply with the Service Name Syntax of rfc6335.
    zones : [str], default is Undefined, optional
        zones is required and specifies the subdomains that Server is authoritative for. Zones must conform to the rfc1123 definition of a subdomain. Specifying the cluster domain (i.e., "cluster.local") is invalid.
    """


    forwardPlugin?: OperatorOpenshiftIoV1DNSSpecServersItems0ForwardPlugin

    name?: str

    zones?: [str]


schema OperatorOpenshiftIoV1DNSSpecServersItems0ForwardPlugin:
    r"""
    forwardPlugin defines a schema for configuring CoreDNS to proxy DNS messages to upstream resolvers.

    Attributes
    ----------
    upstreams : [str], default is Undefined, optional
        upstreams is a list of resolvers to forward name queries for subdomains of Zones. Upstreams are randomized when more than 1 upstream is specified. Each instance of CoreDNS performs health checking of Upstreams. When a healthy upstream returns an error during the exchange, another resolver is tried from Upstreams. Each upstream is represented by an IP address or IP:port if the upstream listens on a port other than 53. 
         A maximum of 15 upstreams is allowed per ForwardPlugin.
    """


    upstreams?: [str]


    check:
        len(upstreams) <= 15 if upstreams


schema OperatorOpenshiftIoV1DNSStatus:
    r"""
    status is the most recently observed status of the DNS.

    Attributes
    ----------
    clusterDomain : str, default is Undefined, required
        clusterDomain is the local cluster DNS domain suffix for DNS services. This will be a subdomain as defined in RFC 1034, section 3.5: https://tools.ietf.org/html/rfc1034#section-3.5 Example: "cluster.local" 
         More info: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service
    clusterIP : str, default is Undefined, required
        clusterIP is the service IP through which this DNS is made available. 
         In the case of the default DNS, this will be a well known IP that is used as the default nameserver for pods that are using the default ClusterFirst DNS policy. 
         In general, this IP can be specified in a pod's spec.dnsConfig.nameservers list or used explicitly when performing name resolution from within the cluster. Example: dig foo.com @<service IP> 
         More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    conditions : [OperatorOpenshiftIoV1DNSStatusConditionsItems0], default is Undefined, optional
        conditions provide information about the state of the DNS on the cluster. 
         These are the supported DNS conditions: 
           * Available   - True if the following conditions are met:     * DNS controller daemonset is available.   - False if any of those conditions are unsatisfied.
    """


    clusterDomain: str

    clusterIP: str

    conditions?: [OperatorOpenshiftIoV1DNSStatusConditionsItems0]


schema OperatorOpenshiftIoV1DNSStatusConditionsItems0:
    r"""
    OperatorCondition is just the standard condition fields.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    message : str, default is Undefined, optional
        message
    reason : str, default is Undefined, optional
        reason
    status : str, default is Undefined, optional
        status
    $type : str, default is Undefined, optional
        type
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


