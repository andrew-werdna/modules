"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema KubeControllerManager:
    r"""
    KubeControllerManager provides information to configure an operator to manage kube-controller-manager.

    Attributes
    ----------
    apiVersion : str, default is "operator.openshift.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "KubeControllerManager", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OperatorOpenshiftIoV1KubeControllerManagerSpec, default is Undefined, required
        spec
    status : OperatorOpenshiftIoV1KubeControllerManagerStatus, default is Undefined, optional
        status
    """


    apiVersion: "operator.openshift.io/v1" = "operator.openshift.io/v1"

    kind: "KubeControllerManager" = "KubeControllerManager"

    metadata?: v1.ObjectMeta

    spec: OperatorOpenshiftIoV1KubeControllerManagerSpec

    status?: OperatorOpenshiftIoV1KubeControllerManagerStatus


schema OperatorOpenshiftIoV1KubeControllerManagerSpec:
    r"""
    spec is the specification of the desired behavior of the Kubernetes Controller Manager

    Attributes
    ----------
    failedRevisionLimit : int, default is Undefined, optional
        failedRevisionLimit is the number of failed static pod installer revisions to keep on disk and in the api -1 = unlimited, 0 or unset = 5 (default)
    forceRedeploymentReason : str, default is Undefined, optional
        forceRedeploymentReason can be used to force the redeployment of the operand by providing a unique string. This provides a mechanism to kick a previously failed deployment and provide a reason why you think it will work this time instead of failing again on the same config.
    logLevel : str, default is Undefined, optional
        logLevel is an intent based logging for an overall component.  It does not give fine grained control, but it is a simple way to manage coarse grained logging choices that operators have to interpret for their operands.
    managementState : str, default is Undefined, optional
        managementState indicates whether and how the operator should manage the component
    observedConfig : any, default is Undefined, optional
        observedConfig holds a sparse config that controller has observed from the cluster state.  It exists in spec because it is an input to the level for the operator
    operatorLogLevel : str, default is Undefined, optional
        operatorLogLevel is an intent based logging for the operator itself.  It does not give fine grained control, but it is a simple way to manage coarse grained logging choices that operators have to interpret for themselves.
    succeededRevisionLimit : int, default is Undefined, optional
        succeededRevisionLimit is the number of successful static pod installer revisions to keep on disk and in the api -1 = unlimited, 0 or unset = 5 (default)
    unsupportedConfigOverrides : any, default is Undefined, optional
        unsupportedConfigOverrides holds a sparse config that will override any previously set options.  It only needs to be the fields to override it will end up overlaying in the following order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides
    """


    failedRevisionLimit?: int

    forceRedeploymentReason?: str

    logLevel?: str

    managementState?: str

    observedConfig?: any

    operatorLogLevel?: str

    succeededRevisionLimit?: int

    unsupportedConfigOverrides?: any


    check:
        _regex_match(str(managementState), r"^(Managed|Force)$") if managementState


schema OperatorOpenshiftIoV1KubeControllerManagerStatus:
    r"""
    status is the most recently observed status of the Kubernetes Controller Manager

    Attributes
    ----------
    conditions : [OperatorOpenshiftIoV1KubeControllerManagerStatusConditionsItems0], default is Undefined, optional
        conditions is a list of conditions and their status
    generations : [OperatorOpenshiftIoV1KubeControllerManagerStatusGenerationsItems0], default is Undefined, optional
        generations are used to determine when an item needs to be reconciled or has changed in a way that needs a reaction.
    latestAvailableRevision : int, default is Undefined, optional
        latestAvailableRevision is the deploymentID of the most recent deployment
    latestAvailableRevisionReason : str, default is Undefined, optional
        latestAvailableRevisionReason describe the detailed reason for the most recent deployment
    nodeStatuses : [OperatorOpenshiftIoV1KubeControllerManagerStatusNodeStatusesItems0], default is Undefined, optional
        nodeStatuses track the deployment values and errors across individual nodes
    observedGeneration : int, default is Undefined, optional
        observedGeneration is the last generation change you've dealt with
    readyReplicas : int, default is Undefined, optional
        readyReplicas indicates how many replicas are ready and at the desired state
    version : str, default is Undefined, optional
        version is the level this availability applies to
    """


    conditions?: [OperatorOpenshiftIoV1KubeControllerManagerStatusConditionsItems0]

    generations?: [OperatorOpenshiftIoV1KubeControllerManagerStatusGenerationsItems0]

    latestAvailableRevision?: int

    latestAvailableRevisionReason?: str

    nodeStatuses?: [OperatorOpenshiftIoV1KubeControllerManagerStatusNodeStatusesItems0]

    observedGeneration?: int

    readyReplicas?: int

    version?: str


schema OperatorOpenshiftIoV1KubeControllerManagerStatusConditionsItems0:
    r"""
    OperatorCondition is just the standard condition fields.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    message : str, default is Undefined, optional
        message
    reason : str, default is Undefined, optional
        reason
    status : str, default is Undefined, optional
        status
    $type : str, default is Undefined, optional
        type
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


schema OperatorOpenshiftIoV1KubeControllerManagerStatusGenerationsItems0:
    r"""
    GenerationStatus keeps track of the generation for a given resource so that decisions about forced updates can be made.

    Attributes
    ----------
    group : str, default is Undefined, optional
        group is the group of the thing you're tracking
    hash : str, default is Undefined, optional
        hash is an optional field set for resources without generation that are content sensitive like secrets and configmaps
    lastGeneration : int, default is Undefined, optional
        lastGeneration is the last generation of the workload controller involved
    name : str, default is Undefined, optional
        name is the name of the thing you're tracking
    namespace : str, default is Undefined, optional
        namespace is where the thing you're tracking is
    resource : str, default is Undefined, optional
        resource is the resource type of the thing you're tracking
    """


    group?: str

    hash?: str

    lastGeneration?: int

    name?: str

    namespace?: str

    resource?: str


schema OperatorOpenshiftIoV1KubeControllerManagerStatusNodeStatusesItems0:
    r"""
    NodeStatus provides information about the current state of a particular node managed by this operator.

    Attributes
    ----------
    currentRevision : int, default is Undefined, optional
        currentRevision is the generation of the most recently successful deployment
    lastFailedRevision : int, default is Undefined, optional
        lastFailedRevision is the generation of the deployment we tried and failed to deploy.
    lastFailedRevisionErrors : [str], default is Undefined, optional
        lastFailedRevisionErrors is a list of the errors during the failed deployment referenced in lastFailedRevision
    nodeName : str, default is Undefined, optional
        nodeName is the name of the node
    targetRevision : int, default is Undefined, optional
        targetRevision is the generation of the deployment we're trying to apply
    """


    currentRevision?: int

    lastFailedRevision?: int

    lastFailedRevisionErrors?: [str]

    nodeName?: str

    targetRevision?: int


