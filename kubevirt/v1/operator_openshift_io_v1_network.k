"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema OperatorNetwork:
    r"""
    Network describes the cluster's desired network configuration. It is consumed by the cluster-network-operator.

    Attributes
    ----------
    apiVersion : str, default is "operator.openshift.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Network", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OperatorOpenshiftIoV1NetworkSpec, default is Undefined, optional
        spec
    status : any, default is Undefined, optional
        NetworkStatus is currently unused. Instead, status is reported in the Network.config.openshift.io object.
    """


    apiVersion: "operator.openshift.io/v1" = "operator.openshift.io/v1"

    kind: "Network" = "Network"

    metadata?: v1.ObjectMeta

    spec?: OperatorOpenshiftIoV1NetworkSpec

    status?: any


schema OperatorOpenshiftIoV1NetworkSpec:
    r"""
    NetworkSpec is the top-level network configuration object.

    Attributes
    ----------
    additionalNetworks : [OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0], default is Undefined, optional
        additionalNetworks is a list of extra networks to make available to pods when multiple networks are enabled.
    clusterNetwork : [OperatorOpenshiftIoV1NetworkSpecClusterNetworkItems0], default is Undefined, optional
        clusterNetwork is the IP address pool to use for pod IPs. Some network providers, e.g. OpenShift SDN, support multiple ClusterNetworks. Others only support one. This is equivalent to the cluster-cidr.
    defaultNetwork : OperatorOpenshiftIoV1NetworkSpecDefaultNetwork, default is Undefined, optional
        default network
    deployKubeProxy : bool, default is Undefined, optional
        deployKubeProxy specifies whether or not a standalone kube-proxy should be deployed by the operator. Some network providers include kube-proxy or similar functionality. If unset, the plugin will attempt to select the correct value, which is false when OpenShift SDN and ovn-kubernetes are used and true otherwise.
    disableMultiNetwork : bool, default is Undefined, optional
        disableMultiNetwork specifies whether or not multiple pod network support should be disabled. If unset, this property defaults to 'false' and multiple network support is enabled.
    kubeProxyConfig : OperatorOpenshiftIoV1NetworkSpecKubeProxyConfig, default is Undefined, optional
        kube proxy config
    logLevel : str, default is Undefined, optional
        logLevel allows configuring the logging level of the components deployed by the operator. Currently only Kuryr SDN is affected by this setting. Please note that turning on extensive logging may affect performance. The default value is "Normal".
    serviceNetwork : [str], default is Undefined, optional
        serviceNetwork is the ip address pool to use for Service IPs Currently, all existing network providers only support a single value here, but this is an array to allow for growth.
    """


    additionalNetworks?: [OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0]

    clusterNetwork?: [OperatorOpenshiftIoV1NetworkSpecClusterNetworkItems0]

    defaultNetwork?: OperatorOpenshiftIoV1NetworkSpecDefaultNetwork

    deployKubeProxy?: bool

    disableMultiNetwork?: bool

    kubeProxyConfig?: OperatorOpenshiftIoV1NetworkSpecKubeProxyConfig

    logLevel?: str

    serviceNetwork?: [str]


schema OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0:
    r"""
    AdditionalNetworkDefinition configures an extra network that is available but not created by default. Instead, pods must request them by name. type must be specified, along with exactly one "Config" that matches the type.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name is the name of the network. This will be populated in the resulting CRD This must be unique.
    namespace : str, default is Undefined, optional
        namespace is the namespace of the network. This will be populated in the resulting CRD If not given the network will be created in the default namespace.
    rawCNIConfig : str, default is Undefined, optional
        rawCNIConfig is the raw CNI configuration json to create in the NetworkAttachmentDefinition CRD
    simpleMacvlanConfig : OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfig, default is Undefined, optional
        simple macvlan config
    $type : str, default is Undefined, optional
        type is the type of network The supported values are NetworkTypeRaw, NetworkTypeSimpleMacvlan
    """


    name?: str

    namespace?: str

    rawCNIConfig?: str

    simpleMacvlanConfig?: OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfig

    $type?: str


schema OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfig:
    r"""
    SimpleMacvlanConfig configures the macvlan interface in case of type:NetworkTypeSimpleMacvlan

    Attributes
    ----------
    ipamConfig : OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfig, default is Undefined, optional
        ipam config
    master : str, default is Undefined, optional
        master is the host interface to create the macvlan interface from. If not specified, it will be default route interface
    mode : str, default is Undefined, optional
        mode is the macvlan mode: bridge, private, vepa, passthru. The default is bridge
    mtu : int, default is Undefined, optional
        mtu is the mtu to use for the macvlan interface. if unset, host's kernel will select the value.
    """


    ipamConfig?: OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfig

    master?: str

    mode?: str

    mtu?: int


    check:
        mtu >= 0 if mtu not in [None, Undefined]


schema OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfig:
    r"""
    IPAMConfig configures IPAM module will be used for IP Address Management (IPAM).

    Attributes
    ----------
    staticIPAMConfig : OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfig, default is Undefined, optional
        static IP a m config
    $type : str, default is Undefined, optional
        Type is the type of IPAM module will be used for IP Address Management(IPAM). The supported values are IPAMTypeDHCP, IPAMTypeStatic
    """


    staticIPAMConfig?: OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfig

    $type?: str


schema OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfig:
    r"""
    StaticIPAMConfig configures the static IP address in case of type:IPAMTypeStatic

    Attributes
    ----------
    addresses : [OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfigAddressesItems0], default is Undefined, optional
        Addresses configures IP address for the interface
    dns : OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfigDNS, default is Undefined, optional
        dns
    routes : [OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfigRoutesItems0], default is Undefined, optional
        Routes configures IP routes for the interface
    """


    addresses?: [OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfigAddressesItems0]

    dns?: OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfigDNS

    routes?: [OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfigRoutesItems0]


schema OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfigAddressesItems0:
    r"""
    StaticIPAMAddresses provides IP address and Gateway for static IPAM addresses

    Attributes
    ----------
    address : str, default is Undefined, optional
        Address is the IP address in CIDR format
    gateway : str, default is Undefined, optional
        Gateway is IP inside of subnet to designate as the gateway
    """


    address?: str

    gateway?: str


schema OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfigDNS:
    r"""
    DNS configures DNS for the interface

    Attributes
    ----------
    domain : str, default is Undefined, optional
        Domain configures the domainname the local domain used for short hostname lookups
    nameservers : [str], default is Undefined, optional
        Nameservers points DNS servers for IP lookup
    search : [str], default is Undefined, optional
        Search configures priority ordered search domains for short hostname lookups
    """


    domain?: str

    nameservers?: [str]

    search?: [str]


schema OperatorOpenshiftIoV1NetworkSpecAdditionalNetworksItems0SimpleMacvlanConfigIpamConfigStaticIPAMConfigRoutesItems0:
    r"""
    StaticIPAMRoutes provides Destination/Gateway pairs for static IPAM routes

    Attributes
    ----------
    destination : str, default is Undefined, optional
        Destination points the IP route destination
    gateway : str, default is Undefined, optional
        Gateway is the route's next-hop IP address If unset, a default gateway is assumed (as determined by the CNI plugin).
    """


    destination?: str

    gateway?: str


schema OperatorOpenshiftIoV1NetworkSpecClusterNetworkItems0:
    r"""
    ClusterNetworkEntry is a subnet from which to allocate PodIPs. A network of size HostPrefix (in CIDR notation) will be allocated when nodes join the cluster. Not all network providers support multiple ClusterNetworks

    Attributes
    ----------
    cidr : str, default is Undefined, optional
        cidr
    hostPrefix : int, default is Undefined, optional
        host prefix
    """


    cidr?: str

    hostPrefix?: int


    check:
        hostPrefix >= 0 if hostPrefix not in [None, Undefined]


schema OperatorOpenshiftIoV1NetworkSpecDefaultNetwork:
    r"""
    defaultNetwork is the "default" network that all pods will receive

    Attributes
    ----------
    kuryrConfig : OperatorOpenshiftIoV1NetworkSpecDefaultNetworkKuryrConfig, default is Undefined, optional
        kuryr config
    openshiftSDNConfig : OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOpenshiftSDNConfig, default is Undefined, optional
        openshift s d n config
    ovnKubernetesConfig : OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOvnKubernetesConfig, default is Undefined, optional
        ovn kubernetes config
    $type : str, default is Undefined, optional
        type is the type of network All NetworkTypes are supported except for NetworkTypeRaw
    """


    kuryrConfig?: OperatorOpenshiftIoV1NetworkSpecDefaultNetworkKuryrConfig

    openshiftSDNConfig?: OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOpenshiftSDNConfig

    ovnKubernetesConfig?: OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOvnKubernetesConfig

    $type?: str


schema OperatorOpenshiftIoV1NetworkSpecDefaultNetworkKuryrConfig:
    r"""
    KuryrConfig configures the kuryr plugin

    Attributes
    ----------
    controllerProbesPort : int, default is Undefined, optional
        The port kuryr-controller will listen for readiness and liveness requests.
    daemonProbesPort : int, default is Undefined, optional
        The port kuryr-daemon will listen for readiness and liveness requests.
    enablePortPoolsPrepopulation : bool, default is Undefined, optional
        enablePortPoolsPrepopulation when true will make Kuryr prepopulate each newly created port pool with a minimum number of ports. Kuryr uses Neutron port pooling to fight the fact that it takes a significant amount of time to create one. Instead of creating it when pod is being deployed, Kuryr keeps a number of ports ready to be attached to pods. By default port prepopulation is disabled.
    openStackServiceNetwork : str, default is Undefined, optional
        openStackServiceNetwork contains the CIDR of network from which to allocate IPs for OpenStack Octavia's Amphora VMs. Please note that with Amphora driver Octavia uses two IPs from that network for each loadbalancer - one given by OpenShift and second for VRRP connections. As the first one is managed by OpenShift's and second by Neutron's IPAMs, those need to come from different pools. Therefore `openStackServiceNetwork` needs to be at least twice the size of `serviceNetwork`, and whole `serviceNetwork` must be overlapping with `openStackServiceNetwork`. cluster-network-operator will then make sure VRRP IPs are taken from the ranges inside `openStackServiceNetwork` that are not overlapping with `serviceNetwork`, effectivly preventing conflicts. If not set cluster-network-operator will use `serviceNetwork` expanded by decrementing the prefix size by 1.
    poolBatchPorts : int, default is Undefined, optional
        poolBatchPorts sets a number of ports that should be created in a single batch request to extend the port pool. The default is 3. For more information about port pools see enablePortPoolsPrepopulation setting.
    poolMaxPorts : int, default is Undefined, optional
        poolMaxPorts sets a maximum number of free ports that are being kept in a port pool. If the number of ports exceeds this setting, free ports will get deleted. Setting 0 will disable this upper bound, effectively preventing pools from shrinking and this is the default value. For more information about port pools see enablePortPoolsPrepopulation setting.
    poolMinPorts : int, default is Undefined, optional
        poolMinPorts sets a minimum number of free ports that should be kept in a port pool. If the number of ports is lower than this setting, new ports will get created and added to pool. The default is 1. For more information about port pools see enablePortPoolsPrepopulation setting.
    """


    controllerProbesPort?: int

    daemonProbesPort?: int

    enablePortPoolsPrepopulation?: bool

    openStackServiceNetwork?: str

    poolBatchPorts?: int

    poolMaxPorts?: int

    poolMinPorts?: int


    check:
        controllerProbesPort >= 0 if controllerProbesPort not in [None, Undefined]
        daemonProbesPort >= 0 if daemonProbesPort not in [None, Undefined]
        poolBatchPorts >= 0 if poolBatchPorts not in [None, Undefined]
        poolMaxPorts >= 0 if poolMaxPorts not in [None, Undefined]
        poolMinPorts >= 1 if poolMinPorts not in [None, Undefined]


schema OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOpenshiftSDNConfig:
    r"""
    openShiftSDNConfig configures the openshift-sdn plugin

    Attributes
    ----------
    enableUnidling : bool, default is Undefined, optional
        enableUnidling controls whether or not the service proxy will support idling and unidling of services. By default, unidling is enabled.
    mode : str, default is Undefined, optional
        mode is one of "Multitenant", "Subnet", or "NetworkPolicy"
    mtu : int, default is Undefined, optional
        mtu is the mtu to use for the tunnel interface. Defaults to 1450 if unset. This must be 50 bytes smaller than the machine's uplink.
    useExternalOpenvswitch : bool, default is Undefined, optional
        useExternalOpenvswitch tells the operator not to install openvswitch, because it will be provided separately. If set, you must provide it yourself.
    vxlanPort : int, default is Undefined, optional
        vxlanPort is the port to use for all vxlan packets. The default is 4789.
    """


    enableUnidling?: bool

    mode?: str

    mtu?: int

    useExternalOpenvswitch?: bool

    vxlanPort?: int


    check:
        mtu >= 0 if mtu not in [None, Undefined]
        vxlanPort >= 0 if vxlanPort not in [None, Undefined]


schema OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOvnKubernetesConfig:
    r"""
    oVNKubernetesConfig configures the ovn-kubernetes plugin. This is currently not implemented.

    Attributes
    ----------
    genevePort : int, default is Undefined, optional
        geneve port is the UDP port to be used by geneve encapulation. Default is 6081
    hybridOverlayConfig : OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOvnKubernetesConfigHybridOverlayConfig, default is Undefined, optional
        hybrid overlay config
    mtu : int, default is Undefined, optional
        mtu is the MTU to use for the tunnel interface. This must be 100 bytes smaller than the uplink mtu. Default is 1400
    """


    genevePort?: int

    hybridOverlayConfig?: OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOvnKubernetesConfigHybridOverlayConfig

    mtu?: int


    check:
        genevePort >= 1 if genevePort not in [None, Undefined]
        mtu >= 0 if mtu not in [None, Undefined]


schema OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOvnKubernetesConfigHybridOverlayConfig:
    r"""
    HybridOverlayConfig configures an additional overlay network for peers that are not using OVN.

    Attributes
    ----------
    hybridClusterNetwork : [OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOvnKubernetesConfigHybridOverlayConfigHybridClusterNetworkItems0], default is Undefined, optional
        HybridClusterNetwork defines a network space given to nodes on an additional overlay network.
    """


    hybridClusterNetwork?: [OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOvnKubernetesConfigHybridOverlayConfigHybridClusterNetworkItems0]


schema OperatorOpenshiftIoV1NetworkSpecDefaultNetworkOvnKubernetesConfigHybridOverlayConfigHybridClusterNetworkItems0:
    r"""
    ClusterNetworkEntry is a subnet from which to allocate PodIPs. A network of size HostPrefix (in CIDR notation) will be allocated when nodes join the cluster. Not all network providers support multiple ClusterNetworks

    Attributes
    ----------
    cidr : str, default is Undefined, optional
        cidr
    hostPrefix : int, default is Undefined, optional
        host prefix
    """


    cidr?: str

    hostPrefix?: int


    check:
        hostPrefix >= 0 if hostPrefix not in [None, Undefined]


schema OperatorOpenshiftIoV1NetworkSpecKubeProxyConfig:
    r"""
    kubeProxyConfig lets us configure desired proxy configuration. If not specified, sensible defaults will be chosen by OpenShift directly. Not consumed by all network providers - currently only openshift-sdn.

    Attributes
    ----------
    bindAddress : str, default is Undefined, optional
        The address to "bind" on Defaults to 0.0.0.0
    iptablesSyncPeriod : str, default is Undefined, optional
        The period that iptables rules are refreshed. Default: 30s
    proxyArguments : {str:[str]}, default is Undefined, optional
        Any additional arguments to pass to the kubeproxy process
    """


    bindAddress?: str

    iptablesSyncPeriod?: str

    proxyArguments?: {str:[str]}


