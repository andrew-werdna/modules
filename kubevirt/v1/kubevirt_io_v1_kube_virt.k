"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema KubeVirt:
    r"""
    KubeVirt represents the object deploying all KubeVirt resources

    Attributes
    ----------
    apiVersion : str, default is "kubevirt.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "KubeVirt", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KubevirtIoV1KubeVirtSpec, default is Undefined, required
        spec
    status : KubevirtIoV1KubeVirtStatus, default is Undefined, optional
        status
    """


    apiVersion: "kubevirt.io/v1" = "kubevirt.io/v1"

    kind: "KubeVirt" = "KubeVirt"

    metadata?: v1.ObjectMeta

    spec: KubevirtIoV1KubeVirtSpec

    status?: KubevirtIoV1KubeVirtStatus


schema KubevirtIoV1KubeVirtSpec:
    r"""
    kubevirt io v1 kube virt spec

    Attributes
    ----------
    certificateRotateStrategy : KubevirtIoV1KubeVirtSpecCertificateRotateStrategy, default is Undefined, optional
        certificate rotate strategy
    configuration : KubevirtIoV1KubeVirtSpecConfiguration, default is Undefined, optional
        configuration
    customizeComponents : KubevirtIoV1KubeVirtSpecCustomizeComponents, default is Undefined, optional
        customize components
    imagePullPolicy : str, default is Undefined, optional
        The ImagePullPolicy to use.
    imagePullSecrets : [KubevirtIoV1KubeVirtSpecImagePullSecretsItems0], default is Undefined, optional
        The imagePullSecrets to pull the container images from Defaults to none
    imageRegistry : str, default is Undefined, optional
        The image registry to pull the container images from Defaults to the same registry the operator's container image is pulled from.
    imageTag : str, default is Undefined, optional
        The image tag to use for the continer images installed. Defaults to the same tag as the operator's container image.
    infra : KubevirtIoV1KubeVirtSpecInfra, default is Undefined, optional
        infra
    monitorAccount : str, default is Undefined, optional
        The name of the Prometheus service account that needs read-access to KubeVirt endpoints Defaults to prometheus-k8s
    monitorNamespace : str, default is Undefined, optional
        The namespace Prometheus is deployed in Defaults to openshift-monitor
    productComponent : str, default is Undefined, optional
        Designate the apps.kubevirt.io/component label for KubeVirt components. Useful if KubeVirt is included as part of a product. If ProductComponent is not specified, the component label default value is kubevirt.
    productName : str, default is Undefined, optional
        Designate the apps.kubevirt.io/part-of label for KubeVirt components. Useful if KubeVirt is included as part of a product. If ProductName is not specified, the part-of label will be omitted.
    productVersion : str, default is Undefined, optional
        Designate the apps.kubevirt.io/version label for KubeVirt components. Useful if KubeVirt is included as part of a product. If ProductVersion is not specified, KubeVirt's version will be used.
    serviceMonitorNamespace : str, default is Undefined, optional
        The namespace the service monitor will be deployed  When ServiceMonitorNamespace is set, then we'll install the service monitor object in that namespace otherwise we will use the monitoring namespace.
    uninstallStrategy : str, default is Undefined, optional
        Specifies if kubevirt can be deleted if workloads are still present. This is mainly a precaution to avoid accidental data loss
    workloadUpdateStrategy : KubevirtIoV1KubeVirtSpecWorkloadUpdateStrategy, default is Undefined, optional
        workload update strategy
    workloads : KubevirtIoV1KubeVirtSpecWorkloads, default is Undefined, optional
        workloads
    """


    certificateRotateStrategy?: KubevirtIoV1KubeVirtSpecCertificateRotateStrategy

    configuration?: KubevirtIoV1KubeVirtSpecConfiguration

    customizeComponents?: KubevirtIoV1KubeVirtSpecCustomizeComponents

    imagePullPolicy?: str

    imagePullSecrets?: [KubevirtIoV1KubeVirtSpecImagePullSecretsItems0]

    imageRegistry?: str

    imageTag?: str

    infra?: KubevirtIoV1KubeVirtSpecInfra

    monitorAccount?: str

    monitorNamespace?: str

    productComponent?: str

    productName?: str

    productVersion?: str

    serviceMonitorNamespace?: str

    uninstallStrategy?: str

    workloadUpdateStrategy?: KubevirtIoV1KubeVirtSpecWorkloadUpdateStrategy

    workloads?: KubevirtIoV1KubeVirtSpecWorkloads


schema KubevirtIoV1KubeVirtSpecCertificateRotateStrategy:
    r"""
    kubevirt io v1 kube virt spec certificate rotate strategy

    Attributes
    ----------
    selfSigned : KubevirtIoV1KubeVirtSpecCertificateRotateStrategySelfSigned, default is Undefined, optional
        self signed
    """


    selfSigned?: KubevirtIoV1KubeVirtSpecCertificateRotateStrategySelfSigned


schema KubevirtIoV1KubeVirtSpecCertificateRotateStrategySelfSigned:
    r"""
    kubevirt io v1 kube virt spec certificate rotate strategy self signed

    Attributes
    ----------
    ca : KubevirtIoV1KubeVirtSpecCertificateRotateStrategySelfSignedCa, default is Undefined, optional
        ca
    caOverlapInterval : str, default is Undefined, optional
        Deprecated. Use CA.Duration and CA.RenewBefore instead
    caRotateInterval : str, default is Undefined, optional
        Deprecated. Use CA.Duration instead
    certRotateInterval : str, default is Undefined, optional
        Deprecated. Use Server.Duration instead
    server : KubevirtIoV1KubeVirtSpecCertificateRotateStrategySelfSignedServer, default is Undefined, optional
        server
    """


    ca?: KubevirtIoV1KubeVirtSpecCertificateRotateStrategySelfSignedCa

    caOverlapInterval?: str

    caRotateInterval?: str

    certRotateInterval?: str

    server?: KubevirtIoV1KubeVirtSpecCertificateRotateStrategySelfSignedServer


schema KubevirtIoV1KubeVirtSpecCertificateRotateStrategySelfSignedCa:
    r"""
    CA configuration CA certs are kept in the CA bundle as long as they are valid

    Attributes
    ----------
    duration : str, default is Undefined, optional
        The requested 'duration' (i.e. lifetime) of the Certificate.
    renewBefore : str, default is Undefined, optional
        The amount of time before the currently issued certificate's "notAfter" time that we will begin to attempt to renew the certificate.
    """


    duration?: str

    renewBefore?: str


schema KubevirtIoV1KubeVirtSpecCertificateRotateStrategySelfSignedServer:
    r"""
    Server configuration Certs are rotated and discarded

    Attributes
    ----------
    duration : str, default is Undefined, optional
        The requested 'duration' (i.e. lifetime) of the Certificate.
    renewBefore : str, default is Undefined, optional
        The amount of time before the currently issued certificate's "notAfter" time that we will begin to attempt to renew the certificate.
    """


    duration?: str

    renewBefore?: str


schema KubevirtIoV1KubeVirtSpecConfiguration:
    r"""
    holds kubevirt configurations. same as the virt-configMap

    Attributes
    ----------
    additionalGuestMemoryOverheadRatio : str, default is Undefined, optional
        AdditionalGuestMemoryOverheadRatio can be used to increase the virtualization infrastructure overhead. This is useful, since the calculation of this overhead is not accurate and cannot be entirely known in advance. The ratio that is being set determines by which factor to increase the overhead calculated by Kubevirt. A higher ratio means that the VMs would be less compromised by node pressures, but would mean that fewer VMs could be scheduled to a node. If not set, the default is 1.
    apiConfiguration : KubevirtIoV1KubeVirtSpecConfigurationAPIConfiguration, default is Undefined, optional
        api configuration
    architectureConfiguration : KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfiguration, default is Undefined, optional
        architecture configuration
    autoCPULimitNamespaceLabelSelector : KubevirtIoV1KubeVirtSpecConfigurationAutoCPULimitNamespaceLabelSelector, default is Undefined, optional
        auto CPU limit namespace label selector
    controllerConfiguration : KubevirtIoV1KubeVirtSpecConfigurationControllerConfiguration, default is Undefined, optional
        controller configuration
    cpuModel : str, default is Undefined, optional
        cpu model
    cpuRequest : int | str, default is Undefined, optional
        cpu request
    defaultRuntimeClass : str, default is Undefined, optional
        default runtime class
    developerConfiguration : KubevirtIoV1KubeVirtSpecConfigurationDeveloperConfiguration, default is Undefined, optional
        developer configuration
    emulatedMachines : [str], default is Undefined, optional
        emulated machines
    evictionStrategy : str, default is Undefined, optional
        EvictionStrategy defines at the cluster level if the VirtualMachineInstance should be migrated instead of shut-off in case of a node drain. If the VirtualMachineInstance specific field is set it overrides the cluster level one.
    handlerConfiguration : KubevirtIoV1KubeVirtSpecConfigurationHandlerConfiguration, default is Undefined, optional
        handler configuration
    imagePullPolicy : str, default is Undefined, optional
        PullPolicy describes a policy for if/when to pull a container image
    ksmConfiguration : KubevirtIoV1KubeVirtSpecConfigurationKsmConfiguration, default is Undefined, optional
        ksm configuration
    liveUpdateConfiguration : KubevirtIoV1KubeVirtSpecConfigurationLiveUpdateConfiguration, default is Undefined, optional
        live update configuration
    machineType : str, default is Undefined, optional
        Deprecated. Use architectureConfiguration instead.
    mediatedDevicesConfiguration : KubevirtIoV1KubeVirtSpecConfigurationMediatedDevicesConfiguration, default is Undefined, optional
        mediated devices configuration
    memBalloonStatsPeriod : int, default is Undefined, optional
        mem balloon stats period
    migrations : KubevirtIoV1KubeVirtSpecConfigurationMigrations, default is Undefined, optional
        migrations
    minCPUModel : str, default is Undefined, optional
        min CPU model
    network : KubevirtIoV1KubeVirtSpecConfigurationNetwork, default is Undefined, optional
        network
    obsoleteCPUModels : {str:bool}, default is Undefined, optional
        obsolete CPU models
    ovmfPath : str, default is Undefined, optional
        ovmf path
    permittedHostDevices : KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevices, default is Undefined, optional
        permitted host devices
    seccompConfiguration : KubevirtIoV1KubeVirtSpecConfigurationSeccompConfiguration, default is Undefined, optional
        seccomp configuration
    selinuxLauncherType : str, default is Undefined, optional
        selinux launcher type
    smbios : KubevirtIoV1KubeVirtSpecConfigurationSmbios, default is Undefined, optional
        smbios
    supportContainerResources : [KubevirtIoV1KubeVirtSpecConfigurationSupportContainerResourcesItems0], default is Undefined, optional
        SupportContainerResources specifies the resource requirements for various types of supporting containers such as container disks/virtiofs/sidecars and hotplug attachment pods. If omitted a sensible default will be supplied.
    supportedGuestAgentVersions : [str], default is Undefined, optional
        deprecated
    tlsConfiguration : KubevirtIoV1KubeVirtSpecConfigurationTLSConfiguration, default is Undefined, optional
        tls configuration
    virtualMachineInstancesPerNode : int, default is Undefined, optional
        virtual machine instances per node
    virtualMachineOptions : KubevirtIoV1KubeVirtSpecConfigurationVirtualMachineOptions, default is Undefined, optional
        virtual machine options
    vmRolloutStrategy : str, default is Undefined, optional
        VMRolloutStrategy defines how changes to a VM object propagate to its VMI
    vmStateStorageClass : str, default is Undefined, optional
        VMStateStorageClass is the name of the storage class to use for the PVCs created to preserve VM state, like TPM. The storage class must support RWX in filesystem mode.
    webhookConfiguration : KubevirtIoV1KubeVirtSpecConfigurationWebhookConfiguration, default is Undefined, optional
        webhook configuration
    """


    additionalGuestMemoryOverheadRatio?: str

    apiConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationAPIConfiguration

    architectureConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfiguration

    autoCPULimitNamespaceLabelSelector?: KubevirtIoV1KubeVirtSpecConfigurationAutoCPULimitNamespaceLabelSelector

    controllerConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationControllerConfiguration

    cpuModel?: str

    cpuRequest?: int | str

    defaultRuntimeClass?: str

    developerConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationDeveloperConfiguration

    emulatedMachines?: [str]

    evictionStrategy?: str

    handlerConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationHandlerConfiguration

    imagePullPolicy?: str

    ksmConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationKsmConfiguration

    liveUpdateConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationLiveUpdateConfiguration

    machineType?: str

    mediatedDevicesConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationMediatedDevicesConfiguration

    memBalloonStatsPeriod?: int

    migrations?: KubevirtIoV1KubeVirtSpecConfigurationMigrations

    minCPUModel?: str

    network?: KubevirtIoV1KubeVirtSpecConfigurationNetwork

    obsoleteCPUModels?: {str:bool}

    ovmfPath?: str

    permittedHostDevices?: KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevices

    seccompConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationSeccompConfiguration

    selinuxLauncherType?: str

    smbios?: KubevirtIoV1KubeVirtSpecConfigurationSmbios

    supportContainerResources?: [KubevirtIoV1KubeVirtSpecConfigurationSupportContainerResourcesItems0]

    supportedGuestAgentVersions?: [str]

    tlsConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationTLSConfiguration

    virtualMachineInstancesPerNode?: int

    virtualMachineOptions?: KubevirtIoV1KubeVirtSpecConfigurationVirtualMachineOptions

    vmRolloutStrategy?: "Stage" | "LiveUpdate"

    vmStateStorageClass?: str

    webhookConfiguration?: KubevirtIoV1KubeVirtSpecConfigurationWebhookConfiguration


    check:
        _regex_match(str(cpuRequest), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if cpuRequest


schema KubevirtIoV1KubeVirtSpecConfigurationAPIConfiguration:
    r"""
    ReloadableComponentConfiguration holds all generic k8s configuration options which can be reloaded by components without requiring a restart.

    Attributes
    ----------
    restClient : KubevirtIoV1KubeVirtSpecConfigurationAPIConfigurationRestClient, default is Undefined, optional
        rest client
    """


    restClient?: KubevirtIoV1KubeVirtSpecConfigurationAPIConfigurationRestClient


schema KubevirtIoV1KubeVirtSpecConfigurationAPIConfigurationRestClient:
    r"""
    RestClient can be used to tune certain aspects of the k8s client in use.

    Attributes
    ----------
    rateLimiter : KubevirtIoV1KubeVirtSpecConfigurationAPIConfigurationRestClientRateLimiter, default is Undefined, optional
        rate limiter
    """


    rateLimiter?: KubevirtIoV1KubeVirtSpecConfigurationAPIConfigurationRestClientRateLimiter


schema KubevirtIoV1KubeVirtSpecConfigurationAPIConfigurationRestClientRateLimiter:
    r"""
    RateLimiter allows selecting and configuring different rate limiters for the k8s client.

    Attributes
    ----------
    tokenBucketRateLimiter : KubevirtIoV1KubeVirtSpecConfigurationAPIConfigurationRestClientRateLimiterTokenBucketRateLimiter, default is Undefined, optional
        token bucket rate limiter
    """


    tokenBucketRateLimiter?: KubevirtIoV1KubeVirtSpecConfigurationAPIConfigurationRestClientRateLimiterTokenBucketRateLimiter


schema KubevirtIoV1KubeVirtSpecConfigurationAPIConfigurationRestClientRateLimiterTokenBucketRateLimiter:
    r"""
    kubevirt io v1 kube virt spec configuration API configuration rest client rate limiter token bucket rate limiter

    Attributes
    ----------
    burst : int, default is Undefined, required
        Maximum burst for throttle. If it's zero, the component default will be used
    qps : float, default is Undefined, required
        QPS indicates the maximum QPS to the apiserver from this client. If it's zero, the component default will be used
    """


    burst: int

    qps: float


schema KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfiguration:
    r"""
    kubevirt io v1 kube virt spec configuration architecture configuration

    Attributes
    ----------
    amd64 : KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfigurationAmd64, default is Undefined, optional
        amd64
    arm64 : KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfigurationArm64, default is Undefined, optional
        arm64
    defaultArchitecture : str, default is Undefined, optional
        default architecture
    ppc64le : KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfigurationPpc64le, default is Undefined, optional
        ppc64le
    """


    amd64?: KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfigurationAmd64

    arm64?: KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfigurationArm64

    defaultArchitecture?: str

    ppc64le?: KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfigurationPpc64le


schema KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfigurationAmd64:
    r"""
    kubevirt io v1 kube virt spec configuration architecture configuration amd64

    Attributes
    ----------
    emulatedMachines : [str], default is Undefined, optional
        emulated machines
    machineType : str, default is Undefined, optional
        machine type
    ovmfPath : str, default is Undefined, optional
        ovmf path
    """


    emulatedMachines?: [str]

    machineType?: str

    ovmfPath?: str


schema KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfigurationArm64:
    r"""
    kubevirt io v1 kube virt spec configuration architecture configuration arm64

    Attributes
    ----------
    emulatedMachines : [str], default is Undefined, optional
        emulated machines
    machineType : str, default is Undefined, optional
        machine type
    ovmfPath : str, default is Undefined, optional
        ovmf path
    """


    emulatedMachines?: [str]

    machineType?: str

    ovmfPath?: str


schema KubevirtIoV1KubeVirtSpecConfigurationArchitectureConfigurationPpc64le:
    r"""
    kubevirt io v1 kube virt spec configuration architecture configuration ppc64le

    Attributes
    ----------
    emulatedMachines : [str], default is Undefined, optional
        emulated machines
    machineType : str, default is Undefined, optional
        machine type
    ovmfPath : str, default is Undefined, optional
        ovmf path
    """


    emulatedMachines?: [str]

    machineType?: str

    ovmfPath?: str


schema KubevirtIoV1KubeVirtSpecConfigurationAutoCPULimitNamespaceLabelSelector:
    r"""
    When set, AutoCPULimitNamespaceLabelSelector will set a CPU limit on virt-launcher for VMIs running inside namespaces that match the label selector. The CPU limit will equal the number of requested vCPUs. This setting does not apply to VMIs with dedicated CPUs.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecConfigurationAutoCPULimitNamespaceLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecConfigurationAutoCPULimitNamespaceLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecConfigurationAutoCPULimitNamespaceLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecConfigurationControllerConfiguration:
    r"""
    ReloadableComponentConfiguration holds all generic k8s configuration options which can be reloaded by components without requiring a restart.

    Attributes
    ----------
    restClient : KubevirtIoV1KubeVirtSpecConfigurationControllerConfigurationRestClient, default is Undefined, optional
        rest client
    """


    restClient?: KubevirtIoV1KubeVirtSpecConfigurationControllerConfigurationRestClient


schema KubevirtIoV1KubeVirtSpecConfigurationControllerConfigurationRestClient:
    r"""
    RestClient can be used to tune certain aspects of the k8s client in use.

    Attributes
    ----------
    rateLimiter : KubevirtIoV1KubeVirtSpecConfigurationControllerConfigurationRestClientRateLimiter, default is Undefined, optional
        rate limiter
    """


    rateLimiter?: KubevirtIoV1KubeVirtSpecConfigurationControllerConfigurationRestClientRateLimiter


schema KubevirtIoV1KubeVirtSpecConfigurationControllerConfigurationRestClientRateLimiter:
    r"""
    RateLimiter allows selecting and configuring different rate limiters for the k8s client.

    Attributes
    ----------
    tokenBucketRateLimiter : KubevirtIoV1KubeVirtSpecConfigurationControllerConfigurationRestClientRateLimiterTokenBucketRateLimiter, default is Undefined, optional
        token bucket rate limiter
    """


    tokenBucketRateLimiter?: KubevirtIoV1KubeVirtSpecConfigurationControllerConfigurationRestClientRateLimiterTokenBucketRateLimiter


schema KubevirtIoV1KubeVirtSpecConfigurationControllerConfigurationRestClientRateLimiterTokenBucketRateLimiter:
    r"""
    kubevirt io v1 kube virt spec configuration controller configuration rest client rate limiter token bucket rate limiter

    Attributes
    ----------
    burst : int, default is Undefined, required
        Maximum burst for throttle. If it's zero, the component default will be used
    qps : float, default is Undefined, required
        QPS indicates the maximum QPS to the apiserver from this client. If it's zero, the component default will be used
    """


    burst: int

    qps: float


schema KubevirtIoV1KubeVirtSpecConfigurationDeveloperConfiguration:
    r"""
    DeveloperConfiguration holds developer options

    Attributes
    ----------
    cpuAllocationRatio : int, default is Undefined, optional
        For each requested virtual CPU, CPUAllocationRatio defines how much physical CPU to request per VMI from the hosting node. The value is in fraction of a CPU thread (or core on non-hyperthreaded nodes). For example, a value of 1 means 1 physical CPU thread per VMI CPU thread. A value of 100 would be 1% of a physical thread allocated for each requested VMI thread. This option has no effect on VMIs that request dedicated CPUs. More information at: https://kubevirt.io/user-guide/operations/node_overcommit/#node-cpu-allocation-ratio Defaults to 10
    diskVerification : KubevirtIoV1KubeVirtSpecConfigurationDeveloperConfigurationDiskVerification, default is Undefined, optional
        disk verification
    featureGates : [str], default is Undefined, optional
        FeatureGates is the list of experimental features to enable. Defaults to none
    logVerbosity : KubevirtIoV1KubeVirtSpecConfigurationDeveloperConfigurationLogVerbosity, default is Undefined, optional
        log verbosity
    memoryOvercommit : int, default is Undefined, optional
        MemoryOvercommit is the percentage of memory we want to give VMIs compared to the amount given to its parent pod (virt-launcher). For example, a value of 102 means the VMI will "see" 2% more memory than its parent pod. Values under 100 are effectively "undercommits". Overcommits can lead to memory exhaustion, which in turn can lead to crashes. Use carefully. Defaults to 100
    minimumClusterTSCFrequency : int, default is Undefined, optional
        Allow overriding the automatically determined minimum TSC frequency of the cluster and fixate the minimum to this frequency.
    minimumReservePVCBytes : int, default is Undefined, optional
        MinimumReservePVCBytes is the amount of space, in bytes, to leave unused on disks. Defaults to 131072 (128KiB)
    nodeSelectors : {str:str}, default is Undefined, optional
        NodeSelectors allows restricting VMI creation to nodes that match a set of labels. Defaults to none
    pvcTolerateLessSpaceUpToPercent : int, default is Undefined, optional
        LessPVCSpaceToleration determines how much smaller, in percentage, disk PVCs are allowed to be compared to the requested size (to account for various overheads). Defaults to 10
    useEmulation : bool, default is Undefined, optional
        UseEmulation can be set to true to allow fallback to software emulation in case hardware-assisted emulation is not available. Defaults to false
    """


    cpuAllocationRatio?: int

    diskVerification?: KubevirtIoV1KubeVirtSpecConfigurationDeveloperConfigurationDiskVerification

    featureGates?: [str]

    logVerbosity?: KubevirtIoV1KubeVirtSpecConfigurationDeveloperConfigurationLogVerbosity

    memoryOvercommit?: int

    minimumClusterTSCFrequency?: int

    minimumReservePVCBytes?: int

    nodeSelectors?: {str:str}

    pvcTolerateLessSpaceUpToPercent?: int

    useEmulation?: bool


schema KubevirtIoV1KubeVirtSpecConfigurationDeveloperConfigurationDiskVerification:
    r"""
    DiskVerification holds container disks verification limits

    Attributes
    ----------
    memoryLimit : int | str, default is Undefined, required
        memory limit
    """


    memoryLimit: int | str


    check:
        _regex_match(str(memoryLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")


schema KubevirtIoV1KubeVirtSpecConfigurationDeveloperConfigurationLogVerbosity:
    r"""
    LogVerbosity sets log verbosity level of  various components

    Attributes
    ----------
    nodeVerbosity : {str:int}, default is Undefined, optional
        NodeVerbosity represents a map of nodes with a specific verbosity level
    virtAPI : int, default is Undefined, optional
        virt API
    virtController : int, default is Undefined, optional
        virt controller
    virtHandler : int, default is Undefined, optional
        virt handler
    virtLauncher : int, default is Undefined, optional
        virt launcher
    virtOperator : int, default is Undefined, optional
        virt operator
    """


    nodeVerbosity?: {str:int}

    virtAPI?: int

    virtController?: int

    virtHandler?: int

    virtLauncher?: int

    virtOperator?: int


schema KubevirtIoV1KubeVirtSpecConfigurationHandlerConfiguration:
    r"""
    ReloadableComponentConfiguration holds all generic k8s configuration options which can be reloaded by components without requiring a restart.

    Attributes
    ----------
    restClient : KubevirtIoV1KubeVirtSpecConfigurationHandlerConfigurationRestClient, default is Undefined, optional
        rest client
    """


    restClient?: KubevirtIoV1KubeVirtSpecConfigurationHandlerConfigurationRestClient


schema KubevirtIoV1KubeVirtSpecConfigurationHandlerConfigurationRestClient:
    r"""
    RestClient can be used to tune certain aspects of the k8s client in use.

    Attributes
    ----------
    rateLimiter : KubevirtIoV1KubeVirtSpecConfigurationHandlerConfigurationRestClientRateLimiter, default is Undefined, optional
        rate limiter
    """


    rateLimiter?: KubevirtIoV1KubeVirtSpecConfigurationHandlerConfigurationRestClientRateLimiter


schema KubevirtIoV1KubeVirtSpecConfigurationHandlerConfigurationRestClientRateLimiter:
    r"""
    RateLimiter allows selecting and configuring different rate limiters for the k8s client.

    Attributes
    ----------
    tokenBucketRateLimiter : KubevirtIoV1KubeVirtSpecConfigurationHandlerConfigurationRestClientRateLimiterTokenBucketRateLimiter, default is Undefined, optional
        token bucket rate limiter
    """


    tokenBucketRateLimiter?: KubevirtIoV1KubeVirtSpecConfigurationHandlerConfigurationRestClientRateLimiterTokenBucketRateLimiter


schema KubevirtIoV1KubeVirtSpecConfigurationHandlerConfigurationRestClientRateLimiterTokenBucketRateLimiter:
    r"""
    kubevirt io v1 kube virt spec configuration handler configuration rest client rate limiter token bucket rate limiter

    Attributes
    ----------
    burst : int, default is Undefined, required
        Maximum burst for throttle. If it's zero, the component default will be used
    qps : float, default is Undefined, required
        QPS indicates the maximum QPS to the apiserver from this client. If it's zero, the component default will be used
    """


    burst: int

    qps: float


schema KubevirtIoV1KubeVirtSpecConfigurationKsmConfiguration:
    r"""
    KSMConfiguration holds the information regarding the enabling the KSM in the nodes (if available).

    Attributes
    ----------
    nodeLabelSelector : KubevirtIoV1KubeVirtSpecConfigurationKsmConfigurationNodeLabelSelector, default is Undefined, optional
        node label selector
    """


    nodeLabelSelector?: KubevirtIoV1KubeVirtSpecConfigurationKsmConfigurationNodeLabelSelector


schema KubevirtIoV1KubeVirtSpecConfigurationKsmConfigurationNodeLabelSelector:
    r"""
    NodeLabelSelector is a selector that filters in which nodes the KSM will be enabled. Empty NodeLabelSelector will enable ksm for every node.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecConfigurationKsmConfigurationNodeLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecConfigurationKsmConfigurationNodeLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecConfigurationKsmConfigurationNodeLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecConfigurationLiveUpdateConfiguration:
    r"""
    LiveUpdateConfiguration holds defaults for live update features

    Attributes
    ----------
    maxCpuSockets : int, default is Undefined, optional
        MaxCpuSockets holds the maximum amount of sockets that can be hotplugged
    maxGuest : int | str, default is Undefined, optional
        MaxGuest defines the maximum amount memory that can be allocated to the guest using hotplug.
    maxHotplugRatio : int, default is Undefined, optional
        MaxHotplugRatio is the ratio used to define the max amount of a hotplug resource that can be made available to a VM when the specific Max* setting is not defined (MaxCpuSockets, MaxGuest) Example: VM is configured with 512Mi of guest memory, if MaxGuest is not defined and MaxHotplugRatio is 2 then MaxGuest = 1Gi defaults to 4
    """


    maxCpuSockets?: int

    maxGuest?: int | str

    maxHotplugRatio?: int


    check:
        _regex_match(str(maxGuest), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if maxGuest


schema KubevirtIoV1KubeVirtSpecConfigurationMediatedDevicesConfiguration:
    r"""
    MediatedDevicesConfiguration holds information about MDEV types to be defined, if available

    Attributes
    ----------
    mediatedDeviceTypes : [str], default is Undefined, optional
        mediated device types
    mediatedDevicesTypes : [str], default is Undefined, optional
        Deprecated. Use mediatedDeviceTypes instead.
    nodeMediatedDeviceTypes : [KubevirtIoV1KubeVirtSpecConfigurationMediatedDevicesConfigurationNodeMediatedDeviceTypesItems0], default is Undefined, optional
        node mediated device types
    """


    mediatedDeviceTypes?: [str]

    mediatedDevicesTypes?: [str]

    nodeMediatedDeviceTypes?: [KubevirtIoV1KubeVirtSpecConfigurationMediatedDevicesConfigurationNodeMediatedDeviceTypesItems0]


schema KubevirtIoV1KubeVirtSpecConfigurationMediatedDevicesConfigurationNodeMediatedDeviceTypesItems0:
    r"""
    NodeMediatedDeviceTypesConfig holds information about MDEV types to be defined in a specific node that matches the NodeSelector field.

    Attributes
    ----------
    mediatedDeviceTypes : [str], default is Undefined, optional
        mediated device types
    mediatedDevicesTypes : [str], default is Undefined, optional
        Deprecated. Use mediatedDeviceTypes instead.
    nodeSelector : {str:str}, default is Undefined, required
        NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    """


    mediatedDeviceTypes?: [str]

    mediatedDevicesTypes?: [str]

    nodeSelector: {str:str}


schema KubevirtIoV1KubeVirtSpecConfigurationMigrations:
    r"""
    MigrationConfiguration holds migration options. Can be overridden for specific groups of VMs though migration policies. Visit https://kubevirt.io/user-guide/operations/migration_policies/ for more information.

    Attributes
    ----------
    allowAutoConverge : bool, default is Undefined, optional
        AllowAutoConverge allows the platform to compromise performance/availability of VMIs to guarantee successful VMI live migrations. Defaults to false
    allowPostCopy : bool, default is Undefined, optional
        AllowPostCopy enables post-copy live migrations. Such migrations allow even the busiest VMIs to successfully live-migrate. However, events like a network failure can cause a VMI crash. If set to true, migrations will still start in pre-copy, but switch to post-copy when CompletionTimeoutPerGiB triggers. Defaults to false
    bandwidthPerMigration : int | str, default is Undefined, optional
        BandwidthPerMigration limits the amount of network bandwidth live migrations are allowed to use. The value is in quantity per second. Defaults to 0 (no limit)
    completionTimeoutPerGiB : int, default is Undefined, optional
        CompletionTimeoutPerGiB is the maximum number of seconds per GiB a migration is allowed to take. If a live-migration takes longer to migrate than this value multiplied by the size of the VMI, the migration will be cancelled, unless AllowPostCopy is true. Defaults to 800
    disableTLS : bool, default is Undefined, optional
        When set to true, DisableTLS will disable the additional layer of live migration encryption provided by KubeVirt. This is usually a bad idea. Defaults to false
    matchSELinuxLevelOnMigration : bool, default is Undefined, optional
        By default, the SELinux level of target virt-launcher pods is forced to the level of the source virt-launcher. When set to true, MatchSELinuxLevelOnMigration lets the CRI auto-assign a random level to the target. That will ensure the target virt-launcher doesn't share categories with another pod on the node. However, migrations will fail when using RWX volumes that don't automatically deal with SELinux levels.
    network : str, default is Undefined, optional
        Network is the name of the CNI network to use for live migrations. By default, migrations go through the pod network.
    nodeDrainTaintKey : str, default is Undefined, optional
        NodeDrainTaintKey defines the taint key that indicates a node should be drained. Note: this option relies on the deprecated node taint feature. Default: kubevirt.io/drain
    parallelMigrationsPerCluster : int, default is Undefined, optional
        ParallelMigrationsPerCluster is the total number of concurrent live migrations allowed cluster-wide. Defaults to 5
    parallelOutboundMigrationsPerNode : int, default is Undefined, optional
        ParallelOutboundMigrationsPerNode is the maximum number of concurrent outgoing live migrations allowed per node. Defaults to 2
    progressTimeout : int, default is Undefined, optional
        ProgressTimeout is the maximum number of seconds a live migration is allowed to make no progress. Hitting this timeout means a migration transferred 0 data for that many seconds. The migration is then considered stuck and therefore cancelled. Defaults to 150
    unsafeMigrationOverride : bool, default is Undefined, optional
        UnsafeMigrationOverride allows live migrations to occur even if the compatibility check indicates the migration will be unsafe to the guest. Defaults to false
    """


    allowAutoConverge?: bool

    allowPostCopy?: bool

    bandwidthPerMigration?: int | str

    completionTimeoutPerGiB?: int

    disableTLS?: bool

    matchSELinuxLevelOnMigration?: bool

    network?: str

    nodeDrainTaintKey?: str

    parallelMigrationsPerCluster?: int

    parallelOutboundMigrationsPerNode?: int

    progressTimeout?: int

    unsafeMigrationOverride?: bool


    check:
        _regex_match(str(bandwidthPerMigration), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if bandwidthPerMigration


schema KubevirtIoV1KubeVirtSpecConfigurationNetwork:
    r"""
    NetworkConfiguration holds network options

    Attributes
    ----------
    binding : {str:KubevirtIoV1KubeVirtSpecConfigurationNetworkBindingAnon}, default is Undefined, optional
        binding
    defaultNetworkInterface : str, default is Undefined, optional
        default network interface
    permitBridgeInterfaceOnPodNetwork : bool, default is Undefined, optional
        permit bridge interface on pod network
    permitSlirpInterface : bool, default is Undefined, optional
        permit slirp interface
    """


    binding?: {str:KubevirtIoV1KubeVirtSpecConfigurationNetworkBindingAnon}

    defaultNetworkInterface?: str

    permitBridgeInterfaceOnPodNetwork?: bool

    permitSlirpInterface?: bool


schema KubevirtIoV1KubeVirtSpecConfigurationNetworkBindingAnon:
    r"""
    kubevirt io v1 kube virt spec configuration network binding anon

    Attributes
    ----------
    domainAttachmentType : str, default is Undefined, optional
        DomainAttachmentType is a standard domain network attachment method kubevirt supports. Supported values: "tap". The standard domain attachment can be used instead or in addition to the sidecarImage. version: 1alphav1
    migration : KubevirtIoV1KubeVirtSpecConfigurationNetworkBindingAnonMigration, default is Undefined, optional
        migration
    networkAttachmentDefinition : str, default is Undefined, optional
        NetworkAttachmentDefinition references to a NetworkAttachmentDefinition CR object. Format: <name>, <namespace>/<name>. If namespace is not specified, VMI namespace is assumed. version: 1alphav1
    sidecarImage : str, default is Undefined, optional
        SidecarImage references a container image that runs in the virt-launcher pod. The sidecar handles (libvirt) domain configuration and optional services. version: 1alphav1
    """


    domainAttachmentType?: str

    migration?: KubevirtIoV1KubeVirtSpecConfigurationNetworkBindingAnonMigration

    networkAttachmentDefinition?: str

    sidecarImage?: str


schema KubevirtIoV1KubeVirtSpecConfigurationNetworkBindingAnonMigration:
    r"""
    Migration means the VM using the plugin can be safely migrated version: 1alphav1

    Attributes
    ----------
    method : str, default is Undefined, optional
        Method defines a pre-defined migration methodology version: 1alphav1
    """


    method?: str


schema KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevices:
    r"""
    PermittedHostDevices holds information about devices allowed for passthrough

    Attributes
    ----------
    mediatedDevices : [KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesMediatedDevicesItems0], default is Undefined, optional
        mediated devices
    pciHostDevices : [KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesPciHostDevicesItems0], default is Undefined, optional
        pci host devices
    usb : [KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesUsbItems0], default is Undefined, optional
        usb
    """


    mediatedDevices?: [KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesMediatedDevicesItems0]

    pciHostDevices?: [KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesPciHostDevicesItems0]

    usb?: [KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesUsbItems0]


schema KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesMediatedDevicesItems0:
    r"""
    MediatedHostDevice represents a host mediated device allowed for passthrough

    Attributes
    ----------
    externalResourceProvider : bool, default is Undefined, optional
        external resource provider
    mdevNameSelector : str, default is Undefined, required
        mdev name selector
    resourceName : str, default is Undefined, required
        resource name
    """


    externalResourceProvider?: bool

    mdevNameSelector: str

    resourceName: str


schema KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesPciHostDevicesItems0:
    r"""
    PciHostDevice represents a host PCI device allowed for passthrough

    Attributes
    ----------
    externalResourceProvider : bool, default is Undefined, optional
        If true, KubeVirt will leave the allocation and monitoring to an external device plugin
    pciVendorSelector : str, default is Undefined, required
        The vendor_id:product_id tuple of the PCI device
    resourceName : str, default is Undefined, required
        The name of the resource that is representing the device. Exposed by a device plugin and requested by VMs. Typically of the form vendor.com/product_name
    """


    externalResourceProvider?: bool

    pciVendorSelector: str

    resourceName: str


schema KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesUsbItems0:
    r"""
    kubevirt io v1 kube virt spec configuration permitted host devices usb items0

    Attributes
    ----------
    externalResourceProvider : bool, default is Undefined, optional
        If true, KubeVirt will leave the allocation and monitoring to an external device plugin
    resourceName : str, default is Undefined, required
        Identifies the list of USB host devices. e.g: kubevirt.io/storage, kubevirt.io/bootable-usb, etc
    selectors : [KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesUsbItems0SelectorsItems0], default is Undefined, optional
        selectors
    """


    externalResourceProvider?: bool

    resourceName: str

    selectors?: [KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesUsbItems0SelectorsItems0]


schema KubevirtIoV1KubeVirtSpecConfigurationPermittedHostDevicesUsbItems0SelectorsItems0:
    r"""
    kubevirt io v1 kube virt spec configuration permitted host devices usb items0 selectors items0

    Attributes
    ----------
    product : str, default is Undefined, required
        product
    vendor : str, default is Undefined, required
        vendor
    """


    product: str

    vendor: str


schema KubevirtIoV1KubeVirtSpecConfigurationSeccompConfiguration:
    r"""
    SeccompConfiguration holds Seccomp configuration for Kubevirt components

    Attributes
    ----------
    virtualMachineInstanceProfile : KubevirtIoV1KubeVirtSpecConfigurationSeccompConfigurationVirtualMachineInstanceProfile, default is Undefined, optional
        virtual machine instance profile
    """


    virtualMachineInstanceProfile?: KubevirtIoV1KubeVirtSpecConfigurationSeccompConfigurationVirtualMachineInstanceProfile


schema KubevirtIoV1KubeVirtSpecConfigurationSeccompConfigurationVirtualMachineInstanceProfile:
    r"""
    VirtualMachineInstanceProfile defines what profile should be used with virt-launcher. Defaults to none

    Attributes
    ----------
    customProfile : KubevirtIoV1KubeVirtSpecConfigurationSeccompConfigurationVirtualMachineInstanceProfileCustomProfile, default is Undefined, optional
        custom profile
    """


    customProfile?: KubevirtIoV1KubeVirtSpecConfigurationSeccompConfigurationVirtualMachineInstanceProfileCustomProfile


schema KubevirtIoV1KubeVirtSpecConfigurationSeccompConfigurationVirtualMachineInstanceProfileCustomProfile:
    r"""
    CustomProfile allows to request arbitrary profile for virt-launcher

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhost profile
    runtimeDefaultProfile : bool, default is Undefined, optional
        runtime default profile
    """


    localhostProfile?: str

    runtimeDefaultProfile?: bool


schema KubevirtIoV1KubeVirtSpecConfigurationSmbios:
    r"""
    kubevirt io v1 kube virt spec configuration smbios

    Attributes
    ----------
    family : str, default is Undefined, optional
        family
    manufacturer : str, default is Undefined, optional
        manufacturer
    product : str, default is Undefined, optional
        product
    sku : str, default is Undefined, optional
        sku
    version : str, default is Undefined, optional
        version
    """


    family?: str

    manufacturer?: str

    product?: str

    sku?: str

    version?: str


schema KubevirtIoV1KubeVirtSpecConfigurationSupportContainerResourcesItems0:
    r"""
    SupportContainerResources are used to specify the cpu/memory request and limits for the containers that support various features of Virtual Machines. These containers are usually idle and don't require a lot of memory or cpu.

    Attributes
    ----------
    resources : KubevirtIoV1KubeVirtSpecConfigurationSupportContainerResourcesItems0Resources, default is Undefined, required
        resources
    $type : str, default is Undefined, required
        type
    """


    resources: KubevirtIoV1KubeVirtSpecConfigurationSupportContainerResourcesItems0Resources

    $type: str


schema KubevirtIoV1KubeVirtSpecConfigurationSupportContainerResourcesItems0Resources:
    r"""
    ResourceRequirements describes the compute resource requirements.

    Attributes
    ----------
    claims : [KubevirtIoV1KubeVirtSpecConfigurationSupportContainerResourcesItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [KubevirtIoV1KubeVirtSpecConfigurationSupportContainerResourcesItems0ResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema KubevirtIoV1KubeVirtSpecConfigurationSupportContainerResourcesItems0ResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema KubevirtIoV1KubeVirtSpecConfigurationTLSConfiguration:
    r"""
    TLSConfiguration holds TLS options

    Attributes
    ----------
    ciphers : [str], default is Undefined, optional
        ciphers
    minTLSVersion : str, default is Undefined, optional
        MinTLSVersion is a way to specify the minimum protocol version that is acceptable for TLS connections. Protocol versions are based on the following most common TLS configurations: 
           https://ssl-config.mozilla.org/ 
         Note that SSLv3.0 is not a supported protocol version due to well known vulnerabilities such as POODLE: https://en.wikipedia.org/wiki/POODLE
    """


    ciphers?: [str]

    minTLSVersion?: "VersionTLS10" | "VersionTLS11" | "VersionTLS12" | "VersionTLS13"


schema KubevirtIoV1KubeVirtSpecConfigurationVirtualMachineOptions:
    r"""
    VirtualMachineOptions holds the cluster level information regarding the virtual machine.

    Attributes
    ----------
    disableFreePageReporting : any, default is Undefined, optional
        DisableFreePageReporting disable the free page reporting of memory balloon device https://libvirt.org/formatdomain.html#memory-balloon-device. This will have effect only if AutoattachMemBalloon is not false and the vmi is not requesting any high performance feature (dedicatedCPU/realtime/hugePages), in which free page reporting is always disabled.
    disableSerialConsoleLog : any, default is Undefined, optional
        DisableSerialConsoleLog disables logging the auto-attached default serial console. If not set, serial console logs will be written to a file and then streamed from a container named 'guest-console-log'. The value can be individually overridden for each VM, not relevant if AutoattachSerialConsole is disabled.
    """


    disableFreePageReporting?: any

    disableSerialConsoleLog?: any


schema KubevirtIoV1KubeVirtSpecConfigurationWebhookConfiguration:
    r"""
    ReloadableComponentConfiguration holds all generic k8s configuration options which can be reloaded by components without requiring a restart.

    Attributes
    ----------
    restClient : KubevirtIoV1KubeVirtSpecConfigurationWebhookConfigurationRestClient, default is Undefined, optional
        rest client
    """


    restClient?: KubevirtIoV1KubeVirtSpecConfigurationWebhookConfigurationRestClient


schema KubevirtIoV1KubeVirtSpecConfigurationWebhookConfigurationRestClient:
    r"""
    RestClient can be used to tune certain aspects of the k8s client in use.

    Attributes
    ----------
    rateLimiter : KubevirtIoV1KubeVirtSpecConfigurationWebhookConfigurationRestClientRateLimiter, default is Undefined, optional
        rate limiter
    """


    rateLimiter?: KubevirtIoV1KubeVirtSpecConfigurationWebhookConfigurationRestClientRateLimiter


schema KubevirtIoV1KubeVirtSpecConfigurationWebhookConfigurationRestClientRateLimiter:
    r"""
    RateLimiter allows selecting and configuring different rate limiters for the k8s client.

    Attributes
    ----------
    tokenBucketRateLimiter : KubevirtIoV1KubeVirtSpecConfigurationWebhookConfigurationRestClientRateLimiterTokenBucketRateLimiter, default is Undefined, optional
        token bucket rate limiter
    """


    tokenBucketRateLimiter?: KubevirtIoV1KubeVirtSpecConfigurationWebhookConfigurationRestClientRateLimiterTokenBucketRateLimiter


schema KubevirtIoV1KubeVirtSpecConfigurationWebhookConfigurationRestClientRateLimiterTokenBucketRateLimiter:
    r"""
    kubevirt io v1 kube virt spec configuration webhook configuration rest client rate limiter token bucket rate limiter

    Attributes
    ----------
    burst : int, default is Undefined, required
        Maximum burst for throttle. If it's zero, the component default will be used
    qps : float, default is Undefined, required
        QPS indicates the maximum QPS to the apiserver from this client. If it's zero, the component default will be used
    """


    burst: int

    qps: float


schema KubevirtIoV1KubeVirtSpecCustomizeComponents:
    r"""
    kubevirt io v1 kube virt spec customize components

    Attributes
    ----------
    flags : KubevirtIoV1KubeVirtSpecCustomizeComponentsFlags, default is Undefined, optional
        flags
    patches : [KubevirtIoV1KubeVirtSpecCustomizeComponentsPatchesItems0], default is Undefined, optional
        patches
    """


    flags?: KubevirtIoV1KubeVirtSpecCustomizeComponentsFlags

    patches?: [KubevirtIoV1KubeVirtSpecCustomizeComponentsPatchesItems0]


schema KubevirtIoV1KubeVirtSpecCustomizeComponentsFlags:
    r"""
    Configure the value used for deployment and daemonset resources

    Attributes
    ----------
    api : {str:str}, default is Undefined, optional
        api
    controller : {str:str}, default is Undefined, optional
        controller
    handler : {str:str}, default is Undefined, optional
        handler
    """


    api?: {str:str}

    controller?: {str:str}

    handler?: {str:str}


schema KubevirtIoV1KubeVirtSpecCustomizeComponentsPatchesItems0:
    r"""
    kubevirt io v1 kube virt spec customize components patches items0

    Attributes
    ----------
    patch : str, default is Undefined, required
        patch
    resourceName : str, default is Undefined, required
        resource name
    resourceType : str, default is Undefined, required
        resource type
    $type : str, default is Undefined, required
        type
    """


    patch: str

    resourceName: str

    resourceType: str

    $type: str


    check:
        len(resourceName) >= 1
        len(resourceType) >= 1


schema KubevirtIoV1KubeVirtSpecImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema KubevirtIoV1KubeVirtSpecInfra:
    r"""
    selectors and tolerations that should apply to KubeVirt infrastructure components

    Attributes
    ----------
    nodePlacement : KubevirtIoV1KubeVirtSpecInfraNodePlacement, default is Undefined, optional
        node placement
    replicas : int, default is Undefined, optional
        replicas indicates how many replicas should be created for each KubeVirt infrastructure component (like virt-api or virt-controller). Defaults to 2. WARNING: this is an advanced feature that prevents auto-scaling for core kubevirt components. Please use with caution!
    """


    nodePlacement?: KubevirtIoV1KubeVirtSpecInfraNodePlacement

    replicas?: int


schema KubevirtIoV1KubeVirtSpecInfraNodePlacement:
    r"""
    nodePlacement describes scheduling configuration for specific KubeVirt components

    Attributes
    ----------
    affinity : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinity, default is Undefined, optional
        affinity
    nodeSelector : {str:str}, default is Undefined, optional
        nodeSelector is the node selector applied to the relevant kind of pods It specifies a map of key-value pairs: for the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    tolerations : [KubevirtIoV1KubeVirtSpecInfraNodePlacementTolerationsItems0], default is Undefined, optional
        tolerations is a list of tolerations applied to the relevant kind of pods See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ for more info. These are additional tolerations other than default ones.
    """


    affinity?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinity

    nodeSelector?: {str:str}

    tolerations?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementTolerationsItems0]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinity:
    r"""
    affinity enables pod affinity/anti-affinity placement expanding the types of constraints that can be expressed with nodeSelector. affinity is going to be applied to the relevant kind of pods in parallel with nodeSelector See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity

    Attributes
    ----------
    nodeAffinity : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """


    nodeAffinity?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinity

    podAffinity?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinity

    podAntiAffinity?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinity


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinity:
    r"""
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """


    preference: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    r"""
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    r"""
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.

    Attributes
    ----------
    nodeSelectorTerms : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """


    nodeSelectorTerms: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    r"""
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinity:
    r"""
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinity:
    r"""
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecInfraNodePlacementTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema KubevirtIoV1KubeVirtSpecWorkloadUpdateStrategy:
    r"""
    WorkloadUpdateStrategy defines at the cluster level how to handle automated workload updates

    Attributes
    ----------
    batchEvictionInterval : str, default is Undefined, optional
        BatchEvictionInterval Represents the interval to wait before issuing the next batch of shutdowns 
         Defaults to 1 minute
    batchEvictionSize : int, default is Undefined, optional
        BatchEvictionSize Represents the number of VMIs that can be forced updated per the BatchShutdownInteral interval 
         Defaults to 10
    workloadUpdateMethods : [str], default is Undefined, optional
        WorkloadUpdateMethods defines the methods that can be used to disrupt workloads during automated workload updates. When multiple methods are present, the least disruptive method takes precedence over more disruptive methods. For example if both LiveMigrate and Shutdown methods are listed, only VMs which are not live migratable will be restarted/shutdown 
         An empty list defaults to no automated workload updating
    """


    batchEvictionInterval?: str

    batchEvictionSize?: int

    workloadUpdateMethods?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloads:
    r"""
    selectors and tolerations that should apply to KubeVirt workloads

    Attributes
    ----------
    nodePlacement : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacement, default is Undefined, optional
        node placement
    replicas : int, default is Undefined, optional
        replicas indicates how many replicas should be created for each KubeVirt infrastructure component (like virt-api or virt-controller). Defaults to 2. WARNING: this is an advanced feature that prevents auto-scaling for core kubevirt components. Please use with caution!
    """


    nodePlacement?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacement

    replicas?: int


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacement:
    r"""
    nodePlacement describes scheduling configuration for specific KubeVirt components

    Attributes
    ----------
    affinity : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinity, default is Undefined, optional
        affinity
    nodeSelector : {str:str}, default is Undefined, optional
        nodeSelector is the node selector applied to the relevant kind of pods It specifies a map of key-value pairs: for the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    tolerations : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementTolerationsItems0], default is Undefined, optional
        tolerations is a list of tolerations applied to the relevant kind of pods See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ for more info. These are additional tolerations other than default ones.
    """


    affinity?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinity

    nodeSelector?: {str:str}

    tolerations?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementTolerationsItems0]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinity:
    r"""
    affinity enables pod affinity/anti-affinity placement expanding the types of constraints that can be expressed with nodeSelector. affinity is going to be applied to the relevant kind of pods in parallel with nodeSelector See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity

    Attributes
    ----------
    nodeAffinity : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """


    nodeAffinity?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinity

    podAffinity?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinity

    podAntiAffinity?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinity


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinity:
    r"""
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """


    preference: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    r"""
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    r"""
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.

    Attributes
    ----------
    nodeSelectorTerms : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """


    nodeSelectorTerms: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    r"""
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinity:
    r"""
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinity:
    r"""
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1KubeVirtSpecWorkloadsNodePlacementTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema KubevirtIoV1KubeVirtStatus:
    r"""
    KubeVirtStatus represents information pertaining to a KubeVirt deployment.

    Attributes
    ----------
    conditions : [KubevirtIoV1KubeVirtStatusConditionsItems0], default is Undefined, optional
        conditions
    defaultArchitecture : str, default is Undefined, optional
        default architecture
    generations : [KubevirtIoV1KubeVirtStatusGenerationsItems0], default is Undefined, optional
        generations
    observedDeploymentConfig : str, default is Undefined, optional
        observed deployment config
    observedDeploymentID : str, default is Undefined, optional
        observed deployment ID
    observedGeneration : int, default is Undefined, optional
        observed generation
    observedKubeVirtRegistry : str, default is Undefined, optional
        observed kube virt registry
    observedKubeVirtVersion : str, default is Undefined, optional
        observed kube virt version
    operatorVersion : str, default is Undefined, optional
        operator version
    outdatedVirtualMachineInstanceWorkloads : int, default is Undefined, optional
        outdated virtual machine instance workloads
    phase : str, default is Undefined, optional
        KubeVirtPhase is a label for the phase of a KubeVirt deployment at the current time.
    targetDeploymentConfig : str, default is Undefined, optional
        target deployment config
    targetDeploymentID : str, default is Undefined, optional
        target deployment ID
    targetKubeVirtRegistry : str, default is Undefined, optional
        target kube virt registry
    targetKubeVirtVersion : str, default is Undefined, optional
        target kube virt version
    """


    conditions?: [KubevirtIoV1KubeVirtStatusConditionsItems0]

    defaultArchitecture?: str

    generations?: [KubevirtIoV1KubeVirtStatusGenerationsItems0]

    observedDeploymentConfig?: str

    observedDeploymentID?: str

    observedGeneration?: int

    observedKubeVirtRegistry?: str

    observedKubeVirtVersion?: str

    operatorVersion?: str

    outdatedVirtualMachineInstanceWorkloads?: int

    phase?: str

    targetDeploymentConfig?: str

    targetDeploymentID?: str

    targetKubeVirtRegistry?: str

    targetKubeVirtVersion?: str


schema KubevirtIoV1KubeVirtStatusConditionsItems0:
    r"""
    KubeVirtCondition represents a condition of a KubeVirt deployment

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        last probe time
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    message : str, default is Undefined, optional
        message
    reason : str, default is Undefined, optional
        reason
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema KubevirtIoV1KubeVirtStatusGenerationsItems0:
    r"""
    GenerationStatus keeps track of the generation for a given resource so that decisions about forced updates can be made.

    Attributes
    ----------
    group : str, default is Undefined, required
        group is the group of the thing you're tracking
    hash : str, default is Undefined, optional
        hash is an optional field set for resources without generation that are content sensitive like secrets and configmaps
    lastGeneration : int, default is Undefined, required
        lastGeneration is the last generation of the workload controller involved
    name : str, default is Undefined, required
        name is the name of the thing you're tracking
    namespace : str, default is Undefined, optional
        namespace is where the thing you're tracking is
    resource : str, default is Undefined, required
        resource is the resource type of the thing you're tracking
    """


    group: str

    hash?: str

    lastGeneration: int

    name: str

    namespace?: str

    resource: str


