"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Infrastructure:
    r"""
    Infrastructure holds cluster-wide information about Infrastructure.  The canonical name is `cluster`

    Attributes
    ----------
    apiVersion : str, default is "config.openshift.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Infrastructure", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ConfigOpenshiftIoV1InfrastructureSpec, default is Undefined, required
        spec
    status : ConfigOpenshiftIoV1InfrastructureStatus, default is Undefined, optional
        status
    """


    apiVersion: "config.openshift.io/v1" = "config.openshift.io/v1"

    kind: "Infrastructure" = "Infrastructure"

    metadata?: v1.ObjectMeta

    spec: ConfigOpenshiftIoV1InfrastructureSpec

    status?: ConfigOpenshiftIoV1InfrastructureStatus


schema ConfigOpenshiftIoV1InfrastructureSpec:
    r"""
    spec holds user settable values for configuration

    Attributes
    ----------
    cloudConfig : ConfigOpenshiftIoV1InfrastructureSpecCloudConfig, default is Undefined, optional
        cloud config
    """


    cloudConfig?: ConfigOpenshiftIoV1InfrastructureSpecCloudConfig


schema ConfigOpenshiftIoV1InfrastructureSpecCloudConfig:
    r"""
    cloudConfig is a reference to a ConfigMap containing the cloud provider configuration file. This configuration file is used to configure the Kubernetes cloud provider integration when using the built-in cloud provider integration or the external cloud controller manager. The namespace for this config map is openshift-config.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key allows pointing to a specific key/value inside of the configmap.  This is useful for logical file references.
    name : str, default is Undefined, optional
        name
    """


    key?: str

    name?: str


schema ConfigOpenshiftIoV1InfrastructureStatus:
    r"""
    status holds observed values from the cluster. They may not be overridden.

    Attributes
    ----------
    apiServerInternalURI : str, default is Undefined, optional
        apiServerInternalURL is a valid URI with scheme(http/https), address and port.  apiServerInternalURL can be used by components like kubelets, to contact the Kubernetes API server using the infrastructure provider rather than Kubernetes networking.
    apiServerURL : str, default is Undefined, optional
        apiServerURL is a valid URI with scheme(http/https), address and port.  apiServerURL can be used by components like the web console to tell users where to find the Kubernetes API.
    etcdDiscoveryDomain : str, default is Undefined, optional
        etcdDiscoveryDomain is the domain used to fetch the SRV records for discovering etcd servers and clients. For more info: https://github.com/etcd-io/etcd/blob/329be66e8b3f9e2e6af83c123ff89297e49ebd15/Documentation/op-guide/clustering.md#dns-discovery
    infrastructureName : str, default is Undefined, optional
        infrastructureName uniquely identifies a cluster with a human friendly name. Once set it should not be changed. Must be of max length 27 and must have only alphanumeric or hyphen characters.
    platform : str, default is Undefined, optional
        platform is the underlying infrastructure provider for the cluster. 
         Deprecated: Use platformStatus.type instead.
    platformStatus : ConfigOpenshiftIoV1InfrastructureStatusPlatformStatus, default is Undefined, optional
        platform status
    """


    apiServerInternalURI?: str

    apiServerURL?: str

    etcdDiscoveryDomain?: str

    infrastructureName?: str

    platform?: str

    platformStatus?: ConfigOpenshiftIoV1InfrastructureStatusPlatformStatus


schema ConfigOpenshiftIoV1InfrastructureStatusPlatformStatus:
    r"""
    platformStatus holds status information specific to the underlying infrastructure provider.

    Attributes
    ----------
    aws : ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusAws, default is Undefined, optional
        aws
    azure : ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusAzure, default is Undefined, optional
        azure
    baremetal : ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusBaremetal, default is Undefined, optional
        baremetal
    gcp : ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusGcp, default is Undefined, optional
        gcp
    openstack : ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusOpenstack, default is Undefined, optional
        openstack
    ovirt : ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusOvirt, default is Undefined, optional
        ovirt
    $type : str, default is Undefined, optional
        type is the underlying infrastructure provider for the cluster. This value controls whether infrastructure automation such as service load balancers, dynamic volume provisioning, machine creation and deletion, and other integrations are enabled. If None, no infrastructure automation is enabled. Allowed values are "AWS", "Azure", "BareMetal", "GCP", "Libvirt", "OpenStack", "VSphere", "oVirt", and "None". Individual components may not support all platforms, and must handle unrecognized platforms as None if they do not support that platform.
    """


    aws?: ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusAws

    azure?: ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusAzure

    baremetal?: ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusBaremetal

    gcp?: ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusGcp

    openstack?: ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusOpenstack

    ovirt?: ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusOvirt

    $type?: str


schema ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusAws:
    r"""
    AWS contains settings specific to the Amazon Web Services infrastructure provider.

    Attributes
    ----------
    region : str, default is Undefined, optional
        region holds the default AWS region for new AWS resources created by the cluster.
    """


    region?: str


schema ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusAzure:
    r"""
    Azure contains settings specific to the Azure infrastructure provider.

    Attributes
    ----------
    networkResourceGroupName : str, default is Undefined, optional
        networkResourceGroupName is the Resource Group for network resources like the Virtual Network and Subnets used by the cluster. If empty, the value is same as ResourceGroupName.
    resourceGroupName : str, default is Undefined, optional
        resourceGroupName is the Resource Group for new Azure resources created for the cluster.
    """


    networkResourceGroupName?: str

    resourceGroupName?: str


schema ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusBaremetal:
    r"""
    BareMetal contains settings specific to the BareMetal platform.

    Attributes
    ----------
    apiServerInternalIP : str, default is Undefined, optional
        apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.
    ingressIP : str, default is Undefined, optional
        ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.
    nodeDNSIP : str, default is Undefined, optional
        nodeDNSIP is the IP address for the internal DNS used by the nodes. Unlike the one managed by the DNS operator, `NodeDNSIP` provides name resolution for the nodes themselves. There is no DNS-as-a-service for BareMetal deployments. In order to minimize necessary changes to the datacenter DNS, a DNS service is hosted as a static pod to serve those hostnames to the nodes in the cluster.
    """


    apiServerInternalIP?: str

    ingressIP?: str

    nodeDNSIP?: str


schema ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusGcp:
    r"""
    GCP contains settings specific to the Google Cloud Platform infrastructure provider.

    Attributes
    ----------
    projectID : str, default is Undefined, optional
        resourceGroupName is the Project ID for new GCP resources created for the cluster.
    region : str, default is Undefined, optional
        region holds the region for new GCP resources created for the cluster.
    """


    projectID?: str

    region?: str


schema ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusOpenstack:
    r"""
    OpenStack contains settings specific to the OpenStack infrastructure provider.

    Attributes
    ----------
    apiServerInternalIP : str, default is Undefined, optional
        apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.
    cloudName : str, default is Undefined, optional
        cloudName is the name of the desired OpenStack cloud in the client configuration file (`clouds.yaml`).
    ingressIP : str, default is Undefined, optional
        ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.
    nodeDNSIP : str, default is Undefined, optional
        nodeDNSIP is the IP address for the internal DNS used by the nodes. Unlike the one managed by the DNS operator, `NodeDNSIP` provides name resolution for the nodes themselves. There is no DNS-as-a-service for OpenStack deployments. In order to minimize necessary changes to the datacenter DNS, a DNS service is hosted as a static pod to serve those hostnames to the nodes in the cluster.
    """


    apiServerInternalIP?: str

    cloudName?: str

    ingressIP?: str

    nodeDNSIP?: str


schema ConfigOpenshiftIoV1InfrastructureStatusPlatformStatusOvirt:
    r"""
    Ovirt contains settings specific to the oVirt infrastructure provider.

    Attributes
    ----------
    apiServerInternalIP : str, default is Undefined, optional
        apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.
    ingressIP : str, default is Undefined, optional
        ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.
    nodeDNSIP : str, default is Undefined, optional
        nodeDNSIP is the IP address for the internal DNS used by the nodes. Unlike the one managed by the DNS operator, `NodeDNSIP` provides name resolution for the nodes themselves. There is no DNS-as-a-service for oVirt deployments. In order to minimize necessary changes to the datacenter DNS, a DNS service is hosted as a static pod to serve those hostnames to the nodes in the cluster.
    """


    apiServerInternalIP?: str

    ingressIP?: str

    nodeDNSIP?: str


