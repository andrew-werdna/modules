"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema Metal3DataTemplate:
    r"""
    Metal3DataTemplate is the Schema for the metal3datatemplates API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Metal3DataTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "Metal3DataTemplate" = "Metal3DataTemplate"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpec

    status?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateStatus


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpec:
    r"""
    Metal3DataTemplateSpec defines the desired state of Metal3DataTemplate.

    Attributes
    ----------
    clusterName : str, default is Undefined, required
        ClusterName is the name of the Cluster this object belongs to.
    metaData : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaData, default is Undefined, optional
        meta data
    networkData : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkData, default is Undefined, optional
        network data
    templateReference : str, default is Undefined, optional
        TemplateReference refers to the Template the Metal3MachineTemplate refers to.
        It can be matched against the key or it may also point to the name of the template
        Metal3Data refers to.

        Deprecated: This field is deprecated and will be removed in a future release.
    """


    clusterName: str

    metaData?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaData

    networkData?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkData

    templateReference?: str


    check:
        len(clusterName) >= 1


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaData:
    r"""
    MetaData contains the information needed to generate the metadata secret

    Attributes
    ----------
    dnsServersFromIPPool : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataDNSServersFromIPPoolItems0], default is Undefined, optional
        DNSServersFromPool is the list of metadata items to be rendered as dns servers.
    fromAnnotations : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataFromAnnotationsItems0], default is Undefined, optional
        FromAnnotations is the list of metadata items to be fetched from object
        Annotations
    fromHostInterfaces : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataFromHostInterfacesItems0], default is Undefined, optional
        FromHostInterfaces is the list of metadata items to be rendered as MAC
        addresses of the host interfaces.
    fromLabels : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataFromLabelsItems0], default is Undefined, optional
        FromLabels is the list of metadata items to be fetched from object labels
    gatewaysFromIPPool : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataGatewaysFromIPPoolItems0], default is Undefined, optional
        GatewaysFromPool is the list of metadata items to be rendered as gateway addresses.
    indexes : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataIndexesItems0], default is Undefined, optional
        Indexes is the list of metadata items to be rendered from the index of the
        Metal3Data
    ipAddressesFromIPPool : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataIPAddressesFromIPPoolItems0], default is Undefined, optional
        IPAddressesFromPool is the list of metadata items to be rendered as ip addresses.
    namespaces : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataNamespacesItems0], default is Undefined, optional
        Namespaces is the list of metadata items to be rendered from the namespace
    objectNames : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataObjectNamesItems0], default is Undefined, optional
        ObjectNames is the list of metadata items to be rendered from the name
        of objects.
    prefixesFromIPPool : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataPrefixesFromIPPoolItems0], default is Undefined, optional
        PrefixesFromPool is the list of metadata items to be rendered as network prefixes.
    strings : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataStringsItems0], default is Undefined, optional
        Strings is the list of metadata items to be rendered from strings
    """


    dnsServersFromIPPool?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataDNSServersFromIPPoolItems0]

    fromAnnotations?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataFromAnnotationsItems0]

    fromHostInterfaces?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataFromHostInterfacesItems0]

    fromLabels?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataFromLabelsItems0]

    gatewaysFromIPPool?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataGatewaysFromIPPoolItems0]

    indexes?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataIndexesItems0]

    ipAddressesFromIPPool?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataIPAddressesFromIPPoolItems0]

    namespaces?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataNamespacesItems0]

    objectNames?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataObjectNamesItems0]

    prefixesFromIPPool?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataPrefixesFromIPPoolItems0]

    strings?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataStringsItems0]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataDNSServersFromIPPoolItems0:
    r"""
    infrastructure clusterx k8s io v1beta1 metal3 data template spec meta data DNS servers from IP pool items0

    Attributes
    ----------
    apiGroup : str, default is Undefined, required
        APIGroup is the api group of the IP pool.
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    kind : str, default is Undefined, required
        Kind is the kind of the IP pool
    name : str, default is Undefined, required
        Name is the name of the IP pool used to fetch the value to set in the metadata map for cloud-init
    """


    apiGroup: str

    key: str

    kind: str

    name: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataFromAnnotationsItems0:
    r"""
    MetaDataFromAnnotation contains the information to fetch an annotation
    content, if the label does not exist, it is rendered as empty string.

    Attributes
    ----------
    annotation : str, default is Undefined, required
        Annotation is the key of the Annotation to fetch
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    object : str, default is Undefined, required
        Object is the type of the object from which we retrieve the name
    """


    annotation: str

    key: str

    object: "machine" | "metal3machine" | "baremetalhost"


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataFromHostInterfacesItems0:
    r"""
    MetaDataHostInterface contains the information to render the object name.

    Attributes
    ----------
    interface : str, default is Undefined, required
        Interface is the name of the interface in the BareMetalHost Status Hardware
        Details list of interfaces from which to fetch the MAC address.
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    """


    interface: str

    key: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataFromLabelsItems0:
    r"""
    MetaDataFromLabel contains the information to fetch a label content, if the
    label does not exist, it is rendered as empty string.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    label : str, default is Undefined, required
        Label is the key of the label to fetch
    object : str, default is Undefined, required
        Object is the type of the object from which we retrieve the name
    """


    key: str

    label: str

    object: "machine" | "metal3machine" | "baremetalhost"


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataGatewaysFromIPPoolItems0:
    r"""
    infrastructure clusterx k8s io v1beta1 metal3 data template spec meta data gateways from IP pool items0

    Attributes
    ----------
    apiGroup : str, default is Undefined, required
        APIGroup is the api group of the IP pool.
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    kind : str, default is Undefined, required
        Kind is the kind of the IP pool
    name : str, default is Undefined, required
        Name is the name of the IP pool used to fetch the value to set in the metadata map for cloud-init
    """


    apiGroup: str

    key: str

    kind: str

    name: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataIPAddressesFromIPPoolItems0:
    r"""
    infrastructure clusterx k8s io v1beta1 metal3 data template spec meta data IP addresses from IP pool items0

    Attributes
    ----------
    apiGroup : str, default is Undefined, required
        APIGroup is the api group of the IP pool.
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    kind : str, default is Undefined, required
        Kind is the kind of the IP pool
    name : str, default is Undefined, required
        Name is the name of the IP pool used to fetch the value to set in the metadata map for cloud-init
    """


    apiGroup: str

    key: str

    kind: str

    name: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataIndexesItems0:
    r"""
    MetaDataIndex contains the information to render the index.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    offset : int, default is Undefined, optional
        Offset is the offset to apply to the index when rendering it
    prefix : str, default is Undefined, optional
        Prefix is the prefix string
    step : int, default is 1, optional
        Step is the multiplier of the index
    suffix : str, default is Undefined, optional
        Suffix is the suffix string
    """


    key: str

    offset?: int

    prefix?: str

    step?: int = 1

    suffix?: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataNamespacesItems0:
    r"""
    MetaDataNamespace contains the information to render the namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    """


    key: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataObjectNamesItems0:
    r"""
    MetaDataObjectName contains the information to render the object name.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    object : str, default is Undefined, required
        Object is the type of the object from which we retrieve the name
    """


    key: str

    object: "machine" | "metal3machine" | "baremetalhost"


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataPrefixesFromIPPoolItems0:
    r"""
    infrastructure clusterx k8s io v1beta1 metal3 data template spec meta data prefixes from IP pool items0

    Attributes
    ----------
    apiGroup : str, default is Undefined, required
        APIGroup is the api group of the IP pool.
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    kind : str, default is Undefined, required
        Kind is the kind of the IP pool
    name : str, default is Undefined, required
        Name is the name of the IP pool used to fetch the value to set in the metadata map for cloud-init
    """


    apiGroup: str

    key: str

    kind: str

    name: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecMetaDataStringsItems0:
    r"""
    MetaDataString contains the information to render the string.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key will be used as the key to set in the metadata map for cloud-init
    value : str, default is Undefined, required
        Value is the string to render.
    """


    key: str

    value: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkData:
    r"""
    NetworkData contains the information needed to generate the networkdata
    secret

    Attributes
    ----------
    links : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinks, default is Undefined, optional
        links
    networks : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworks, default is Undefined, optional
        networks
    services : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataServices, default is Undefined, optional
        services
    """


    links?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinks

    networks?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworks

    services?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataServices


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinks:
    r"""
    Links is a structure containing lists of different types objects

    Attributes
    ----------
    bonds : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksBondsItems0], default is Undefined, optional
        Bonds contains a list of Bond links
    ethernets : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksEthernetsItems0], default is Undefined, optional
        Ethernets contains a list of Ethernet links
    vlans : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksVlansItems0], default is Undefined, optional
        Vlans contains a list of Vlan links
    """


    bonds?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksBondsItems0]

    ethernets?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksEthernetsItems0]

    vlans?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksVlansItems0]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksBondsItems0:
    r"""
    NetworkDataLinkBond represents a bond link object.

    Attributes
    ----------
    bondLinks : [str], default is Undefined, optional
        BondLinks is the list of links that are part of the bond.
    bondMode : str, default is Undefined, required
        BondMode is the mode of bond used. It can be one of
        balance-rr, active-backup, balance-xor, broadcast, balance-tlb, balance-alb, 802.3ad
    bondXmitHashPolicy : str, default is Undefined, optional
        Selects the transmit hash policy used for port selection in balance-xor and 802.3ad modes
    id : str, default is Undefined, required
        Id is the ID of the interface (used for naming)
    macAddress : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksBondsItems0MacAddress, default is Undefined, required
        mac address
    mtu : int, default is 1500, optional
        MTU is the MTU of the interface
    """


    bondLinks?: [str]

    bondMode: "balance-rr" | "active-backup" | "balance-xor" | "broadcast" | "balance-tlb" | "balance-alb" | "802.3ad"

    bondXmitHashPolicy?: "layer2" | "layer3+4" | "layer2+3"

    id: str

    macAddress: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksBondsItems0MacAddress

    mtu?: int = 1500


    check:
        mtu <= 9000 if mtu not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksBondsItems0MacAddress:
    r"""
    MACAddress is the MAC address of the interface, containing the object
    used to render it.

    Attributes
    ----------
    fromAnnotation : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksBondsItems0MacAddressFromAnnotation, default is Undefined, optional
        from annotation
    fromHostInterface : str, default is Undefined, optional
        FromHostInterface contains the name of the interface in the BareMetalHost
        Introspection details from which to fetch the MAC address
    string : str, default is Undefined, optional
        String contains the MAC address given as a string
    """


    fromAnnotation?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksBondsItems0MacAddressFromAnnotation

    fromHostInterface?: str

    string?: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksBondsItems0MacAddressFromAnnotation:
    r"""
    FromAnnotation references an object Annotation to retrieve the
    MAC address from

    Attributes
    ----------
    annotation : str, default is Undefined, required
        Annotation is the key of the Annotation to fetch
    object : str, default is Undefined, required
        Object is the type of the object from which we retrieve the name
    """


    annotation: str

    object: "machine" | "metal3machine" | "baremetalhost"


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksEthernetsItems0:
    r"""
    NetworkDataLinkEthernet represents an ethernet link object.

    Attributes
    ----------
    id : str, default is Undefined, required
        Id is the ID of the interface (used for naming)
    macAddress : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksEthernetsItems0MacAddress, default is Undefined, required
        mac address
    mtu : int, default is 1500, optional
        MTU is the MTU of the interface
    $type : str, default is Undefined, required
        Type is the type of the ethernet link. It can be one of:
        bridge, dvs, hw_veb, hyperv, ovs, tap, vhostuser, vif, phy
    """


    id: str

    macAddress: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksEthernetsItems0MacAddress

    mtu?: int = 1500

    $type: "bridge" | "dvs" | "hw_veb" | "hyperv" | "ovs" | "tap" | "vhostuser" | "vif" | "phy"


    check:
        mtu <= 9000 if mtu not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksEthernetsItems0MacAddress:
    r"""
    MACAddress is the MAC address of the interface, containing the object
    used to render it.

    Attributes
    ----------
    fromAnnotation : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksEthernetsItems0MacAddressFromAnnotation, default is Undefined, optional
        from annotation
    fromHostInterface : str, default is Undefined, optional
        FromHostInterface contains the name of the interface in the BareMetalHost
        Introspection details from which to fetch the MAC address
    string : str, default is Undefined, optional
        String contains the MAC address given as a string
    """


    fromAnnotation?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksEthernetsItems0MacAddressFromAnnotation

    fromHostInterface?: str

    string?: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksEthernetsItems0MacAddressFromAnnotation:
    r"""
    FromAnnotation references an object Annotation to retrieve the
    MAC address from

    Attributes
    ----------
    annotation : str, default is Undefined, required
        Annotation is the key of the Annotation to fetch
    object : str, default is Undefined, required
        Object is the type of the object from which we retrieve the name
    """


    annotation: str

    object: "machine" | "metal3machine" | "baremetalhost"


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksVlansItems0:
    r"""
    NetworkDataLinkVlan represents a vlan link object.

    Attributes
    ----------
    id : str, default is Undefined, required
        Id is the ID of the interface (used for naming)
    macAddress : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksVlansItems0MacAddress, default is Undefined, required
        mac address
    mtu : int, default is 1500, optional
        MTU is the MTU of the interface
    vlanID : int, default is Undefined, required
        VlanID is the Vlan ID
    vlanLink : str, default is Undefined, required
        VlanLink is the name of the link on which the vlan should be added
    """


    id: str

    macAddress: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksVlansItems0MacAddress

    mtu?: int = 1500

    vlanID: int

    vlanLink: str


    check:
        mtu <= 9000 if mtu not in [None, Undefined]
        vlanID <= 4096


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksVlansItems0MacAddress:
    r"""
    MACAddress is the MAC address of the interface, containing the object
    used to render it.

    Attributes
    ----------
    fromAnnotation : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksVlansItems0MacAddressFromAnnotation, default is Undefined, optional
        from annotation
    fromHostInterface : str, default is Undefined, optional
        FromHostInterface contains the name of the interface in the BareMetalHost
        Introspection details from which to fetch the MAC address
    string : str, default is Undefined, optional
        String contains the MAC address given as a string
    """


    fromAnnotation?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksVlansItems0MacAddressFromAnnotation

    fromHostInterface?: str

    string?: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataLinksVlansItems0MacAddressFromAnnotation:
    r"""
    FromAnnotation references an object Annotation to retrieve the
    MAC address from

    Attributes
    ----------
    annotation : str, default is Undefined, required
        Annotation is the key of the Annotation to fetch
    object : str, default is Undefined, required
        Object is the type of the object from which we retrieve the name
    """


    annotation: str

    object: "machine" | "metal3machine" | "baremetalhost"


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworks:
    r"""
    Networks  is a structure containing lists of different types objects

    Attributes
    ----------
    ipv4 : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0], default is Undefined, optional
        IPv4 contains a list of IPv4 static allocations
    ipv4DHCP : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0], default is Undefined, optional
        IPv4 contains a list of IPv4 DHCP allocations
    ipv6 : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0], default is Undefined, optional
        IPv4 contains a list of IPv6 static allocations
    ipv6DHCP : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0], default is Undefined, optional
        IPv4 contains a list of IPv6 DHCP allocations
    ipv6SLAAC : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0], default is Undefined, optional
        IPv4 contains a list of IPv6 SLAAC allocations
    """


    ipv4?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0]

    ipv4DHCP?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0]

    ipv6?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0]

    ipv6DHCP?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0]

    ipv6SLAAC?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0:
    r"""
    NetworkDataIPv4DHCP represents an ipv4 DHCP network object.

    Attributes
    ----------
    id : str, default is Undefined, required
        ID is the network ID (name)
    link : str, default is Undefined, required
        Link is the link on which the network applies
    routes : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0RoutesItems0], default is Undefined, optional
        Routes contains a list of IPv4 routes
    """


    id: str

    link: str

    routes?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0RoutesItems0]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0RoutesItems0:
    r"""
    NetworkDataRoutev4 represents an ipv4 route object.

    Attributes
    ----------
    gateway : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0RoutesItems0Gateway, default is Undefined, required
        gateway
    network : str, default is Undefined, required
        Network is the IPv4 network address
    prefix : int, default is Undefined, optional
        Prefix is the mask of the network as integer (max 32)
    services : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0RoutesItems0Services, default is Undefined, optional
        services
    """


    gateway: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0RoutesItems0Gateway

    network: str

    prefix?: int

    services?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0RoutesItems0Services


    check:
        _regex_match(str(network), r"^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$")
        prefix <= 32 if prefix not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0RoutesItems0Gateway:
    r"""
    Gateway is the IPv4 address of the gateway

    Attributes
    ----------
    fromIPPool : str, default is Undefined, optional
        FromIPPool is the name of the IPPool to fetch the gateway from
    string : str, default is Undefined, optional
        String is the gateway given as a string
    """


    fromIPPool?: str

    string?: str


    check:
        _regex_match(str(string), r"^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$") if string


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4DHCPItems0RoutesItems0Services:
    r"""
    Services is a list of IPv4 services

    Attributes
    ----------
    dns : [str], default is Undefined, optional
        DNS is a list of IPv4 DNS services
    dnsFromIPPool : str, default is Undefined, optional
        DNSFromIPPool is the name of the IPPool from which to get the DNS servers
    """


    dns?: [str]

    dnsFromIPPool?: str


    check:
        all dns in dns { _regex_match(str(dns), r"^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$") if dns } if dns


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0:
    r"""
    NetworkDataIPv4 represents an ipv4 static network object.

    Attributes
    ----------
    fromPoolRef : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0FromPoolRef, default is Undefined, optional
        from pool ref
    id : str, default is Undefined, required
        ID is the network ID (name)
    ipAddressFromIPPool : str, default is Undefined, optional
        IPAddressFromIPPool contains the name of the IP pool to use to get an ip address
    link : str, default is Undefined, required
        Link is the link on which the network applies
    routes : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0RoutesItems0], default is Undefined, optional
        Routes contains a list of IPv4 routes
    """


    fromPoolRef?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0FromPoolRef

    id: str

    ipAddressFromIPPool?: str

    link: str

    routes?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0RoutesItems0]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0FromPoolRef:
    r"""
    FromPoolRef is a reference to a IP pool to allocate an address from.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced.
        If APIGroup is not specified, the specified Kind must be in the core API group.
        For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0RoutesItems0:
    r"""
    NetworkDataRoutev4 represents an ipv4 route object.

    Attributes
    ----------
    gateway : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0RoutesItems0Gateway, default is Undefined, required
        gateway
    network : str, default is Undefined, required
        Network is the IPv4 network address
    prefix : int, default is Undefined, optional
        Prefix is the mask of the network as integer (max 32)
    services : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0RoutesItems0Services, default is Undefined, optional
        services
    """


    gateway: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0RoutesItems0Gateway

    network: str

    prefix?: int

    services?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0RoutesItems0Services


    check:
        _regex_match(str(network), r"^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$")
        prefix <= 32 if prefix not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0RoutesItems0Gateway:
    r"""
    Gateway is the IPv4 address of the gateway

    Attributes
    ----------
    fromIPPool : str, default is Undefined, optional
        FromIPPool is the name of the IPPool to fetch the gateway from
    string : str, default is Undefined, optional
        String is the gateway given as a string
    """


    fromIPPool?: str

    string?: str


    check:
        _regex_match(str(string), r"^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$") if string


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV4Items0RoutesItems0Services:
    r"""
    Services is a list of IPv4 services

    Attributes
    ----------
    dns : [str], default is Undefined, optional
        DNS is a list of IPv4 DNS services
    dnsFromIPPool : str, default is Undefined, optional
        DNSFromIPPool is the name of the IPPool from which to get the DNS servers
    """


    dns?: [str]

    dnsFromIPPool?: str


    check:
        all dns in dns { _regex_match(str(dns), r"^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$") if dns } if dns


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0:
    r"""
    NetworkDataIPv6DHCP represents an ipv6 DHCP network object.

    Attributes
    ----------
    id : str, default is Undefined, required
        ID is the network ID (name)
    link : str, default is Undefined, required
        Link is the link on which the network applies
    routes : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0RoutesItems0], default is Undefined, optional
        Routes contains a list of IPv6 routes
    """


    id: str

    link: str

    routes?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0RoutesItems0]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0RoutesItems0:
    r"""
    NetworkDataRoutev6 represents an ipv6 route object.

    Attributes
    ----------
    gateway : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0RoutesItems0Gateway, default is Undefined, required
        gateway
    network : str, default is Undefined, required
        Network is the IPv6 network address
    prefix : int, default is Undefined, optional
        Prefix is the mask of the network as integer (max 128)
    services : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0RoutesItems0Services, default is Undefined, optional
        services
    """


    gateway: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0RoutesItems0Gateway

    network: str

    prefix?: int

    services?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0RoutesItems0Services


    check:
        _regex_match(str(network), r"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$")
        prefix <= 128 if prefix not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0RoutesItems0Gateway:
    r"""
    Gateway is the IPv6 address of the gateway

    Attributes
    ----------
    fromIPPool : str, default is Undefined, optional
        FromIPPool is the name of the IPPool to fetch the gateway from
    string : str, default is Undefined, optional
        String is the gateway given as a string
    """


    fromIPPool?: str

    string?: str


    check:
        _regex_match(str(string), r"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$") if string


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6DHCPItems0RoutesItems0Services:
    r"""
    Services is a list of IPv6 services

    Attributes
    ----------
    dns : [str], default is Undefined, optional
        DNS is a list of IPv6 DNS services
    dnsFromIPPool : str, default is Undefined, optional
        DNSFromIPPool is the name of the IPPool from which to get the DNS servers
    """


    dns?: [str]

    dnsFromIPPool?: str


    check:
        all dns in dns { _regex_match(str(dns), r"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$") if dns } if dns


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0:
    r"""
    NetworkDataIPv6 represents an ipv6 static network object.

    Attributes
    ----------
    fromPoolRef : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0FromPoolRef, default is Undefined, optional
        from pool ref
    id : str, default is Undefined, required
        ID is the network ID (name)
    ipAddressFromIPPool : str, default is Undefined, required
        IPAddressFromIPPool contains the name of the IPPool to use to get an ip address
    link : str, default is Undefined, required
        Link is the link on which the network applies
    routes : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0RoutesItems0], default is Undefined, optional
        Routes contains a list of IPv6 routes
    """


    fromPoolRef?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0FromPoolRef

    id: str

    ipAddressFromIPPool: str

    link: str

    routes?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0RoutesItems0]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0FromPoolRef:
    r"""
    FromPoolRef is a reference to a IP pool to allocate an address from.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced.
        If APIGroup is not specified, the specified Kind must be in the core API group.
        For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0RoutesItems0:
    r"""
    NetworkDataRoutev6 represents an ipv6 route object.

    Attributes
    ----------
    gateway : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0RoutesItems0Gateway, default is Undefined, required
        gateway
    network : str, default is Undefined, required
        Network is the IPv6 network address
    prefix : int, default is Undefined, optional
        Prefix is the mask of the network as integer (max 128)
    services : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0RoutesItems0Services, default is Undefined, optional
        services
    """


    gateway: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0RoutesItems0Gateway

    network: str

    prefix?: int

    services?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0RoutesItems0Services


    check:
        _regex_match(str(network), r"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$")
        prefix <= 128 if prefix not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0RoutesItems0Gateway:
    r"""
    Gateway is the IPv6 address of the gateway

    Attributes
    ----------
    fromIPPool : str, default is Undefined, optional
        FromIPPool is the name of the IPPool to fetch the gateway from
    string : str, default is Undefined, optional
        String is the gateway given as a string
    """


    fromIPPool?: str

    string?: str


    check:
        _regex_match(str(string), r"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$") if string


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6Items0RoutesItems0Services:
    r"""
    Services is a list of IPv6 services

    Attributes
    ----------
    dns : [str], default is Undefined, optional
        DNS is a list of IPv6 DNS services
    dnsFromIPPool : str, default is Undefined, optional
        DNSFromIPPool is the name of the IPPool from which to get the DNS servers
    """


    dns?: [str]

    dnsFromIPPool?: str


    check:
        all dns in dns { _regex_match(str(dns), r"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$") if dns } if dns


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0:
    r"""
    NetworkDataIPv6DHCP represents an ipv6 DHCP network object.

    Attributes
    ----------
    id : str, default is Undefined, required
        ID is the network ID (name)
    link : str, default is Undefined, required
        Link is the link on which the network applies
    routes : [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0RoutesItems0], default is Undefined, optional
        Routes contains a list of IPv6 routes
    """


    id: str

    link: str

    routes?: [InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0RoutesItems0]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0RoutesItems0:
    r"""
    NetworkDataRoutev6 represents an ipv6 route object.

    Attributes
    ----------
    gateway : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0RoutesItems0Gateway, default is Undefined, required
        gateway
    network : str, default is Undefined, required
        Network is the IPv6 network address
    prefix : int, default is Undefined, optional
        Prefix is the mask of the network as integer (max 128)
    services : InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0RoutesItems0Services, default is Undefined, optional
        services
    """


    gateway: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0RoutesItems0Gateway

    network: str

    prefix?: int

    services?: InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0RoutesItems0Services


    check:
        _regex_match(str(network), r"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$")
        prefix <= 128 if prefix not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0RoutesItems0Gateway:
    r"""
    Gateway is the IPv6 address of the gateway

    Attributes
    ----------
    fromIPPool : str, default is Undefined, optional
        FromIPPool is the name of the IPPool to fetch the gateway from
    string : str, default is Undefined, optional
        String is the gateway given as a string
    """


    fromIPPool?: str

    string?: str


    check:
        _regex_match(str(string), r"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$") if string


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataNetworksIPV6SLAACItems0RoutesItems0Services:
    r"""
    Services is a list of IPv6 services

    Attributes
    ----------
    dns : [str], default is Undefined, optional
        DNS is a list of IPv6 DNS services
    dnsFromIPPool : str, default is Undefined, optional
        DNSFromIPPool is the name of the IPPool from which to get the DNS servers
    """


    dns?: [str]

    dnsFromIPPool?: str


    check:
        all dns in dns { _regex_match(str(dns), r"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$") if dns } if dns


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateSpecNetworkDataServices:
    r"""
    Services  is a structure containing lists of different types objects

    Attributes
    ----------
    dns : [str], default is Undefined, optional
        DNS is a list of DNS services
    dnsFromIPPool : str, default is Undefined, optional
        DNSFromIPPool is the name of the IPPool from which to get the DNS servers
    """


    dns?: [str]

    dnsFromIPPool?: str


    check:
        all dns in dns { _regex_match(str(dns), r"((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))") if dns } if dns


schema InfrastructureClusterxK8sIoV1beta1Metal3DataTemplateStatus:
    r"""
    Metal3DataTemplateStatus defines the observed state of Metal3DataTemplate.

    Attributes
    ----------
    indexes : {str:int}, default is Undefined, optional
        Indexes contains the map of Metal3Machine and index used
    lastUpdated : str, default is Undefined, optional
        LastUpdated identifies when this status was last observed.
    """


    indexes?: {str:int}

    lastUpdated?: str


