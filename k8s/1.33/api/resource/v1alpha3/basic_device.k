"""
This is the basic_device module in k8s.api.resource.v1alpha3 package.
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import api.core.v1 as corev1


schema BasicDevice:
    r"""
    BasicDevice defines one device instance.

    Attributes
    ----------
    allNodes : bool, default is Undefined, optional
        AllNodes indicates that all nodes have access to the device.

        Must only be set if Spec.PerDeviceNodeSelection is set to true. At most one of NodeName, NodeSelector and AllNodes can be set.
    attributes : {str:DeviceAttribute}, default is Undefined, optional
        Attributes defines the set of attributes for this device. The name of each attribute must be unique in that set.

        The maximum number of attributes and capacities combined is 32.
    capacity : {str:str}, default is Undefined, optional
        Capacity defines the set of capacities for this device. The name of each capacity must be unique in that set.

        The maximum number of attributes and capacities combined is 32.
    consumesCounters : [DeviceCounterConsumption], default is Undefined, optional
        ConsumesCounters defines a list of references to sharedCounters and the set of counters that the device will consume from those counter sets.

        There can only be a single entry per counterSet.

        The total number of device counter consumption entries must be <= 32. In addition, the total number in the entire ResourceSlice must be <= 1024 (for example, 64 devices with 16 counters each).
    nodeName : str, default is Undefined, optional
        NodeName identifies the node where the device is available.

        Must only be set if Spec.PerDeviceNodeSelection is set to true. At most one of NodeName, NodeSelector and AllNodes can be set.
    nodeSelector : corev1.NodeSelector, default is Undefined, optional
        NodeSelector defines the nodes where the device is available.

        Must only be set if Spec.PerDeviceNodeSelection is set to true. At most one of NodeName, NodeSelector and AllNodes can be set.
    taints : [DeviceTaint], default is Undefined, optional
        If specified, these are the driver-defined taints.

        The maximum number of taints is 4.

        This is an alpha field and requires enabling the DRADeviceTaints feature gate.
    """


    allNodes?: bool

    attributes?: {str:DeviceAttribute}

    capacity?: {str:str}

    consumesCounters?: [DeviceCounterConsumption]

    nodeName?: str

    nodeSelector?: corev1.NodeSelector

    taints?: [DeviceTaint]


