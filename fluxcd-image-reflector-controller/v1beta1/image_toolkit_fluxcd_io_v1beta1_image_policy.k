"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ImagePolicy:
    r"""
    ImagePolicy is the Schema for the imagepolicies API

    Attributes
    ----------
    apiVersion : str, default is "image.toolkit.fluxcd.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ImagePolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ImageToolkitFluxcdIoV1beta1ImagePolicySpec, default is Undefined, optional
        spec
    status : ImageToolkitFluxcdIoV1beta1ImagePolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "image.toolkit.fluxcd.io/v1beta1" = "image.toolkit.fluxcd.io/v1beta1"

    kind: "ImagePolicy" = "ImagePolicy"

    metadata?: v1.ObjectMeta

    spec?: ImageToolkitFluxcdIoV1beta1ImagePolicySpec

    status?: ImageToolkitFluxcdIoV1beta1ImagePolicyStatus


schema ImageToolkitFluxcdIoV1beta1ImagePolicySpec:
    r"""
    ImagePolicySpec defines the parameters for calculating the
    ImagePolicy

    Attributes
    ----------
    filterTags : ImageToolkitFluxcdIoV1beta1ImagePolicySpecFilterTags, default is Undefined, optional
        filter tags
    imageRepositoryRef : ImageToolkitFluxcdIoV1beta1ImagePolicySpecImageRepositoryRef, default is Undefined, required
        image repository ref
    policy : ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicy, default is Undefined, required
        policy
    """


    filterTags?: ImageToolkitFluxcdIoV1beta1ImagePolicySpecFilterTags

    imageRepositoryRef: ImageToolkitFluxcdIoV1beta1ImagePolicySpecImageRepositoryRef

    policy: ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicy


schema ImageToolkitFluxcdIoV1beta1ImagePolicySpecFilterTags:
    r"""
    FilterTags enables filtering for only a subset of tags based on a set of
    rules. If no rules are provided, all the tags from the repository will be
    ordered and compared.

    Attributes
    ----------
    extract : str, default is Undefined, optional
        Extract allows a capture group to be extracted from the specified regular
        expression pattern, useful before tag evaluation.
    pattern : str, default is Undefined, optional
        Pattern specifies a regular expression pattern used to filter for image
        tags.
    """


    extract?: str

    pattern?: str


schema ImageToolkitFluxcdIoV1beta1ImagePolicySpecImageRepositoryRef:
    r"""
    ImageRepositoryRef points at the object specifying the image
    being scanned

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    namespace : str, default is Undefined, optional
        Namespace of the referent, when not specified it acts as LocalObjectReference.
    """


    name: str

    namespace?: str


schema ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicy:
    r"""
    Policy gives the particulars of the policy to be followed in
    selecting the most recent image

    Attributes
    ----------
    alphabetical : ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicyAlphabetical, default is Undefined, optional
        alphabetical
    numerical : ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicyNumerical, default is Undefined, optional
        numerical
    semver : ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicySemver, default is Undefined, optional
        semver
    """


    alphabetical?: ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicyAlphabetical

    numerical?: ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicyNumerical

    semver?: ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicySemver


schema ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicyAlphabetical:
    r"""
    Alphabetical set of rules to use for alphabetical ordering of the tags.

    Attributes
    ----------
    order : str, default is "asc", optional
        Order specifies the sorting order of the tags. Given the letters of the
        alphabet as tags, ascending order would select Z, and descending order
        would select A.
    """


    order?: "asc" | "desc" = "asc"


schema ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicyNumerical:
    r"""
    Numerical set of rules to use for numerical ordering of the tags.

    Attributes
    ----------
    order : str, default is "asc", optional
        Order specifies the sorting order of the tags. Given the integer values
        from 0 to 9 as tags, ascending order would select 9, and descending order
        would select 0.
    """


    order?: "asc" | "desc" = "asc"


schema ImageToolkitFluxcdIoV1beta1ImagePolicySpecPolicySemver:
    r"""
    SemVer gives a semantic version range to check against the tags
    available.

    Attributes
    ----------
    range : str, default is Undefined, required
        Range gives a semver range for the image tag; the highest
        version within the range that's a tag yields the latest image.
    """


    range: str


schema ImageToolkitFluxcdIoV1beta1ImagePolicyStatus:
    r"""
    ImagePolicyStatus defines the observed state of ImagePolicy

    Attributes
    ----------
    conditions : [ImageToolkitFluxcdIoV1beta1ImagePolicyStatusConditionsItems0], default is Undefined, optional
        conditions
    latestImage : str, default is Undefined, optional
        LatestImage gives the first in the list of images scanned by
        the image repository, when filtered and ordered according to
        the policy.
    observedGeneration : int, default is Undefined, optional
        observed generation
    """


    conditions?: [ImageToolkitFluxcdIoV1beta1ImagePolicyStatusConditionsItems0]

    latestImage?: str

    observedGeneration?: int


schema ImageToolkitFluxcdIoV1beta1ImagePolicyStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


