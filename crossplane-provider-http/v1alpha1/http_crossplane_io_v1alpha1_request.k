"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Request:
    r"""
    A Request is an example API type.

    Attributes
    ----------
    apiVersion : str, default is "http.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Request", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : HTTPCrossplaneIoV1alpha1RequestSpec, default is Undefined, required
        spec
    status : HTTPCrossplaneIoV1alpha1RequestStatus, default is Undefined, optional
        status
    """


    apiVersion: "http.crossplane.io/v1alpha1" = "http.crossplane.io/v1alpha1"

    kind: "Request" = "Request"

    metadata?: v1.ObjectMeta

    spec: HTTPCrossplaneIoV1alpha1RequestSpec

    status?: HTTPCrossplaneIoV1alpha1RequestStatus


schema HTTPCrossplaneIoV1alpha1RequestSpec:
    r"""
    A RequestSpec defines the desired state of a Request.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : HTTPCrossplaneIoV1alpha1RequestSpecForProvider, default is Undefined, required
        for provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : HTTPCrossplaneIoV1alpha1RequestSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : HTTPCrossplaneIoV1alpha1RequestSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: HTTPCrossplaneIoV1alpha1RequestSpecForProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: HTTPCrossplaneIoV1alpha1RequestSpecProviderConfigRef

    publishConnectionDetailsTo?: HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: HTTPCrossplaneIoV1alpha1RequestSpecWriteConnectionSecretToRef


schema HTTPCrossplaneIoV1alpha1RequestSpecForProvider:
    r"""
    RequestParameters are the configurable fields of a Request.

    Attributes
    ----------
    headers : {str:[str]}, default is Undefined, optional
        headers
    insecureSkipTLSVerify : bool, default is Undefined, optional
        InsecureSkipTLSVerify, when set to true, skips TLS certificate checks for the HTTP request
    mappings : [HTTPCrossplaneIoV1alpha1RequestSpecForProviderMappingsItems0], default is Undefined, required
        mappings
    payload : HTTPCrossplaneIoV1alpha1RequestSpecForProviderPayload, default is Undefined, required
        payload
    waitTimeout : str, default is Undefined, optional
        wait timeout
    """


    headers?: {str:[str]}

    insecureSkipTLSVerify?: bool

    mappings: [HTTPCrossplaneIoV1alpha1RequestSpecForProviderMappingsItems0]

    payload: HTTPCrossplaneIoV1alpha1RequestSpecForProviderPayload

    waitTimeout?: str


schema HTTPCrossplaneIoV1alpha1RequestSpecForProviderMappingsItems0:
    r"""
    HTTP crossplane io v1alpha1 request spec for provider mappings items0

    Attributes
    ----------
    body : str, default is Undefined, optional
        body
    headers : {str:[str]}, default is Undefined, optional
        headers
    method : str, default is Undefined, required
        method
    url : str, default is Undefined, required
        url
    """


    body?: str

    headers?: {str:[str]}

    method: "POST" | "GET" | "PUT" | "DELETE"

    url: str


schema HTTPCrossplaneIoV1alpha1RequestSpecForProviderPayload:
    r"""
    HTTP crossplane io v1alpha1 request spec for provider payload

    Attributes
    ----------
    baseUrl : str, default is Undefined, optional
        base Url
    body : str, default is Undefined, optional
        body
    """


    baseUrl?: str

    body?: str


schema HTTPCrossplaneIoV1alpha1RequestSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : HTTPCrossplaneIoV1alpha1RequestSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: HTTPCrossplaneIoV1alpha1RequestSpecProviderConfigRefPolicy


schema HTTPCrossplaneIoV1alpha1RequestSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsToConfigRef

    metadata?: HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsToMetadata

    name: str


schema HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsToConfigRefPolicy


schema HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema HTTPCrossplaneIoV1alpha1RequestSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema HTTPCrossplaneIoV1alpha1RequestSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema HTTPCrossplaneIoV1alpha1RequestStatus:
    r"""
    A RequestStatus represents the observed state of a Request.

    Attributes
    ----------
    cache : HTTPCrossplaneIoV1alpha1RequestStatusCache, default is Undefined, optional
        cache
    conditions : [HTTPCrossplaneIoV1alpha1RequestStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    error : str, default is Undefined, optional
        error
    failed : int, default is Undefined, optional
        failed
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    requestDetails : HTTPCrossplaneIoV1alpha1RequestStatusRequestDetails, default is Undefined, optional
        request details
    response : HTTPCrossplaneIoV1alpha1RequestStatusResponse, default is Undefined, optional
        response
    """


    cache?: HTTPCrossplaneIoV1alpha1RequestStatusCache

    conditions?: [HTTPCrossplaneIoV1alpha1RequestStatusConditionsItems0]

    error?: str

    failed?: int

    observedGeneration?: int

    requestDetails?: HTTPCrossplaneIoV1alpha1RequestStatusRequestDetails

    response?: HTTPCrossplaneIoV1alpha1RequestStatusResponse


schema HTTPCrossplaneIoV1alpha1RequestStatusCache:
    r"""
    HTTP crossplane io v1alpha1 request status cache

    Attributes
    ----------
    lastUpdated : str, default is Undefined, optional
        last updated
    response : HTTPCrossplaneIoV1alpha1RequestStatusCacheResponse, default is Undefined, optional
        response
    """


    lastUpdated?: str

    response?: HTTPCrossplaneIoV1alpha1RequestStatusCacheResponse


schema HTTPCrossplaneIoV1alpha1RequestStatusCacheResponse:
    r"""
    RequestObservation are the observable fields of a Request.

    Attributes
    ----------
    body : str, default is Undefined, optional
        body
    headers : {str:[str]}, default is Undefined, optional
        headers
    statusCode : int, default is Undefined, optional
        status code
    """


    body?: str

    headers?: {str:[str]}

    statusCode?: int


schema HTTPCrossplaneIoV1alpha1RequestStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


schema HTTPCrossplaneIoV1alpha1RequestStatusRequestDetails:
    r"""
    HTTP crossplane io v1alpha1 request status request details

    Attributes
    ----------
    body : str, default is Undefined, optional
        body
    headers : {str:[str]}, default is Undefined, optional
        headers
    method : str, default is Undefined, required
        method
    url : str, default is Undefined, required
        url
    """


    body?: str

    headers?: {str:[str]}

    method: "POST" | "GET" | "PUT" | "DELETE"

    url: str


schema HTTPCrossplaneIoV1alpha1RequestStatusResponse:
    r"""
    RequestObservation are the observable fields of a Request.

    Attributes
    ----------
    body : str, default is Undefined, optional
        body
    headers : {str:[str]}, default is Undefined, optional
        headers
    statusCode : int, default is Undefined, optional
        status code
    """


    body?: str

    headers?: {str:[str]}

    statusCode?: int


