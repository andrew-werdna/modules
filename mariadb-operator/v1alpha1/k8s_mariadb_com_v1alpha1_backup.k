"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema Backup:
    r"""
    Backup is the Schema for the backups API. It is used to define backup jobs and its storage.

    Attributes
    ----------
    apiVersion : str, default is "k8s.mariadb.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Backup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : K8sMariadbComV1alpha1BackupSpec, default is Undefined, optional
        spec
    status : K8sMariadbComV1alpha1BackupStatus, default is Undefined, optional
        status
    """


    apiVersion: "k8s.mariadb.com/v1alpha1" = "k8s.mariadb.com/v1alpha1"

    kind: "Backup" = "Backup"

    metadata?: v1.ObjectMeta

    spec?: K8sMariadbComV1alpha1BackupSpec

    status?: K8sMariadbComV1alpha1BackupStatus


schema K8sMariadbComV1alpha1BackupSpec:
    r"""
    BackupSpec defines the desired state of Backup

    Attributes
    ----------
    affinity : K8sMariadbComV1alpha1BackupSpecAffinity, default is Undefined, optional
        affinity
    args : [str], default is Undefined, optional
        Args to be used in the Container.
    backoffLimit : int, default is Undefined, optional
        BackoffLimit defines the maximum number of attempts to successfully take a Backup.
    compression : str, default is Undefined, optional
        Compression algorithm to be used in the Backup.
    databases : [str], default is Undefined, optional
        Databases defines the logical databases to be backed up. If not provided, all databases are backed up.
    failedJobsHistoryLimit : int, default is Undefined, optional
        FailedJobsHistoryLimit defines the maximum number of failed Jobs to be displayed.
    ignoreGlobalPriv : bool, default is Undefined, optional
        IgnoreGlobalPriv indicates to ignore the mysql.global_priv in backups.
        If not provided, it will default to true when the referred MariaDB instance has Galera enabled and otherwise to false.
        See: https://github.com/mariadb-operator/mariadb-operator/issues/556
    imagePullSecrets : [K8sMariadbComV1alpha1BackupSpecImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets is the list of pull Secrets to be used to pull the image.
    inheritMetadata : K8sMariadbComV1alpha1BackupSpecInheritMetadata, default is Undefined, optional
        inherit metadata
    logLevel : str, default is "info", optional
        LogLevel to be used n the Backup Job. It defaults to 'info'.
    mariaDbRef : K8sMariadbComV1alpha1BackupSpecMariaDbRef, default is Undefined, required
        maria db ref
    maxRetention : str, default is Undefined, optional
        MaxRetention defines the retention policy for backups. Old backups will be cleaned up by the Backup Job.
        It defaults to 30 days.
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector to be used in the Pod.
    podMetadata : K8sMariadbComV1alpha1BackupSpecPodMetadata, default is Undefined, optional
        pod metadata
    podSecurityContext : K8sMariadbComV1alpha1BackupSpecPodSecurityContext, default is Undefined, optional
        pod security context
    priorityClassName : str, default is Undefined, optional
        PriorityClassName to be used in the Pod.
    resources : K8sMariadbComV1alpha1BackupSpecResources, default is Undefined, optional
        resources
    restartPolicy : str, default is "OnFailure", optional
        RestartPolicy to be added to the Backup Pod.
    schedule : K8sMariadbComV1alpha1BackupSpecSchedule, default is Undefined, optional
        schedule
    securityContext : K8sMariadbComV1alpha1BackupSpecSecurityContext, default is Undefined, optional
        security context
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the ServiceAccount to be used by the Pods.
    stagingStorage : K8sMariadbComV1alpha1BackupSpecStagingStorage, default is Undefined, optional
        staging storage
    storage : K8sMariadbComV1alpha1BackupSpecStorage, default is Undefined, required
        storage
    successfulJobsHistoryLimit : int, default is Undefined, optional
        SuccessfulJobsHistoryLimit defines the maximum number of successful Jobs to be displayed.
    timeZone : str, default is Undefined, optional
        TimeZone defines the timezone associated with the cron expression.
    tolerations : [K8sMariadbComV1alpha1BackupSpecTolerationsItems0], default is Undefined, optional
        Tolerations to be used in the Pod.
    """


    affinity?: K8sMariadbComV1alpha1BackupSpecAffinity

    args?: [str]

    backoffLimit?: int

    compression?: "none" | "bzip2" | "gzip"

    databases?: [str]

    failedJobsHistoryLimit?: int

    ignoreGlobalPriv?: bool

    imagePullSecrets?: [K8sMariadbComV1alpha1BackupSpecImagePullSecretsItems0]

    inheritMetadata?: K8sMariadbComV1alpha1BackupSpecInheritMetadata

    logLevel?: str = "info"

    mariaDbRef: K8sMariadbComV1alpha1BackupSpecMariaDbRef

    maxRetention?: str

    nodeSelector?: {str:str}

    podMetadata?: K8sMariadbComV1alpha1BackupSpecPodMetadata

    podSecurityContext?: K8sMariadbComV1alpha1BackupSpecPodSecurityContext

    priorityClassName?: str

    resources?: K8sMariadbComV1alpha1BackupSpecResources

    restartPolicy?: "Always" | "OnFailure" | "Never" = "OnFailure"

    schedule?: K8sMariadbComV1alpha1BackupSpecSchedule

    securityContext?: K8sMariadbComV1alpha1BackupSpecSecurityContext

    serviceAccountName?: str

    stagingStorage?: K8sMariadbComV1alpha1BackupSpecStagingStorage

    storage: K8sMariadbComV1alpha1BackupSpecStorage

    successfulJobsHistoryLimit?: int

    timeZone?: str

    tolerations?: [K8sMariadbComV1alpha1BackupSpecTolerationsItems0]


    check:
        failedJobsHistoryLimit >= 0 if failedJobsHistoryLimit not in [None, Undefined]
        successfulJobsHistoryLimit >= 0 if successfulJobsHistoryLimit not in [None, Undefined]


schema K8sMariadbComV1alpha1BackupSpecAffinity:
    r"""
    Affinity to be used in the Pod.

    Attributes
    ----------
    antiAffinityEnabled : bool, default is Undefined, optional
        AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.
        Make sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.
    nodeAffinity : K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAntiAffinity : K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """


    antiAffinityEnabled?: bool

    nodeAffinity?: K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinity

    podAntiAffinity?: K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinity


schema K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinity:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeaffinity-v1-core

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        preferred during scheduling ignored during execution
    requiredDuringSchedulingIgnoredDuringExecution : K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#preferredschedulingterm-v1-core

    Attributes
    ----------
    preference : K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        weight
    """


    preference: K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorterm-v1-core

    Attributes
    ----------
    matchExpressions : [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        match expressions
    matchFields : [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        match fields
    """


    matchExpressions?: [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        A node selector operator is the set of operators that can be used in
        a node selector requirement.
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: str

    values?: [str]


schema K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        A node selector operator is the set of operators that can be used in
        a node selector requirement.
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: str

    values?: [str]


schema K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselector-v1-core

    Attributes
    ----------
    nodeSelectorTerms : [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        node selector terms
    """


    nodeSelectorTerms: [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorterm-v1-core

    Attributes
    ----------
    matchExpressions : [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        match expressions
    matchFields : [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        match fields
    """


    matchExpressions?: [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        A node selector operator is the set of operators that can be used in
        a node selector requirement.
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: str

    values?: [str]


schema K8sMariadbComV1alpha1BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        A node selector operator is the set of operators that can be used in
        a node selector requirement.
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: str

    values?: [str]


schema K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinity:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        preferred during scheduling ignored during execution
    requiredDuringSchedulingIgnoredDuringExecution : [K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core.

    Attributes
    ----------
    podAffinityTerm : K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight
    """


    podAffinityTerm: K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.

    Attributes
    ----------
    labelSelector : K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    topologyKey : str, default is Undefined, required
        topology key
    """


    labelSelector?: K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    topologyKey: str


schema K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselector-v1-meta

    Attributes
    ----------
    matchExpressions : [K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        match expressions
    matchLabels : {str:str}, default is Undefined, optional
        match labels
    """


    matchExpressions?: [K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselectorrequirement-v1-meta

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        A label selector operator is the set of operators that can be used in a selector requirement.
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: str

    values?: [str]


schema K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.

    Attributes
    ----------
    labelSelector : K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    topologyKey : str, default is Undefined, required
        topology key
    """


    labelSelector?: K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    topologyKey: str


schema K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselector-v1-meta

    Attributes
    ----------
    matchExpressions : [K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        match expressions
    matchLabels : {str:str}, default is Undefined, optional
        match labels
    """


    matchExpressions?: [K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema K8sMariadbComV1alpha1BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselectorrequirement-v1-meta

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        A label selector operator is the set of operators that can be used in a selector requirement.
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: str

    values?: [str]


schema K8sMariadbComV1alpha1BackupSpecImagePullSecretsItems0:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str = ""


schema K8sMariadbComV1alpha1BackupSpecInheritMetadata:
    r"""
    InheritMetadata defines the metadata to be inherited by children resources.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations to be added to children resources.
    labels : {str:str}, default is Undefined, optional
        Labels to be added to children resources.
    """


    annotations?: {str:str}

    labels?: {str:str}


schema K8sMariadbComV1alpha1BackupSpecMariaDbRef:
    r"""
    MariaDBRef is a reference to a MariaDB object.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    waitForIt : bool, default is True, optional
        WaitForIt indicates whether the controller using this reference should wait for MariaDB to be ready.
    """


    name?: str

    namespace?: str

    waitForIt?: bool = True


schema K8sMariadbComV1alpha1BackupSpecPodMetadata:
    r"""
    PodMetadata defines extra metadata for the Pod.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations to be added to children resources.
    labels : {str:str}, default is Undefined, optional
        Labels to be added to children resources.
    """


    annotations?: {str:str}

    labels?: {str:str}


schema K8sMariadbComV1alpha1BackupSpecPodSecurityContext:
    r"""
    SecurityContext holds pod-level security attributes and common container settings.

    Attributes
    ----------
    appArmorProfile : K8sMariadbComV1alpha1BackupSpecPodSecurityContextAppArmorProfile, default is Undefined, optional
        app armor profile
    fsGroup : int, default is Undefined, optional
        fs group
    fsGroupChangePolicy : str, default is Undefined, optional
        PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume
        when volume is mounted.
    runAsGroup : int, default is Undefined, optional
        run as group
    runAsNonRoot : bool, default is Undefined, optional
        run as non root
    runAsUser : int, default is Undefined, optional
        run as user
    seLinuxOptions : K8sMariadbComV1alpha1BackupSpecPodSecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : K8sMariadbComV1alpha1BackupSpecPodSecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    supplementalGroups : [int], default is Undefined, optional
        supplemental groups
    """


    appArmorProfile?: K8sMariadbComV1alpha1BackupSpecPodSecurityContextAppArmorProfile

    fsGroup?: int

    fsGroupChangePolicy?: str

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: K8sMariadbComV1alpha1BackupSpecPodSecurityContextSeLinuxOptions

    seccompProfile?: K8sMariadbComV1alpha1BackupSpecPodSecurityContextSeccompProfile

    supplementalGroups?: [int]


schema K8sMariadbComV1alpha1BackupSpecPodSecurityContextAppArmorProfile:
    r"""
    AppArmorProfile defines a pod or container's AppArmor settings.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile loaded on the node that should be used.
        The profile must be preconfigured on the node to work.
        Must match the loaded name of the profile.
        Must be set if and only if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of AppArmor profile will be applied.
        Valid options are:
          Localhost - a profile pre-loaded on the node.
          RuntimeDefault - the container runtime's default profile.
          Unconfined - no AppArmor enforcement.
    """


    localhostProfile?: str

    $type: str


schema K8sMariadbComV1alpha1BackupSpecPodSecurityContextSeLinuxOptions:
    r"""
    SELinuxOptions are the labels to be applied to the container

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema K8sMariadbComV1alpha1BackupSpecPodSecurityContextSeccompProfile:
    r"""
    SeccompProfile defines a pod/container's seccomp profile settings.
    Only one profile source may be set.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used.
        The profile must be preconfigured on the node to work.
        Must be a descending path, relative to the kubelet's configured seccomp profile location.
        Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied.
        Valid options are:

        Localhost - a profile defined in a file on the node should be used.
        RuntimeDefault - the container runtime default profile should be used.
        Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema K8sMariadbComV1alpha1BackupSpecResources:
    r"""
    Resouces describes the compute resource requirements.

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        ResourceList is a set of (resource name, quantity) pairs.
    requests : {str:int | str}, default is Undefined, optional
        ResourceList is a set of (resource name, quantity) pairs.
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema K8sMariadbComV1alpha1BackupSpecSchedule:
    r"""
    Schedule defines when the Backup will be taken.

    Attributes
    ----------
    cron : str, default is Undefined, required
        Cron is a cron expression that defines the schedule.
    suspend : bool, default is Undefined, optional
        Suspend defines whether the schedule is active or not.
    """


    cron: str

    suspend?: bool = False


schema K8sMariadbComV1alpha1BackupSpecSecurityContext:
    r"""
    SecurityContext holds security configuration that will be applied to a container.

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        allow privilege escalation
    capabilities : K8sMariadbComV1alpha1BackupSpecSecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        privileged
    readOnlyRootFilesystem : bool, default is Undefined, optional
        read only root filesystem
    runAsGroup : int, default is Undefined, optional
        run as group
    runAsNonRoot : bool, default is Undefined, optional
        run as non root
    runAsUser : int, default is Undefined, optional
        run as user
    """


    allowPrivilegeEscalation?: bool

    capabilities?: K8sMariadbComV1alpha1BackupSpecSecurityContextCapabilities

    privileged?: bool

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int


schema K8sMariadbComV1alpha1BackupSpecSecurityContextCapabilities:
    r"""
    Adds and removes POSIX capabilities from running containers.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema K8sMariadbComV1alpha1BackupSpecStagingStorage:
    r"""
    StagingStorage defines the temporary storage used to keep external backups (i.e. S3) while they are being processed.
    It defaults to an emptyDir volume, meaning that the backups will be temporarily stored in the node where the Backup Job is scheduled.
    The staging area gets cleaned up after each backup is completed, consider this for sizing it appropriately.

    Attributes
    ----------
    persistentVolumeClaim : K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    volume : K8sMariadbComV1alpha1BackupSpecStagingStorageVolume, default is Undefined, optional
        volume
    """


    persistentVolumeClaim?: K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaim

    volume?: K8sMariadbComV1alpha1BackupSpecStagingStorageVolume


schema K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaim:
    r"""
    PersistentVolumeClaim is a Kubernetes PVC specification.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        access modes
    resources : K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaimResources, default is Undefined, optional
        resources
    selector : K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaimSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storage class name
    """


    accessModes?: [str]

    resources?: K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaimResources

    selector?: K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaimSelector

    storageClassName?: str


schema K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaimResources:
    r"""
    VolumeResourceRequirements describes the storage resource requirements for a volume.

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaimSelector:
    r"""
    A label selector is a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed. An empty label selector matches all objects. A null
    label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaimSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaimSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema K8sMariadbComV1alpha1BackupSpecStagingStoragePersistentVolumeClaimSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema K8sMariadbComV1alpha1BackupSpecStagingStorageVolume:
    r"""
    Volume is a Kubernetes volume specification.

    Attributes
    ----------
    csi : K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeCsi, default is Undefined, optional
        csi
    emptyDir : K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeEmptyDir, default is Undefined, optional
        empty dir
    hostPath : K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeHostPath, default is Undefined, optional
        host path
    nfs : K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeNfs, default is Undefined, optional
        nfs
    persistentVolumeClaim : K8sMariadbComV1alpha1BackupSpecStagingStorageVolumePersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    """


    csi?: K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeCsi

    emptyDir?: K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeEmptyDir

    hostPath?: K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeHostPath

    nfs?: K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeNfs

    persistentVolumeClaim?: K8sMariadbComV1alpha1BackupSpecStagingStorageVolumePersistentVolumeClaim


schema K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeCsi:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#csivolumesource-v1-core.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver
    fsType : str, default is Undefined, optional
        fs type
    nodePublishSecretRef : K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeCsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        read only
    volumeAttributes : {str:str}, default is Undefined, optional
        volume attributes
    """


    driver: str

    fsType?: str

    nodePublishSecretRef?: K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeCsiNodePublishSecretRef

    readOnly?: bool

    volumeAttributes?: {str:str}


schema K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeCsiNodePublishSecretRef:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str = ""


schema K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeEmptyDir:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#emptydirvolumesource-v1-core.

    Attributes
    ----------
    medium : str, default is Undefined, optional
        StorageMedium defines ways that storage can be allocated to a volume.
    sizeLimit : int | str, default is Undefined, optional
        size limit
    """


    medium?: str

    sizeLimit?: int | str


    check:
        _regex_match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeHostPath:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#hostpathvolumesource-v1-core

    Attributes
    ----------
    path : str, default is Undefined, required
        path
    $type : str, default is Undefined, optional
        type
    """


    path: str

    $type?: str


schema K8sMariadbComV1alpha1BackupSpecStagingStorageVolumeNfs:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nfsvolumesource-v1-core.

    Attributes
    ----------
    path : str, default is Undefined, required
        path
    readOnly : bool, default is Undefined, optional
        read only
    server : str, default is Undefined, required
        server
    """


    path: str

    readOnly?: bool

    server: str


schema K8sMariadbComV1alpha1BackupSpecStagingStorageVolumePersistentVolumeClaim:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#persistentvolumeclaimvolumesource-v1-core.

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claim name
    readOnly : bool, default is Undefined, optional
        read only
    """


    claimName: str

    readOnly?: bool


schema K8sMariadbComV1alpha1BackupSpecStorage:
    r"""
    Storage defines the final storage for backups.

    Attributes
    ----------
    persistentVolumeClaim : K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    s3 : K8sMariadbComV1alpha1BackupSpecStorageS3, default is Undefined, optional
        s3
    volume : K8sMariadbComV1alpha1BackupSpecStorageVolume, default is Undefined, optional
        volume
    """


    persistentVolumeClaim?: K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaim

    s3?: K8sMariadbComV1alpha1BackupSpecStorageS3

    volume?: K8sMariadbComV1alpha1BackupSpecStorageVolume


schema K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaim:
    r"""
    PersistentVolumeClaim is a Kubernetes PVC specification.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        access modes
    resources : K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaimResources, default is Undefined, optional
        resources
    selector : K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaimSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storage class name
    """


    accessModes?: [str]

    resources?: K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaimResources

    selector?: K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaimSelector

    storageClassName?: str


schema K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaimResources:
    r"""
    VolumeResourceRequirements describes the storage resource requirements for a volume.

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaimSelector:
    r"""
    A label selector is a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed. An empty label selector matches all objects. A null
    label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaimSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaimSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema K8sMariadbComV1alpha1BackupSpecStoragePersistentVolumeClaimSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema K8sMariadbComV1alpha1BackupSpecStorageS3:
    r"""
    S3 defines the configuration to store backups in a S3 compatible storage.

    Attributes
    ----------
    accessKeyIdSecretKeyRef : K8sMariadbComV1alpha1BackupSpecStorageS3AccessKeyIDSecretKeyRef, default is Undefined, optional
        access key Id secret key ref
    bucket : str, default is Undefined, required
        Bucket is the name Name of the bucket to store backups.
    endpoint : str, default is Undefined, required
        Endpoint is the S3 API endpoint without scheme.
    prefix : str, default is Undefined, optional
        Prefix indicates a folder/subfolder in the bucket. For example: mariadb/ or mariadb/backups. A trailing slash '/' is added if not provided.
    region : str, default is Undefined, optional
        Region is the S3 region name to use.
    secretAccessKeySecretKeyRef : K8sMariadbComV1alpha1BackupSpecStorageS3SecretAccessKeySecretKeyRef, default is Undefined, optional
        secret access key secret key ref
    sessionTokenSecretKeyRef : K8sMariadbComV1alpha1BackupSpecStorageS3SessionTokenSecretKeyRef, default is Undefined, optional
        session token secret key ref
    tls : K8sMariadbComV1alpha1BackupSpecStorageS3TLS, default is Undefined, optional
        tls
    """


    accessKeyIdSecretKeyRef?: K8sMariadbComV1alpha1BackupSpecStorageS3AccessKeyIDSecretKeyRef

    bucket: str

    endpoint: str

    prefix?: str

    region?: str

    secretAccessKeySecretKeyRef?: K8sMariadbComV1alpha1BackupSpecStorageS3SecretAccessKeySecretKeyRef

    sessionTokenSecretKeyRef?: K8sMariadbComV1alpha1BackupSpecStorageS3SessionTokenSecretKeyRef

    tls?: K8sMariadbComV1alpha1BackupSpecStorageS3TLS


schema K8sMariadbComV1alpha1BackupSpecStorageS3AccessKeyIDSecretKeyRef:
    r"""
    AccessKeyIdSecretKeyRef is a reference to a Secret key containing the S3 access key id.

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, optional
        name
    """


    key: str

    name?: str = ""


schema K8sMariadbComV1alpha1BackupSpecStorageS3SecretAccessKeySecretKeyRef:
    r"""
    AccessKeyIdSecretKeyRef is a reference to a Secret key containing the S3 secret key.

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, optional
        name
    """


    key: str

    name?: str = ""


schema K8sMariadbComV1alpha1BackupSpecStorageS3SessionTokenSecretKeyRef:
    r"""
    SessionTokenSecretKeyRef is a reference to a Secret key containing the S3 session token.

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, optional
        name
    """


    key: str

    name?: str = ""


schema K8sMariadbComV1alpha1BackupSpecStorageS3TLS:
    r"""
    TLS provides the configuration required to establish TLS connections with S3.

    Attributes
    ----------
    caSecretKeyRef : K8sMariadbComV1alpha1BackupSpecStorageS3TLSCaSecretKeyRef, default is Undefined, optional
        ca secret key ref
    enabled : bool, default is Undefined, optional
        Enabled is a flag to enable TLS.
    """


    caSecretKeyRef?: K8sMariadbComV1alpha1BackupSpecStorageS3TLSCaSecretKeyRef

    enabled?: bool


schema K8sMariadbComV1alpha1BackupSpecStorageS3TLSCaSecretKeyRef:
    r"""
    CASecretKeyRef is a reference to a Secret key containing a CA bundle in PEM format used to establish TLS connections with S3.
    By default, the system trust chain will be used, but you can use this field to add more CAs to the bundle.

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, optional
        name
    """


    key: str

    name?: str = ""


schema K8sMariadbComV1alpha1BackupSpecStorageVolume:
    r"""
    Volume is a Kubernetes volume specification.

    Attributes
    ----------
    csi : K8sMariadbComV1alpha1BackupSpecStorageVolumeCsi, default is Undefined, optional
        csi
    emptyDir : K8sMariadbComV1alpha1BackupSpecStorageVolumeEmptyDir, default is Undefined, optional
        empty dir
    hostPath : K8sMariadbComV1alpha1BackupSpecStorageVolumeHostPath, default is Undefined, optional
        host path
    nfs : K8sMariadbComV1alpha1BackupSpecStorageVolumeNfs, default is Undefined, optional
        nfs
    persistentVolumeClaim : K8sMariadbComV1alpha1BackupSpecStorageVolumePersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    """


    csi?: K8sMariadbComV1alpha1BackupSpecStorageVolumeCsi

    emptyDir?: K8sMariadbComV1alpha1BackupSpecStorageVolumeEmptyDir

    hostPath?: K8sMariadbComV1alpha1BackupSpecStorageVolumeHostPath

    nfs?: K8sMariadbComV1alpha1BackupSpecStorageVolumeNfs

    persistentVolumeClaim?: K8sMariadbComV1alpha1BackupSpecStorageVolumePersistentVolumeClaim


schema K8sMariadbComV1alpha1BackupSpecStorageVolumeCsi:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#csivolumesource-v1-core.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver
    fsType : str, default is Undefined, optional
        fs type
    nodePublishSecretRef : K8sMariadbComV1alpha1BackupSpecStorageVolumeCsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        read only
    volumeAttributes : {str:str}, default is Undefined, optional
        volume attributes
    """


    driver: str

    fsType?: str

    nodePublishSecretRef?: K8sMariadbComV1alpha1BackupSpecStorageVolumeCsiNodePublishSecretRef

    readOnly?: bool

    volumeAttributes?: {str:str}


schema K8sMariadbComV1alpha1BackupSpecStorageVolumeCsiNodePublishSecretRef:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str = ""


schema K8sMariadbComV1alpha1BackupSpecStorageVolumeEmptyDir:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#emptydirvolumesource-v1-core.

    Attributes
    ----------
    medium : str, default is Undefined, optional
        StorageMedium defines ways that storage can be allocated to a volume.
    sizeLimit : int | str, default is Undefined, optional
        size limit
    """


    medium?: str

    sizeLimit?: int | str


    check:
        _regex_match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema K8sMariadbComV1alpha1BackupSpecStorageVolumeHostPath:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#hostpathvolumesource-v1-core

    Attributes
    ----------
    path : str, default is Undefined, required
        path
    $type : str, default is Undefined, optional
        type
    """


    path: str

    $type?: str


schema K8sMariadbComV1alpha1BackupSpecStorageVolumeNfs:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nfsvolumesource-v1-core.

    Attributes
    ----------
    path : str, default is Undefined, required
        path
    readOnly : bool, default is Undefined, optional
        read only
    server : str, default is Undefined, required
        server
    """


    path: str

    readOnly?: bool

    server: str


schema K8sMariadbComV1alpha1BackupSpecStorageVolumePersistentVolumeClaim:
    r"""
    Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#persistentvolumeclaimvolumesource-v1-core.

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claim name
    readOnly : bool, default is Undefined, optional
        read only
    """


    claimName: str

    readOnly?: bool


schema K8sMariadbComV1alpha1BackupSpecTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches
    the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects.
        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys.
        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value.
        Valid operators are Exists and Equal. Defaults to Equal.
        Exists is equivalent to wildcard for value, so that a pod can
        tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be
        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
        it is not set, which means tolerate the taint forever (do not evict). Zero and
        negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to.
        If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema K8sMariadbComV1alpha1BackupStatus:
    r"""
    BackupStatus defines the observed state of Backup

    Attributes
    ----------
    conditions : [K8sMariadbComV1alpha1BackupStatusConditionsItems0], default is Undefined, optional
        Conditions for the Backup object.
    """


    conditions?: [K8sMariadbComV1alpha1BackupStatusConditionsItems0]


schema K8sMariadbComV1alpha1BackupStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


