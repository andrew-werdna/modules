"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema GitRepository:
    r"""
    GitRepository is the Schema for the gitrepositories API

    Attributes
    ----------
    apiVersion : str, default is "promoter.argoproj.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GitRepository", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PromoterArgoprojIoV1alpha1GitRepositorySpec, default is Undefined, optional
        spec
    status : any, default is Undefined, optional
        GitRepositoryStatus defines the observed state of GitRepository
    """


    apiVersion: "promoter.argoproj.io/v1alpha1" = "promoter.argoproj.io/v1alpha1"

    kind: "GitRepository" = "GitRepository"

    metadata?: v1.ObjectMeta

    spec?: PromoterArgoprojIoV1alpha1GitRepositorySpec

    status?: any


schema PromoterArgoprojIoV1alpha1GitRepositorySpec:
    r"""
    GitRepositorySpec defines the desired state of GitRepository

    Attributes
    ----------
    fake : PromoterArgoprojIoV1alpha1GitRepositorySpecFake, default is Undefined, optional
        fake
    forgejo : PromoterArgoprojIoV1alpha1GitRepositorySpecForgejo, default is Undefined, optional
        forgejo
    github : PromoterArgoprojIoV1alpha1GitRepositorySpecGithub, default is Undefined, optional
        github
    gitlab : PromoterArgoprojIoV1alpha1GitRepositorySpecGitlab, default is Undefined, optional
        gitlab
    scmProviderRef : PromoterArgoprojIoV1alpha1GitRepositorySpecScmProviderRef, default is Undefined, required
        scm provider ref
    """


    fake?: PromoterArgoprojIoV1alpha1GitRepositorySpecFake

    forgejo?: PromoterArgoprojIoV1alpha1GitRepositorySpecForgejo

    github?: PromoterArgoprojIoV1alpha1GitRepositorySpecGithub

    gitlab?: PromoterArgoprojIoV1alpha1GitRepositorySpecGitlab

    scmProviderRef: PromoterArgoprojIoV1alpha1GitRepositorySpecScmProviderRef


schema PromoterArgoprojIoV1alpha1GitRepositorySpecFake:
    r"""
    FakeRepo is a placeholder for a repository in the fake SCM provider, used for testing purposes.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the repository.
    owner : str, default is Undefined, required
        Owner is the owner of the repository.
    """


    name: str

    owner: str


schema PromoterArgoprojIoV1alpha1GitRepositorySpecForgejo:
    r"""
    ForgejoRepo is a repository in Forgejo, identified by its owner and name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the repository.
    owner : str, default is Undefined, required
        Owner is the owner of the repository.
    """


    name: str

    owner: str


schema PromoterArgoprojIoV1alpha1GitRepositorySpecGithub:
    r"""
    GitHubRepo is a repository in GitHub, identified by its owner and name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the repository.
    owner : str, default is Undefined, required
        Owner is the owner of the repository, which can be a user or an organization.
    """


    name: str

    owner: str


    check:
        len(name) <= 100
        _regex_match(str(name), r"^[a-zA-Z0-9_\-\.]+$")
        len(owner) <= 39
        _regex_match(str(owner), r"^[a-zA-Z0-9][a-zA-Z0-9\-]*$")


schema PromoterArgoprojIoV1alpha1GitRepositorySpecGitlab:
    r"""
    GitLabRepo is a repository in GitLab, identified by its namespace, name, and project ID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the project slug of the repository.
    namespace : str, default is Undefined, required
        Namespace is the user, group or group with subgroup (e.g. group/subgroup).
    projectId : int, default is Undefined, required
        ProjectID is the ID of the project in GitLab.
    """


    name: str

    namespace: str

    projectId: int


    check:
        _regex_match(str(name), r"^[a-zA-Z0-9_\-\/.]+$")
        _regex_match(str(namespace), r"^[a-zA-Z0-9_\-\/.]+$")


schema PromoterArgoprojIoV1alpha1GitRepositorySpecScmProviderRef:
    r"""
    ScmProviderObjectReference is a reference to a SCM provider object.

    Attributes
    ----------
    kind : str, default is "ScmProvider", required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of the resource being referenced
    """


    kind: "ScmProvider" | "ClusterScmProvider" = "ScmProvider"

    name: str


