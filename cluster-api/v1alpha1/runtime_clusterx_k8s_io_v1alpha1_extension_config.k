"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ExtensionConfig:
    r"""
    ExtensionConfig is the Schema for the ExtensionConfig API.

    Attributes
    ----------
    apiVersion : str, default is "runtime.cluster.x-k8s.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ExtensionConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpec, default is Undefined, optional
        spec
    status : RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "runtime.cluster.x-k8s.io/v1alpha1" = "runtime.cluster.x-k8s.io/v1alpha1"

    kind: "ExtensionConfig" = "ExtensionConfig"

    metadata?: v1.ObjectMeta

    spec?: RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpec

    status?: RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatus


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpec:
    r"""
    spec is the desired state of the ExtensionConfig.

    Attributes
    ----------
    clientConfig : RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecClientConfig, default is Undefined, required
        client config
    namespaceSelector : RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecNamespaceSelector, default is Undefined, optional
        namespace selector
    settings : {str:str}, default is Undefined, optional
        settings defines key value pairs to be passed to all calls
        to all supported RuntimeExtensions.
        Note: Settings can be overridden on the ClusterClass.
    """


    clientConfig: RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecClientConfig

    namespaceSelector?: RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecNamespaceSelector

    settings?: {str:str}


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecClientConfig:
    r"""
    clientConfig defines how to communicate with the Extension server.

    Attributes
    ----------
    caBundle : str, default is Undefined, optional
        caBundle is a PEM encoded CA bundle which will be used to validate the Extension server's server certificate.
    service : RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecClientConfigService, default is Undefined, optional
        service
    url : str, default is Undefined, optional
        url gives the location of the Extension server, in standard URL form
        (`scheme://host:port/path`).
        Note: Exactly one of `url` or `service` must be specified.

        The scheme must be "https".

        The `host` should not refer to a service running in the cluster; use
        the `service` field instead.

        A path is optional, and if present may be any string permissible in
        a URL. If a path is set it will be used as prefix to the hook-specific path.

        Attempting to use a user or basic auth e.g. "user:password@" is not
        allowed. Fragments ("#...") and query parameters ("?...") are not
        allowed either.
    """


    caBundle?: str

    service?: RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecClientConfigService

    url?: str


    check:
        len(caBundle) <= 51200 if caBundle
        len(caBundle) >= 1 if caBundle
        len(url) <= 512 if url
        len(url) >= 1 if url


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecClientConfigService:
    r"""
    service is a reference to the Kubernetes service for the Extension server.
    Note: Exactly one of `url` or `service` must be specified.

    If the Extension server is running within a cluster, then you should use `service`.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the name of the service.
    namespace : str, default is Undefined, required
        namespace is the namespace of the service.
    path : str, default is Undefined, optional
        path is an optional URL path and if present may be any string permissible in
        a URL. If a path is set it will be used as prefix to the hook-specific path.
    port : int, default is Undefined, optional
        port is the port on the service that's hosting the Extension server.
        Defaults to 443.
        Port should be a valid port number (1-65535, inclusive).
    """


    name: str

    namespace: str

    path?: str

    port?: int


    check:
        len(name) <= 63
        len(name) >= 1
        len(namespace) <= 63
        len(namespace) >= 1
        len(path) <= 512 if path
        len(path) >= 1 if path


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecNamespaceSelector:
    r"""
    namespaceSelector decides whether to call the hook for an object based
    on whether the namespace for that object matches the selector.
    Defaults to the empty LabelSelector, which matches all objects.

    Attributes
    ----------
    matchExpressions : [RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigSpecNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatus:
    r"""
    status is the current state of the ExtensionConfig

    Attributes
    ----------
    conditions : [RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusConditionsItems0], default is Undefined, optional
        conditions define the current service state of the ExtensionConfig.
    handlers : [RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusHandlersItems0], default is Undefined, optional
        handlers defines the current ExtensionHandlers supported by an Extension.
    v1beta2 : RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusV1beta2, default is Undefined, optional
        v1beta2
    """


    conditions?: [RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusConditionsItems0]

    handlers?: [RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusHandlersItems0]

    v1beta2?: RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusV1beta2


    check:
        len(handlers) <= 512 if handlers


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        message is a human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        reason is the reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


    check:
        len(message) <= 10240 if message
        len(message) >= 1 if message
        len(reason) <= 256 if reason
        len(reason) >= 1 if reason
        len(severity) <= 32 if severity
        len($type) <= 256
        len($type) >= 1


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusHandlersItems0:
    r"""
    ExtensionHandler specifies the details of a handler for a particular runtime hook registered by an Extension server.

    Attributes
    ----------
    failurePolicy : str, default is Undefined, optional
        failurePolicy defines how failures in calls to the ExtensionHandler should be handled by a client.
        Defaults to Fail if not set.
    name : str, default is Undefined, required
        name is the unique name of the ExtensionHandler.
    requestHook : RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusHandlersItems0RequestHook, default is Undefined, required
        request hook
    timeoutSeconds : int, default is Undefined, optional
        timeoutSeconds defines the timeout duration for client calls to the ExtensionHandler.
        Defaults to 10 is not set.
    """


    failurePolicy?: "Ignore" | "Fail"

    name: str

    requestHook: RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusHandlersItems0RequestHook

    timeoutSeconds?: int


    check:
        len(name) <= 512
        len(name) >= 1


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusHandlersItems0RequestHook:
    r"""
    requestHook defines the versioned runtime hook which this ExtensionHandler serves.

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        apiVersion is the group and version of the Hook.
    hook : str, default is Undefined, required
        hook is the name of the hook.
    """


    apiVersion: str

    hook: str


    check:
        len(apiVersion) <= 512
        len(apiVersion) >= 1
        len(hook) <= 256
        len(hook) >= 1


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusV1beta2:
    r"""
    v1beta2 groups all the fields that will be added or modified in ExtensionConfig's status with the V1Beta2 version.

    Attributes
    ----------
    conditions : [RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusV1beta2ConditionsItems0], default is Undefined, optional
        conditions represents the observations of a ExtensionConfig's current state.
        Known condition types are Discovered, Paused.
    """


    conditions?: [RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusV1beta2ConditionsItems0]


    check:
        len(conditions) <= 32 if conditions


schema RuntimeClusterxK8sIoV1alpha1ExtensionConfigStatusV1beta2ConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


