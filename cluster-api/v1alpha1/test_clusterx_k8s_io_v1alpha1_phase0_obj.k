"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Phase0Obj:
    r"""
    Phase0Obj defines an object with clusterv1.Conditions.

    Attributes
    ----------
    apiVersion : str, default is "test.cluster.x-k8s.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Phase0Obj", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : TestClusterxK8sIoV1alpha1Phase0ObjSpec, default is Undefined, optional
        spec
    status : TestClusterxK8sIoV1alpha1Phase0ObjStatus, default is Undefined, optional
        status
    """


    apiVersion: "test.cluster.x-k8s.io/v1alpha1" = "test.cluster.x-k8s.io/v1alpha1"

    kind: "Phase0Obj" = "Phase0Obj"

    metadata?: v1.ObjectMeta

    spec?: TestClusterxK8sIoV1alpha1Phase0ObjSpec

    status?: TestClusterxK8sIoV1alpha1Phase0ObjStatus


schema TestClusterxK8sIoV1alpha1Phase0ObjSpec:
    r"""
    Phase0ObjSpec defines the spec of a Phase0Obj.

    Attributes
    ----------
    foo : str, default is Undefined, optional
        foo
    """


    foo?: str


schema TestClusterxK8sIoV1alpha1Phase0ObjStatus:
    r"""
    Phase0ObjStatus defines the status of a Phase0Obj.

    Attributes
    ----------
    bar : str, default is Undefined, optional
        bar
    conditions : [TestClusterxK8sIoV1alpha1Phase0ObjStatusConditionsItems0], default is Undefined, optional
        Conditions provide observations of the operational state of a Cluster API resource.
    """


    bar?: str

    conditions?: [TestClusterxK8sIoV1alpha1Phase0ObjStatusConditionsItems0]


schema TestClusterxK8sIoV1alpha1Phase0ObjStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        message is a human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        reason is the reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


    check:
        len(message) <= 10240 if message
        len(message) >= 1 if message
        len(reason) <= 256 if reason
        len(reason) >= 1 if reason
        len(severity) <= 32 if severity
        len($type) <= 256
        len($type) >= 1


