"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema KubeadmConfigTemplate:
    r"""
    KubeadmConfigTemplate is the Schema for the kubeadmconfigtemplates API.

    Attributes
    ----------
    apiVersion : str, default is "bootstrap.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "KubeadmConfigTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpec, default is Undefined, optional
        spec
    """


    apiVersion: "bootstrap.cluster.x-k8s.io/v1beta1" = "bootstrap.cluster.x-k8s.io/v1beta1"

    kind: "KubeadmConfigTemplate" = "KubeadmConfigTemplate"

    metadata?: v1.ObjectMeta

    spec?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpec


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpec:
    r"""
    KubeadmConfigTemplateSpec defines the desired state of KubeadmConfigTemplate.

    Attributes
    ----------
    template : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplate, default is Undefined, required
        template
    """


    template: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplate


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplate:
    r"""
    KubeadmConfigTemplateResource defines the Template structure.

    Attributes
    ----------
    metadata : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateMetadata, default is Undefined, optional
        metadata
    spec : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpec, default is Undefined, optional
        spec
    """


    metadata?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateMetadata

    spec?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpec


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateMetadata:
    r"""
    Standard object's metadata.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: http://kubernetes.io/docs/user-guide/labels
    """


    annotations?: {str:str}

    labels?: {str:str}


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpec:
    r"""
    KubeadmConfigSpec defines the desired state of KubeadmConfig.
    Either ClusterConfiguration and InitConfiguration should be defined or the JoinConfiguration should be defined.

    Attributes
    ----------
    clusterConfiguration : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfiguration, default is Undefined, optional
        cluster configuration
    diskSetup : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecDiskSetup, default is Undefined, optional
        disk setup
    files : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecFilesItems0], default is Undefined, optional
        files specifies extra files to be passed to user_data upon creation.
    format : str, default is Undefined, optional
        format specifies the output format of the bootstrap data
    ignition : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecIgnition, default is Undefined, optional
        ignition
    initConfiguration : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfiguration, default is Undefined, optional
        init configuration
    joinConfiguration : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfiguration, default is Undefined, optional
        join configuration
    mounts : [[str]], default is Undefined, optional
        mounts specifies a list of mount points to be setup.
    ntp : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecNtp, default is Undefined, optional
        ntp
    postKubeadmCommands : [str], default is Undefined, optional
        postKubeadmCommands specifies extra commands to run after kubeadm runs
    preKubeadmCommands : [str], default is Undefined, optional
        preKubeadmCommands specifies extra commands to run before kubeadm runs
    useExperimentalRetryJoin : bool, default is Undefined, optional
        useExperimentalRetryJoin replaces a basic kubeadm command with a shell
        script with retries for joins.

        This is meant to be an experimental temporary workaround on some environments
        where joins fail due to timing (and other issues). The long term goal is to add retries to
        kubeadm proper and use that functionality.

        This will add about 40KB to userdata

        For more information, refer to https://github.com/kubernetes-sigs/cluster-api/pull/2763#discussion_r397306055.

        Deprecated: This experimental fix is no longer needed and this field will be removed in a future release.
        When removing also remove from staticcheck exclude-rules for SA1019 in golangci.yml
    users : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecUsersItems0], default is Undefined, optional
        users specifies extra users to add
    verbosity : int, default is Undefined, optional
        verbosity is the number for the kubeadm log level verbosity.
        It overrides the `--v` flag in kubeadm commands.
    """


    clusterConfiguration?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfiguration

    diskSetup?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecDiskSetup

    files?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecFilesItems0]

    format?: "cloud-config" | "ignition"

    ignition?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecIgnition

    initConfiguration?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfiguration

    joinConfiguration?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfiguration

    mounts?: [[str]]

    ntp?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecNtp

    postKubeadmCommands?: [str]

    preKubeadmCommands?: [str]

    useExperimentalRetryJoin?: bool

    users?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecUsersItems0]

    verbosity?: int


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfiguration:
    r"""
    clusterConfiguration along with InitConfiguration are the configurations necessary for the init command

    Attributes
    ----------
    apiServer : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServer, default is Undefined, optional
        api server
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object.
        Servers should convert recognized schemas to the latest internal value, and
        may reject unrecognized values.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    certificatesDir : str, default is Undefined, optional
        certificatesDir specifies where to store or look for all required certificates.
        NB: if not provided, this will default to `/etc/kubernetes/pki`
    clusterName : str, default is Undefined, optional
        The cluster name
    controlPlaneEndpoint : str, default is Undefined, optional
        controlPlaneEndpoint sets a stable IP address or DNS name for the control plane; it
        can be a valid IP address or a RFC-1123 DNS subdomain, both with optional TCP port.
        In case the ControlPlaneEndpoint is not specified, the AdvertiseAddress + BindPort
        are used; in case the ControlPlaneEndpoint is specified but without a TCP port,
        the BindPort is used.
        Possible usages are:
        e.g. In a cluster with more than one control plane instances, this field should be
        assigned the address of the external load balancer in front of the
        control plane instances.
        e.g.  in environments with enforced node recycling, the ControlPlaneEndpoint
        could be used for assigning a stable DNS to the control plane.
        NB: This value defaults to the first value in the Cluster object status.apiEndpoints array.
    controllerManager : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManager, default is Undefined, optional
        controller manager
    dns : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationDNS, default is Undefined, optional
        dns
    etcd : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcd, default is Undefined, optional
        etcd
    featureGates : {str:bool}, default is Undefined, optional
        featureGates enabled by the user.
    imageRepository : str, default is Undefined, optional
        imageRepository sets the container registry to pull images from.
        * If not set, the default registry of kubeadm will be used, i.e.
          * registry.k8s.io (new registry): >= v1.22.17, >= v1.23.15, >= v1.24.9, >= v1.25.0
          * k8s.gcr.io (old registry): all older versions
          Please note that when imageRepository is not set we don't allow upgrades to
          versions >= v1.22.0 which use the old registry (k8s.gcr.io). Please use
          a newer patch version with the new registry instead (i.e. >= v1.22.17,
          >= v1.23.15, >= v1.24.9, >= v1.25.0).
        * If the version is a CI build (kubernetes version starts with `ci/` or `ci-cross/`)
         `gcr.io/k8s-staging-ci-images` will be used as a default for control plane components
          and for kube-proxy, while `registry.k8s.io` will be used for all the other images.
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents.
        Servers may infer this from the endpoint the client submits requests to.
        Cannot be updated.
        In CamelCase.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    kubernetesVersion : str, default is Undefined, optional
        kubernetesVersion is the target version of the control plane.
        NB: This value defaults to the Machine object spec.version
    networking : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationNetworking, default is Undefined, optional
        networking
    scheduler : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationScheduler, default is Undefined, optional
        scheduler
    """


    apiServer?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServer

    apiVersion?: str

    certificatesDir?: str

    clusterName?: str

    controlPlaneEndpoint?: str

    controllerManager?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManager

    dns?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationDNS

    etcd?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcd

    featureGates?: {str:bool}

    imageRepository?: str

    kind?: str

    kubernetesVersion?: str

    networking?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationNetworking

    scheduler?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationScheduler


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServer:
    r"""
    apiServer contains extra settings for the API server control plane component

    Attributes
    ----------
    certSANs : [str], default is Undefined, optional
        certSANs sets extra Subject Alternative Names for the API Server signing cert.
    extraArgs : {str:str}, default is Undefined, optional
        extraArgs is an extra set of flags to pass to the control plane component.
    extraEnvs : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0], default is Undefined, optional
        extraEnvs is an extra set of environment variables to pass to the control plane component.
        Environment variables passed using ExtraEnvs will override any existing environment variables, or *_proxy environment variables that kubeadm adds by default.
        This option takes effect only on Kubernetes >=1.31.0.
    extraVolumes : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraVolumesItems0], default is Undefined, optional
        extraVolumes is an extra set of host volumes, mounted to the control plane component.
    timeoutForControlPlane : str, default is Undefined, optional
        timeoutForControlPlane controls the timeout that we use for API server to appear
    """


    certSANs?: [str]

    extraArgs?: {str:str}

    extraEnvs?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0]

    extraVolumes?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraVolumesItems0]

    timeoutForControlPlane?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFrom


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromConfigMapKeyRef

    fieldRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromFieldRef

    resourceFieldRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromResourceFieldRef

    secretKeyRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromSecretKeyRef


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraEnvsItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationAPIServerExtraVolumesItems0:
    r"""
    HostPathMount contains elements describing volumes that are mounted from the
    host.

    Attributes
    ----------
    hostPath : str, default is Undefined, required
        hostPath is the path in the host that will be mounted inside
        the pod.
    mountPath : str, default is Undefined, required
        mountPath is the path inside the pod where hostPath will be mounted.
    name : str, default is Undefined, required
        name of the volume inside the pod template.
    pathType : str, default is Undefined, optional
        pathType is the type of the HostPath.
    readOnly : bool, default is Undefined, optional
        readOnly controls write access to the volume
    """


    hostPath: str

    mountPath: str

    name: str

    pathType?: str

    readOnly?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManager:
    r"""
    controllerManager contains extra settings for the controller manager control plane component

    Attributes
    ----------
    extraArgs : {str:str}, default is Undefined, optional
        extraArgs is an extra set of flags to pass to the control plane component.
    extraEnvs : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0], default is Undefined, optional
        extraEnvs is an extra set of environment variables to pass to the control plane component.
        Environment variables passed using ExtraEnvs will override any existing environment variables, or *_proxy environment variables that kubeadm adds by default.
        This option takes effect only on Kubernetes >=1.31.0.
    extraVolumes : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraVolumesItems0], default is Undefined, optional
        extraVolumes is an extra set of host volumes, mounted to the control plane component.
    """


    extraArgs?: {str:str}

    extraEnvs?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0]

    extraVolumes?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraVolumesItems0]


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFrom


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromConfigMapKeyRef

    fieldRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromFieldRef

    resourceFieldRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromResourceFieldRef

    secretKeyRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromSecretKeyRef


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraEnvsItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationControllerManagerExtraVolumesItems0:
    r"""
    HostPathMount contains elements describing volumes that are mounted from the
    host.

    Attributes
    ----------
    hostPath : str, default is Undefined, required
        hostPath is the path in the host that will be mounted inside
        the pod.
    mountPath : str, default is Undefined, required
        mountPath is the path inside the pod where hostPath will be mounted.
    name : str, default is Undefined, required
        name of the volume inside the pod template.
    pathType : str, default is Undefined, optional
        pathType is the type of the HostPath.
    readOnly : bool, default is Undefined, optional
        readOnly controls write access to the volume
    """


    hostPath: str

    mountPath: str

    name: str

    pathType?: str

    readOnly?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationDNS:
    r"""
    dns defines the options for the DNS add-on installed in the cluster.

    Attributes
    ----------
    imageRepository : str, default is Undefined, optional
        imageRepository sets the container registry to pull images from.
        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
    imageTag : str, default is Undefined, optional
        imageTag allows to specify a tag for the image.
        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
    """


    imageRepository?: str

    imageTag?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcd:
    r"""
    etcd holds configuration for etcd.
    NB: This value defaults to a Local (stacked) etcd

    Attributes
    ----------
    external : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdExternal, default is Undefined, optional
        external
    local : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocal, default is Undefined, optional
        local
    """


    external?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdExternal

    local?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocal


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdExternal:
    r"""
    external describes how to connect to an external etcd cluster
    Local and External are mutually exclusive

    Attributes
    ----------
    caFile : str, default is Undefined, required
        caFile is an SSL Certificate Authority file used to secure etcd communication.
        Required if using a TLS connection.
    certFile : str, default is Undefined, required
        certFile is an SSL certification file used to secure etcd communication.
        Required if using a TLS connection.
    endpoints : [str], default is Undefined, required
        endpoints of etcd members. Required for ExternalEtcd.
    keyFile : str, default is Undefined, required
        keyFile is an SSL key file used to secure etcd communication.
        Required if using a TLS connection.
    """


    caFile: str

    certFile: str

    endpoints: [str]

    keyFile: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocal:
    r"""
    local provides configuration knobs for configuring the local etcd instance
    Local and External are mutually exclusive

    Attributes
    ----------
    dataDir : str, default is Undefined, optional
        dataDir is the directory etcd will place its data.
        Defaults to "/var/lib/etcd".
    extraArgs : {str:str}, default is Undefined, optional
        extraArgs are extra arguments provided to the etcd binary
        when run inside a static pod.
    extraEnvs : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0], default is Undefined, optional
        extraEnvs is an extra set of environment variables to pass to the control plane component.
        Environment variables passed using ExtraEnvs will override any existing environment variables, or *_proxy environment variables that kubeadm adds by default.
        This option takes effect only on Kubernetes >=1.31.0.
    imageRepository : str, default is Undefined, optional
        imageRepository sets the container registry to pull images from.
        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
    imageTag : str, default is Undefined, optional
        imageTag allows to specify a tag for the image.
        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
    peerCertSANs : [str], default is Undefined, optional
        peerCertSANs sets extra Subject Alternative Names for the etcd peer signing cert.
    serverCertSANs : [str], default is Undefined, optional
        serverCertSANs sets extra Subject Alternative Names for the etcd server signing cert.
    """


    dataDir?: str

    extraArgs?: {str:str}

    extraEnvs?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0]

    imageRepository?: str

    imageTag?: str

    peerCertSANs?: [str]

    serverCertSANs?: [str]


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFrom


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromConfigMapKeyRef

    fieldRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromFieldRef

    resourceFieldRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromResourceFieldRef

    secretKeyRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromSecretKeyRef


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationEtcdLocalExtraEnvsItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationNetworking:
    r"""
    networking holds configuration for the networking topology of the cluster.
    NB: This value defaults to the Cluster object spec.clusterNetwork.

    Attributes
    ----------
    dnsDomain : str, default is Undefined, optional
        dnsDomain is the dns domain used by k8s services. Defaults to "cluster.local".
    podSubnet : str, default is Undefined, optional
        podSubnet is the subnet used by pods.
        If unset, the API server will not allocate CIDR ranges for every node.
        Defaults to a comma-delimited string of the Cluster object's spec.clusterNetwork.services.cidrBlocks if that is set
    serviceSubnet : str, default is Undefined, optional
        serviceSubnet is the subnet used by k8s services.
        Defaults to a comma-delimited string of the Cluster object's spec.clusterNetwork.pods.cidrBlocks, or
        to "10.96.0.0/12" if that's unset.
    """


    dnsDomain?: str

    podSubnet?: str

    serviceSubnet?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationScheduler:
    r"""
    scheduler contains extra settings for the scheduler control plane component

    Attributes
    ----------
    extraArgs : {str:str}, default is Undefined, optional
        extraArgs is an extra set of flags to pass to the control plane component.
    extraEnvs : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0], default is Undefined, optional
        extraEnvs is an extra set of environment variables to pass to the control plane component.
        Environment variables passed using ExtraEnvs will override any existing environment variables, or *_proxy environment variables that kubeadm adds by default.
        This option takes effect only on Kubernetes >=1.31.0.
    extraVolumes : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraVolumesItems0], default is Undefined, optional
        extraVolumes is an extra set of host volumes, mounted to the control plane component.
    """


    extraArgs?: {str:str}

    extraEnvs?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0]

    extraVolumes?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraVolumesItems0]


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFrom


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromConfigMapKeyRef

    fieldRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromFieldRef

    resourceFieldRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromResourceFieldRef

    secretKeyRef?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromSecretKeyRef


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraEnvsItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecClusterConfigurationSchedulerExtraVolumesItems0:
    r"""
    HostPathMount contains elements describing volumes that are mounted from the
    host.

    Attributes
    ----------
    hostPath : str, default is Undefined, required
        hostPath is the path in the host that will be mounted inside
        the pod.
    mountPath : str, default is Undefined, required
        mountPath is the path inside the pod where hostPath will be mounted.
    name : str, default is Undefined, required
        name of the volume inside the pod template.
    pathType : str, default is Undefined, optional
        pathType is the type of the HostPath.
    readOnly : bool, default is Undefined, optional
        readOnly controls write access to the volume
    """


    hostPath: str

    mountPath: str

    name: str

    pathType?: str

    readOnly?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecDiskSetup:
    r"""
    diskSetup specifies options for the creation of partition tables and file systems on devices.

    Attributes
    ----------
    filesystems : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecDiskSetupFilesystemsItems0], default is Undefined, optional
        filesystems specifies the list of file systems to setup.
    partitions : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecDiskSetupPartitionsItems0], default is Undefined, optional
        partitions specifies the list of the partitions to setup.
    """


    filesystems?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecDiskSetupFilesystemsItems0]

    partitions?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecDiskSetupPartitionsItems0]


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecDiskSetupFilesystemsItems0:
    r"""
    Filesystem defines the file systems to be created.

    Attributes
    ----------
    device : str, default is Undefined, required
        device specifies the device name
    extraOpts : [str], default is Undefined, optional
        extraOpts defined extra options to add to the command for creating the file system.
    filesystem : str, default is Undefined, required
        filesystem specifies the file system type.
    label : str, default is Undefined, required
        label specifies the file system label to be used. If set to None, no label is used.
    overwrite : bool, default is Undefined, optional
        overwrite defines whether or not to overwrite any existing filesystem.
        If true, any pre-existing file system will be destroyed. Use with Caution.
    partition : str, default is Undefined, optional
        partition specifies the partition to use. The valid options are: "auto|any", "auto", "any", "none", and <NUM>, where NUM is the actual partition number.
    replaceFS : str, default is Undefined, optional
        replaceFS is a special directive, used for Microsoft Azure that instructs cloud-init to replace a file system of <FS_TYPE>.
        NOTE: unless you define a label, this requires the use of the 'any' partition directive.
    """


    device: str

    extraOpts?: [str]

    filesystem: str

    label: str

    overwrite?: bool

    partition?: str

    replaceFS?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecDiskSetupPartitionsItems0:
    r"""
    Partition defines how to create and layout a partition.

    Attributes
    ----------
    device : str, default is Undefined, required
        device is the name of the device.
    layout : bool, default is Undefined, required
        layout specifies the device layout.
        If it is true, a single partition will be created for the entire device.
        When layout is false, it means don't partition or ignore existing partitioning.
    overwrite : bool, default is Undefined, optional
        overwrite describes whether to skip checks and create the partition if a partition or filesystem is found on the device.
        Use with caution. Default is 'false'.
    tableType : str, default is Undefined, optional
        tableType specifies the tupe of partition table. The following are supported:
        'mbr': default and setups a MS-DOS partition table
        'gpt': setups a GPT partition table
    """


    device: str

    layout: bool

    overwrite?: bool

    tableType?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecFilesItems0:
    r"""
    File defines the input for generating write_files in cloud-init.

    Attributes
    ----------
    append : bool, default is Undefined, optional
        append specifies whether to append Content to existing file if Path exists.
    content : str, default is Undefined, optional
        content is the actual content of the file.
    contentFrom : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecFilesItems0ContentFrom, default is Undefined, optional
        content from
    encoding : str, default is Undefined, optional
        encoding specifies the encoding of the file contents.
    owner : str, default is Undefined, optional
        owner specifies the ownership of the file, e.g. "root:root".
    path : str, default is Undefined, required
        path specifies the full path on disk where to store the file.
    permissions : str, default is Undefined, optional
        permissions specifies the permissions to assign to the file, e.g. "0640".
    """


    append?: bool

    content?: str

    contentFrom?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecFilesItems0ContentFrom

    encoding?: "base64" | "gzip" | "gzip+base64"

    owner?: str

    path: str

    permissions?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecFilesItems0ContentFrom:
    r"""
    contentFrom is a referenced source of content to populate the file.

    Attributes
    ----------
    secret : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecFilesItems0ContentFromSecret, default is Undefined, required
        secret
    """


    secret: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecFilesItems0ContentFromSecret


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecFilesItems0ContentFromSecret:
    r"""
    secret represents a secret that should populate this file.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key in the secret's data map for this value.
    name : str, default is Undefined, required
        name of the secret in the KubeadmBootstrapConfig's namespace to use.
    """


    key: str

    name: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecIgnition:
    r"""
    ignition contains Ignition specific configuration.

    Attributes
    ----------
    containerLinuxConfig : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecIgnitionContainerLinuxConfig, default is Undefined, optional
        container linux config
    """


    containerLinuxConfig?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecIgnitionContainerLinuxConfig


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecIgnitionContainerLinuxConfig:
    r"""
    containerLinuxConfig contains CLC specific configuration.

    Attributes
    ----------
    additionalConfig : str, default is Undefined, optional
        additionalConfig contains additional configuration to be merged with the Ignition
        configuration generated by the bootstrapper controller. More info: https://coreos.github.io/ignition/operator-notes/#config-merging

        The data format is documented here: https://kinvolk.io/docs/flatcar-container-linux/latest/provisioning/cl-config/
    strict : bool, default is Undefined, optional
        strict controls if AdditionalConfig should be strictly parsed. If so, warnings are treated as errors.
    """


    additionalConfig?: str

    strict?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfiguration:
    r"""
    initConfiguration along with ClusterConfiguration are the configurations necessary for the init command

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object.
        Servers should convert recognized schemas to the latest internal value, and
        may reject unrecognized values.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    bootstrapTokens : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationBootstrapTokensItems0], default is Undefined, optional
        bootstrapTokens is respected at `kubeadm init` time and describes a set of Bootstrap Tokens to create.
        This information IS NOT uploaded to the kubeadm cluster configmap, partly because of its sensitive nature
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents.
        Servers may infer this from the endpoint the client submits requests to.
        Cannot be updated.
        In CamelCase.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    localAPIEndpoint : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationLocalAPIEndpoint, default is Undefined, optional
        local API endpoint
    nodeRegistration : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationNodeRegistration, default is Undefined, optional
        node registration
    patches : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationPatches, default is Undefined, optional
        patches
    skipPhases : [str], default is Undefined, optional
        skipPhases is a list of phases to skip during command execution.
        The list of phases can be obtained with the "kubeadm init --help" command.
        This option takes effect only on Kubernetes >=1.22.0.
    """


    apiVersion?: str

    bootstrapTokens?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationBootstrapTokensItems0]

    kind?: str

    localAPIEndpoint?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationLocalAPIEndpoint

    nodeRegistration?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationNodeRegistration

    patches?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationPatches

    skipPhases?: [str]


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationBootstrapTokensItems0:
    r"""
    BootstrapToken describes one bootstrap token, stored as a Secret in the cluster.

    Attributes
    ----------
    description : str, default is Undefined, optional
        description sets a human-friendly message why this token exists and what it's used
        for, so other administrators can know its purpose.
    expires : str, default is Undefined, optional
        expires specifies the timestamp when this token expires. Defaults to being set
        dynamically at runtime based on the TTL. Expires and TTL are mutually exclusive.
    groups : [str], default is Undefined, optional
        groups specifies the extra groups that this token will authenticate as when/if
        used for authentication
    token : str, default is Undefined, required
        token is used for establishing bidirectional trust between nodes and control-planes.
        Used for joining nodes in the cluster.
    ttl : str, default is Undefined, optional
        ttl defines the time to live for this token. Defaults to 24h.
        Expires and TTL are mutually exclusive.
    usages : [str], default is Undefined, optional
        usages describes the ways in which this token can be used. Can by default be used
        for establishing bidirectional trust, but that can be changed here.
    """


    description?: str

    expires?: str

    groups?: [str]

    token: str

    ttl?: str

    usages?: [str]


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationLocalAPIEndpoint:
    r"""
    localAPIEndpoint represents the endpoint of the API server instance that's deployed on this control plane node
    In HA setups, this differs from ClusterConfiguration.ControlPlaneEndpoint in the sense that ControlPlaneEndpoint
    is the global endpoint for the cluster, which then loadbalances the requests to each individual API server. This
    configuration object lets you customize what IP/DNS name and port the local API server advertises it's accessible
    on. By default, kubeadm tries to auto-detect the IP of the default interface and use that, but in case that process
    fails you may set the desired value here.

    Attributes
    ----------
    advertiseAddress : str, default is Undefined, optional
        advertiseAddress sets the IP address for the API server to advertise.
    bindPort : int, default is Undefined, optional
        bindPort sets the secure port for the API Server to bind to.
        Defaults to 6443.
    """


    advertiseAddress?: str

    bindPort?: int


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationNodeRegistration:
    r"""
    nodeRegistration holds fields that relate to registering the new control-plane node to the cluster.
    When used in the context of control plane nodes, NodeRegistration should remain consistent
    across both InitConfiguration and JoinConfiguration

    Attributes
    ----------
    criSocket : str, default is Undefined, optional
        criSocket is used to retrieve container runtime info. This information will be annotated to the Node API object, for later re-use
    ignorePreflightErrors : [str], default is Undefined, optional
        ignorePreflightErrors provides a slice of pre-flight errors to be ignored when the current node is registered.
    imagePullPolicy : str, default is Undefined, optional
        imagePullPolicy specifies the policy for image pulling
        during kubeadm "init" and "join" operations. The value of
        this field must be one of "Always", "IfNotPresent" or
        "Never". Defaults to "IfNotPresent". This can be used only
        with Kubernetes version equal to 1.22 and later.
    imagePullSerial : bool, default is Undefined, optional
        imagePullSerial specifies if image pulling performed by kubeadm must be done serially or in parallel.
        This option takes effect only on Kubernetes >=1.31.0.
        Default: true (defaulted in kubeadm)
    kubeletExtraArgs : {str:str}, default is Undefined, optional
        kubeletExtraArgs passes through extra arguments to the kubelet. The arguments here are passed to the kubelet command line via the environment file
        kubeadm writes at runtime for the kubelet to source. This overrides the generic base-level configuration in the kubelet-config-1.X ConfigMap
        Flags have higher priority when parsing. These values are local and specific to the node kubeadm is executing on.
    name : str, default is Undefined, optional
        name is the `.Metadata.Name` field of the Node API object that will be created in this `kubeadm init` or `kubeadm join` operation.
        This field is also used in the CommonName field of the kubelet's client certificate to the API server.
        Defaults to the hostname of the node if not provided.
    taints : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationNodeRegistrationTaintsItems0], default is Undefined, optional
        taints specifies the taints the Node API object should be registered with. If this field is unset, i.e. nil, in the `kubeadm init` process
        it will be defaulted to []v1.Taint{'node-role.kubernetes.io/master=""'}. If you don't want to taint your control-plane node, set this field to an
        empty slice, i.e. `taints: []` in the YAML file. This field is solely used for Node registration.
    """


    criSocket?: str

    ignorePreflightErrors?: [str]

    imagePullPolicy?: "Always" | "IfNotPresent" | "Never"

    imagePullSerial?: bool

    kubeletExtraArgs?: {str:str}

    name?: str

    taints?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationNodeRegistrationTaintsItems0]


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationNodeRegistrationTaintsItems0:
    r"""
    The node this Taint is attached to has the "effect" on
    any pod that does not tolerate the Taint.

    Attributes
    ----------
    effect : str, default is Undefined, required
        Required. The effect of the taint on pods
        that do not tolerate the taint.
        Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, required
        Required. The taint key to be applied to a node.
    timeAdded : str, default is Undefined, optional
        TimeAdded represents the time at which the taint was added.
        It is only written for NoExecute taints.
    value : str, default is Undefined, optional
        The taint value corresponding to the taint key.
    """


    effect: str

    key: str

    timeAdded?: str

    value?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecInitConfigurationPatches:
    r"""
    patches contains options related to applying patches to components deployed by kubeadm during
    "kubeadm init". The minimum kubernetes version needed to support Patches is v1.22

    Attributes
    ----------
    directory : str, default is Undefined, optional
        directory is a path to a directory that contains files named "target[suffix][+patchtype].extension".
        For example, "kube-apiserver0+merge.yaml" or just "etcd.json". "target" can be one of
        "kube-apiserver", "kube-controller-manager", "kube-scheduler", "etcd". "patchtype" can be one
        of "strategic" "merge" or "json" and they match the patch formats supported by kubectl.
        The default "patchtype" is "strategic". "extension" must be either "json" or "yaml".
        "suffix" is an optional string that can be used to determine which patches are applied
        first alpha-numerically.
        These files can be written into the target directory via KubeadmConfig.Files which
        specifies additional files to be created on the machine, either with content inline or
        by referencing a secret.
    """


    directory?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfiguration:
    r"""
    joinConfiguration is the kubeadm configuration for the join command

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object.
        Servers should convert recognized schemas to the latest internal value, and
        may reject unrecognized values.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    caCertPath : str, default is Undefined, optional
        caCertPath is the path to the SSL certificate authority used to
        secure comunications between node and control-plane.
        Defaults to "/etc/kubernetes/pki/ca.crt".
    controlPlane : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationControlPlane, default is Undefined, optional
        control plane
    discovery : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscovery, default is Undefined, optional
        discovery
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents.
        Servers may infer this from the endpoint the client submits requests to.
        Cannot be updated.
        In CamelCase.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    nodeRegistration : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationNodeRegistration, default is Undefined, optional
        node registration
    patches : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationPatches, default is Undefined, optional
        patches
    skipPhases : [str], default is Undefined, optional
        skipPhases is a list of phases to skip during command execution.
        The list of phases can be obtained with the "kubeadm init --help" command.
        This option takes effect only on Kubernetes >=1.22.0.
    """


    apiVersion?: str

    caCertPath?: str

    controlPlane?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationControlPlane

    discovery?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscovery

    kind?: str

    nodeRegistration?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationNodeRegistration

    patches?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationPatches

    skipPhases?: [str]


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationControlPlane:
    r"""
    controlPlane defines the additional control plane instance to be deployed on the joining node.
    If nil, no additional control plane instance will be deployed.

    Attributes
    ----------
    localAPIEndpoint : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationControlPlaneLocalAPIEndpoint, default is Undefined, optional
        local API endpoint
    """


    localAPIEndpoint?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationControlPlaneLocalAPIEndpoint


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationControlPlaneLocalAPIEndpoint:
    r"""
    localAPIEndpoint represents the endpoint of the API server instance to be deployed on this node.

    Attributes
    ----------
    advertiseAddress : str, default is Undefined, optional
        advertiseAddress sets the IP address for the API server to advertise.
    bindPort : int, default is Undefined, optional
        bindPort sets the secure port for the API Server to bind to.
        Defaults to 6443.
    """


    advertiseAddress?: str

    bindPort?: int


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscovery:
    r"""
    discovery specifies the options for the kubelet to use during the TLS Bootstrap process

    Attributes
    ----------
    bootstrapToken : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryBootstrapToken, default is Undefined, optional
        bootstrap token
    file : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFile, default is Undefined, optional
        file
    timeout : str, default is Undefined, optional
        timeout modifies the discovery timeout
    tlsBootstrapToken : str, default is Undefined, optional
        tlsBootstrapToken is a token used for TLS bootstrapping.
        If .BootstrapToken is set, this field is defaulted to .BootstrapToken.Token, but can be overridden.
        If .File is set, this field **must be set** in case the KubeConfigFile does not contain any other authentication information
    """


    bootstrapToken?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryBootstrapToken

    file?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFile

    timeout?: str

    tlsBootstrapToken?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryBootstrapToken:
    r"""
    bootstrapToken is used to set the options for bootstrap token based discovery
    BootstrapToken and File are mutually exclusive

    Attributes
    ----------
    apiServerEndpoint : str, default is Undefined, optional
        apiServerEndpoint is an IP or domain name to the API server from which info will be fetched.
    caCertHashes : [str], default is Undefined, optional
        caCertHashes specifies a set of public key pins to verify
        when token-based discovery is used. The root CA found during discovery
        must match one of these values. Specifying an empty set disables root CA
        pinning, which can be unsafe. Each hash is specified as "<type>:<value>",
        where the only currently supported type is "sha256". This is a hex-encoded
        SHA-256 hash of the Subject Public Key Info (SPKI) object in DER-encoded
        ASN.1. These hashes can be calculated using, for example, OpenSSL:
        openssl x509 -pubkey -in ca.crt openssl rsa -pubin -outform der 2>&/dev/null | openssl dgst -sha256 -hex
    token : str, default is Undefined, required
        token is a token used to validate cluster information
        fetched from the control-plane.
    unsafeSkipCAVerification : bool, default is Undefined, optional
        unsafeSkipCAVerification allows token-based discovery
        without CA verification via CACertHashes. This can weaken
        the security of kubeadm since other nodes can impersonate the control-plane.
    """


    apiServerEndpoint?: str

    caCertHashes?: [str]

    token: str

    unsafeSkipCAVerification?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFile:
    r"""
    file is used to specify a file or URL to a kubeconfig file from which to load cluster information
    BootstrapToken and File are mutually exclusive

    Attributes
    ----------
    kubeConfig : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfig, default is Undefined, optional
        kube config
    kubeConfigPath : str, default is Undefined, required
        kubeConfigPath is used to specify the actual file path or URL to the kubeconfig file from which to load cluster information
    """


    kubeConfig?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfig

    kubeConfigPath: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfig:
    r"""
    kubeConfig is used (optionally) to generate a KubeConfig based on the KubeadmConfig's information.
    The file is generated at the path specified in KubeConfigPath.

    Host address (server field) information is automatically populated based on the Cluster's ControlPlaneEndpoint.
    Certificate Authority (certificate-authority-data field) is gathered from the cluster's CA secret.

    Attributes
    ----------
    cluster : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigCluster, default is Undefined, optional
        cluster
    user : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUser, default is Undefined, required
        user
    """


    cluster?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigCluster

    user: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUser


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigCluster:
    r"""
    cluster contains information about how to communicate with the kubernetes cluster.

    By default the following fields are automatically populated:
    - Server with the Cluster's ControlPlaneEndpoint.
    - CertificateAuthorityData with the Cluster's CA certificate.

    Attributes
    ----------
    certificateAuthorityData : str, default is Undefined, optional
        certificateAuthorityData contains PEM-encoded certificate authority certificates.

        Defaults to the Cluster's CA certificate if empty.
    insecureSkipTLSVerify : bool, default is Undefined, optional
        insecureSkipTLSVerify skips the validity check for the server's certificate. This will make your HTTPS connections insecure.
    proxyURL : str, default is Undefined, optional
        proxyURL is the URL to the proxy to be used for all requests made by this
        client. URLs with "http", "https", and "socks5" schemes are supported.  If
        this configuration is not provided or the empty string, the client
        attempts to construct a proxy configuration from http_proxy and
        https_proxy environment variables. If these environment variables are not
        set, the client does not attempt to proxy requests.

        socks5 proxying does not currently support spdy streaming endpoints (exec,
        attach, port forward).
    server : str, default is Undefined, optional
        server is the address of the kubernetes cluster (https://hostname:port).

        Defaults to https:// + Cluster.Spec.ControlPlaneEndpoint.
    tlsServerName : str, default is Undefined, optional
        tlsServerName is used to check server certificate. If TLSServerName is empty, the hostname used to contact the server is used.
    """


    certificateAuthorityData?: str

    insecureSkipTLSVerify?: bool

    proxyURL?: str

    server?: str

    tlsServerName?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUser:
    r"""
    user contains information that describes identity information.
    This is used to tell the kubernetes cluster who you are.

    Attributes
    ----------
    authProvider : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUserAuthProvider, default is Undefined, optional
        auth provider
    exec : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUserExec, default is Undefined, optional
        exec
    """


    authProvider?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUserAuthProvider

    exec?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUserExec


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUserAuthProvider:
    r"""
    authProvider specifies a custom authentication plugin for the kubernetes cluster.

    Attributes
    ----------
    config : {str:str}, default is Undefined, optional
        config holds the parameters for the authentication plugin.
    name : str, default is Undefined, required
        name is the name of the authentication plugin.
    """


    config?: {str:str}

    name: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUserExec:
    r"""
    exec specifies a custom exec-based authentication plugin for the kubernetes cluster.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Preferred input version of the ExecInfo. The returned ExecCredentials MUST use
        the same encoding version as the input.
        Defaults to client.authentication.k8s.io/v1 if not set.
    args : [str], default is Undefined, optional
        Arguments to pass to the command when executing it.
    command : str, default is Undefined, required
        command to execute.
    env : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUserExecEnvItems0], default is Undefined, optional
        env defines additional environment variables to expose to the process. These
        are unioned with the host's environment, as well as variables client-go uses
        to pass argument to the plugin.
    provideClusterInfo : bool, default is Undefined, optional
        provideClusterInfo determines whether or not to provide cluster information,
        which could potentially contain very large CA data, to this exec plugin as a
        part of the KUBERNETES_EXEC_INFO environment variable. By default, it is set
        to false. Package k8s.io/client-go/tools/auth/exec provides helper methods for
        reading this environment variable.
    """


    apiVersion?: str

    args?: [str]

    command: str

    env?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUserExecEnvItems0]

    provideClusterInfo?: bool


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationDiscoveryFileKubeConfigUserExecEnvItems0:
    r"""
    KubeConfigAuthExecEnv is used for setting environment variables when executing an exec-based
    credential plugin.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """


    name: str

    value: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationNodeRegistration:
    r"""
    nodeRegistration holds fields that relate to registering the new control-plane node to the cluster.
    When used in the context of control plane nodes, NodeRegistration should remain consistent
    across both InitConfiguration and JoinConfiguration

    Attributes
    ----------
    criSocket : str, default is Undefined, optional
        criSocket is used to retrieve container runtime info. This information will be annotated to the Node API object, for later re-use
    ignorePreflightErrors : [str], default is Undefined, optional
        ignorePreflightErrors provides a slice of pre-flight errors to be ignored when the current node is registered.
    imagePullPolicy : str, default is Undefined, optional
        imagePullPolicy specifies the policy for image pulling
        during kubeadm "init" and "join" operations. The value of
        this field must be one of "Always", "IfNotPresent" or
        "Never". Defaults to "IfNotPresent". This can be used only
        with Kubernetes version equal to 1.22 and later.
    imagePullSerial : bool, default is Undefined, optional
        imagePullSerial specifies if image pulling performed by kubeadm must be done serially or in parallel.
        This option takes effect only on Kubernetes >=1.31.0.
        Default: true (defaulted in kubeadm)
    kubeletExtraArgs : {str:str}, default is Undefined, optional
        kubeletExtraArgs passes through extra arguments to the kubelet. The arguments here are passed to the kubelet command line via the environment file
        kubeadm writes at runtime for the kubelet to source. This overrides the generic base-level configuration in the kubelet-config-1.X ConfigMap
        Flags have higher priority when parsing. These values are local and specific to the node kubeadm is executing on.
    name : str, default is Undefined, optional
        name is the `.Metadata.Name` field of the Node API object that will be created in this `kubeadm init` or `kubeadm join` operation.
        This field is also used in the CommonName field of the kubelet's client certificate to the API server.
        Defaults to the hostname of the node if not provided.
    taints : [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationNodeRegistrationTaintsItems0], default is Undefined, optional
        taints specifies the taints the Node API object should be registered with. If this field is unset, i.e. nil, in the `kubeadm init` process
        it will be defaulted to []v1.Taint{'node-role.kubernetes.io/master=""'}. If you don't want to taint your control-plane node, set this field to an
        empty slice, i.e. `taints: []` in the YAML file. This field is solely used for Node registration.
    """


    criSocket?: str

    ignorePreflightErrors?: [str]

    imagePullPolicy?: "Always" | "IfNotPresent" | "Never"

    imagePullSerial?: bool

    kubeletExtraArgs?: {str:str}

    name?: str

    taints?: [BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationNodeRegistrationTaintsItems0]


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationNodeRegistrationTaintsItems0:
    r"""
    The node this Taint is attached to has the "effect" on
    any pod that does not tolerate the Taint.

    Attributes
    ----------
    effect : str, default is Undefined, required
        Required. The effect of the taint on pods
        that do not tolerate the taint.
        Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, required
        Required. The taint key to be applied to a node.
    timeAdded : str, default is Undefined, optional
        TimeAdded represents the time at which the taint was added.
        It is only written for NoExecute taints.
    value : str, default is Undefined, optional
        The taint value corresponding to the taint key.
    """


    effect: str

    key: str

    timeAdded?: str

    value?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecJoinConfigurationPatches:
    r"""
    patches contains options related to applying patches to components deployed by kubeadm during
    "kubeadm join". The minimum kubernetes version needed to support Patches is v1.22

    Attributes
    ----------
    directory : str, default is Undefined, optional
        directory is a path to a directory that contains files named "target[suffix][+patchtype].extension".
        For example, "kube-apiserver0+merge.yaml" or just "etcd.json". "target" can be one of
        "kube-apiserver", "kube-controller-manager", "kube-scheduler", "etcd". "patchtype" can be one
        of "strategic" "merge" or "json" and they match the patch formats supported by kubectl.
        The default "patchtype" is "strategic". "extension" must be either "json" or "yaml".
        "suffix" is an optional string that can be used to determine which patches are applied
        first alpha-numerically.
        These files can be written into the target directory via KubeadmConfig.Files which
        specifies additional files to be created on the machine, either with content inline or
        by referencing a secret.
    """


    directory?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecNtp:
    r"""
    ntp specifies NTP configuration

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        enabled specifies whether NTP should be enabled
    servers : [str], default is Undefined, optional
        servers specifies which NTP servers to use
    """


    enabled?: bool

    servers?: [str]


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecUsersItems0:
    r"""
    User defines the input for a generated user in cloud-init.

    Attributes
    ----------
    gecos : str, default is Undefined, optional
        gecos specifies the gecos to use for the user
    groups : str, default is Undefined, optional
        groups specifies the additional groups for the user
    homeDir : str, default is Undefined, optional
        homeDir specifies the home directory to use for the user
    inactive : bool, default is Undefined, optional
        inactive specifies whether to mark the user as inactive
    lockPassword : bool, default is Undefined, optional
        lockPassword specifies if password login should be disabled
    name : str, default is Undefined, required
        name specifies the user name
    passwd : str, default is Undefined, optional
        passwd specifies a hashed password for the user
    passwdFrom : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecUsersItems0PasswdFrom, default is Undefined, optional
        passwd from
    primaryGroup : str, default is Undefined, optional
        primaryGroup specifies the primary group for the user
    shell : str, default is Undefined, optional
        shell specifies the user's shell
    sshAuthorizedKeys : [str], default is Undefined, optional
        sshAuthorizedKeys specifies a list of ssh authorized keys for the user
    sudo : str, default is Undefined, optional
        sudo specifies a sudo role for the user
    """


    gecos?: str

    groups?: str

    homeDir?: str

    inactive?: bool

    lockPassword?: bool

    name: str

    passwd?: str

    passwdFrom?: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecUsersItems0PasswdFrom

    primaryGroup?: str

    shell?: str

    sshAuthorizedKeys?: [str]

    sudo?: str


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecUsersItems0PasswdFrom:
    r"""
    passwdFrom is a referenced source of passwd to populate the passwd.

    Attributes
    ----------
    secret : BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecUsersItems0PasswdFromSecret, default is Undefined, required
        secret
    """


    secret: BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecUsersItems0PasswdFromSecret


schema BootstrapClusterxK8sIoV1beta1KubeadmConfigTemplateSpecTemplateSpecUsersItems0PasswdFromSecret:
    r"""
    secret represents a secret that should populate this password.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key in the secret's data map for this value.
    name : str, default is Undefined, required
        name of the secret in the KubeadmBootstrapConfig's namespace to use.
    """


    key: str

    name: str


