"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DevMachineTemplate:
    r"""
    DevMachineTemplate is the schema for the in-memory machine template API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DevMachineTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpec, default is Undefined, optional
        spec
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "DevMachineTemplate" = "DevMachineTemplate"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpec


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpec:
    r"""
    DevMachineTemplateSpec defines the desired state of DevMachineTemplate.

    Attributes
    ----------
    template : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplate, default is Undefined, required
        template
    """


    template: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplate


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplate:
    r"""
    DevMachineTemplateResource describes the data needed to create a DevMachine from a template.

    Attributes
    ----------
    metadata : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateMetadata, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateMetadata

    spec: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpec


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateMetadata:
    r"""
    Standard object's metadata.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        labels is a map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: http://kubernetes.io/docs/user-guide/labels
    """


    annotations?: {str:str}

    labels?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpec:
    r"""
    Spec is the specification of the desired behavior of the machine.

    Attributes
    ----------
    backend : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackend, default is Undefined, required
        backend
    providerID : str, default is Undefined, optional
        providerID used to link this machine with the node hosted on it.
    """


    backend: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackend

    providerID?: str


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackend:
    r"""
    backend defines backends for a DevMachine.

    Attributes
    ----------
    docker : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendDocker, default is Undefined, optional
        docker
    inMemory : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemory, default is Undefined, optional
        in memory
    """


    docker?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendDocker

    inMemory?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemory


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendDocker:
    r"""
    docker defines a backend for a DevMachine using docker containers.

    Attributes
    ----------
    bootstrapTimeout : str, default is Undefined, optional
        bootstrapTimeout is the total amount of time to wait for the machine to bootstrap before timing out.
        The default value is 3m.
    bootstrapped : bool, default is Undefined, optional
        bootstrapped is true when the kubeadm bootstrapping has been run
        against this machine

        Deprecated: This field will be removed in the next apiVersion.
        When removing also remove from staticcheck exclude-rules for SA1019 in golangci.yml.
    customImage : str, default is Undefined, optional
        customImage allows customizing the container image that is used for
        running the machine
    extraMounts : [InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendDockerExtraMountsItems0], default is Undefined, optional
        extraMounts describes additional mount points for the node container
        These may be used to bind a hostPath
    preLoadImages : [str], default is Undefined, optional
        preLoadImages allows to pre-load images in a newly created machine. This can be used to
        speed up tests by avoiding e.g. to download CNI images on all the containers.
    """


    bootstrapTimeout?: str

    bootstrapped?: bool

    customImage?: str

    extraMounts?: [InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendDockerExtraMountsItems0]

    preLoadImages?: [str]


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendDockerExtraMountsItems0:
    r"""
    Mount specifies a host volume to mount into a container.
    This is a simplified version of kind v1alpha4.Mount types.

    Attributes
    ----------
    containerPath : str, default is Undefined, optional
        Path of the mount within the container.
    hostPath : str, default is Undefined, optional
        Path of the mount on the host. If the hostPath doesn't exist, then runtimes
        should report error. If the hostpath is a symbolic link, runtimes should
        follow the symlink and mount the real destination to container.
    readOnly : bool, default is Undefined, optional
        If set, the mount is read-only.
    """


    containerPath?: str

    hostPath?: str

    readOnly?: bool


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemory:
    r"""
    inMemory defines a backend for a DevMachine that runs in memory.

    Attributes
    ----------
    apiServer : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryAPIServer, default is Undefined, optional
        api server
    etcd : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryEtcd, default is Undefined, optional
        etcd
    node : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryNode, default is Undefined, optional
        node
    vm : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryVM, default is Undefined, optional
        vm
    """


    apiServer?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryAPIServer

    etcd?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryEtcd

    node?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryNode

    vm?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryVM


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryAPIServer:
    r"""
    apiServer defines the behaviour of the APIServer hosted on the InMemoryMachine.

    Attributes
    ----------
    provisioning : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryAPIServerProvisioning, default is Undefined, optional
        provisioning
    """


    provisioning?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryAPIServerProvisioning


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryAPIServerProvisioning:
    r"""
    provisioning defines variables influencing how the APIServer hosted on the InMemoryMachine is going to be provisioned.
    NOTE: APIServer provisioning includes all the steps from starting the static Pod to the Pod become ready and being registered in K8s.

    Attributes
    ----------
    startupDuration : str, default is Undefined, required
        startupDuration defines the duration of the object provisioning phase.
    startupJitter : str, default is Undefined, optional
        startupJitter adds some randomness on StartupDuration; the actual duration will be StartupDuration plus an additional
        amount chosen uniformly at random from the interval between zero and `StartupJitter*StartupDuration`.
        NOTE: this is modeled as string because the usage of float is highly discouraged, as support for them varies across languages.
    """


    startupDuration: str

    startupJitter?: str


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryEtcd:
    r"""
    etcd defines the behaviour of the etcd member hosted on the InMemoryMachine.

    Attributes
    ----------
    provisioning : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryEtcdProvisioning, default is Undefined, optional
        provisioning
    """


    provisioning?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryEtcdProvisioning


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryEtcdProvisioning:
    r"""
    provisioning defines variables influencing how the etcd member hosted on the InMemoryMachine is going to be provisioned.
    NOTE: Etcd provisioning includes all the steps from starting the static Pod to the Pod become ready and being registered in K8s.

    Attributes
    ----------
    startupDuration : str, default is Undefined, required
        startupDuration defines the duration of the object provisioning phase.
    startupJitter : str, default is Undefined, optional
        startupJitter adds some randomness on StartupDuration; the actual duration will be StartupDuration plus an additional
        amount chosen uniformly at random from the interval between zero and `StartupJitter*StartupDuration`.
        NOTE: this is modeled as string because the usage of float is highly discouraged, as support for them varies across languages.
    """


    startupDuration: str

    startupJitter?: str


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryNode:
    r"""
    node defines the behaviour of the Node (the kubelet) hosted on the InMemoryMachine.

    Attributes
    ----------
    provisioning : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryNodeProvisioning, default is Undefined, optional
        provisioning
    """


    provisioning?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryNodeProvisioning


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryNodeProvisioning:
    r"""
    provisioning defines variables influencing how the Node (the kubelet) hosted on the InMemoryMachine is going to be provisioned.
    NOTE: Node provisioning includes all the steps from starting kubelet to the node become ready, get a provider ID, and being registered in K8s.

    Attributes
    ----------
    startupDuration : str, default is Undefined, required
        startupDuration defines the duration of the object provisioning phase.
    startupJitter : str, default is Undefined, optional
        startupJitter adds some randomness on StartupDuration; the actual duration will be StartupDuration plus an additional
        amount chosen uniformly at random from the interval between zero and `StartupJitter*StartupDuration`.
        NOTE: this is modeled as string because the usage of float is highly discouraged, as support for them varies across languages.
    """


    startupDuration: str

    startupJitter?: str


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryVM:
    r"""
    vm defines the behaviour of the VM implementing the InMemoryMachine.

    Attributes
    ----------
    provisioning : InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryVMProvisioning, default is Undefined, optional
        provisioning
    """


    provisioning?: InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryVMProvisioning


schema InfrastructureClusterxK8sIoV1beta1DevMachineTemplateSpecTemplateSpecBackendInMemoryVMProvisioning:
    r"""
    provisioning defines variables influencing how the VM implementing the InMemoryMachine is going to be provisioned.
    NOTE: VM provisioning includes all the steps from creation to power-on.

    Attributes
    ----------
    startupDuration : str, default is Undefined, required
        startupDuration defines the duration of the object provisioning phase.
    startupJitter : str, default is Undefined, optional
        startupJitter adds some randomness on StartupDuration; the actual duration will be StartupDuration plus an additional
        amount chosen uniformly at random from the interval between zero and `StartupJitter*StartupDuration`.
        NOTE: this is modeled as string because the usage of float is highly discouraged, as support for them varies across languages.
    """


    startupDuration: str

    startupJitter?: str


