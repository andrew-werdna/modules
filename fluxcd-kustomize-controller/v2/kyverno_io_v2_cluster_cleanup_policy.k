"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ClusterCleanupPolicy:
    r"""
    ClusterCleanupPolicy defines rule for resource cleanup.

    Attributes
    ----------
    apiVersion : str, default is "kyverno.io/v2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterCleanupPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KyvernoIoV2ClusterCleanupPolicySpec, default is Undefined, required
        spec
    status : KyvernoIoV2ClusterCleanupPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "kyverno.io/v2" = "kyverno.io/v2"

    kind: "ClusterCleanupPolicy" = "ClusterCleanupPolicy"

    metadata?: v1.ObjectMeta

    spec: KyvernoIoV2ClusterCleanupPolicySpec

    status?: KyvernoIoV2ClusterCleanupPolicyStatus


schema KyvernoIoV2ClusterCleanupPolicySpec:
    r"""
    Spec declares policy behaviors.

    Attributes
    ----------
    conditions : KyvernoIoV2ClusterCleanupPolicySpecConditions, default is Undefined, optional
        conditions
    context : [KyvernoIoV2ClusterCleanupPolicySpecContextItems0], default is Undefined, optional
        Context defines variables and data sources that can be used during rule execution.
    exclude : KyvernoIoV2ClusterCleanupPolicySpecExclude, default is Undefined, optional
        exclude
    match : KyvernoIoV2ClusterCleanupPolicySpecMatch, default is Undefined, required
        match
    schedule : str, default is Undefined, required
        The schedule in Cron format
    """


    conditions?: KyvernoIoV2ClusterCleanupPolicySpecConditions

    context?: [KyvernoIoV2ClusterCleanupPolicySpecContextItems0]

    exclude?: KyvernoIoV2ClusterCleanupPolicySpecExclude

    match: KyvernoIoV2ClusterCleanupPolicySpecMatch

    schedule: str


schema KyvernoIoV2ClusterCleanupPolicySpecConditions:
    r"""
    Conditions defines the conditions used to select the resources which will be cleaned up.

    Attributes
    ----------
    $all : [KyvernoIoV2ClusterCleanupPolicySpecConditionsAllItems0], default is Undefined, optional
        AllConditions enable variable-based conditional rule execution. This is useful for
        finer control of when an rule is applied. A condition can reference object data
        using JMESPath notation.
        Here, all of the conditions need to pass.
    any : [KyvernoIoV2ClusterCleanupPolicySpecConditionsAnyItems0], default is Undefined, optional
        AnyConditions enable variable-based conditional rule execution. This is useful for
        finer control of when an rule is applied. A condition can reference object data
        using JMESPath notation.
        Here, at least one of the conditions need to pass.
    """


    $all?: [KyvernoIoV2ClusterCleanupPolicySpecConditionsAllItems0]

    any?: [KyvernoIoV2ClusterCleanupPolicySpecConditionsAnyItems0]


schema KyvernoIoV2ClusterCleanupPolicySpecConditionsAllItems0:
    r"""
    kyverno io v2 cluster cleanup policy spec conditions all items0

    Attributes
    ----------
    key : any, default is Undefined, optional
        Key is the context entry (using JMESPath) for conditional rule evaluation.
    message : str, default is Undefined, optional
        Message is an optional display message
    operator : str, default is Undefined, optional
        Operator is the conditional operation to perform. Valid operators are:
        Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,
        GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,
        DurationLessThanOrEquals, DurationLessThan
    value : any, default is Undefined, optional
        Value is the conditional value, or set of values. The values can be fixed set
        or can be variables declared using JMESPath.
    """


    key?: any

    message?: str

    operator?: "Equals" | "NotEquals" | "AnyIn" | "AllIn" | "AnyNotIn" | "AllNotIn" | "GreaterThanOrEquals" | "GreaterThan" | "LessThanOrEquals" | "LessThan" | "DurationGreaterThanOrEquals" | "DurationGreaterThan" | "DurationLessThanOrEquals" | "DurationLessThan"

    value?: any


schema KyvernoIoV2ClusterCleanupPolicySpecConditionsAnyItems0:
    r"""
    kyverno io v2 cluster cleanup policy spec conditions any items0

    Attributes
    ----------
    key : any, default is Undefined, optional
        Key is the context entry (using JMESPath) for conditional rule evaluation.
    message : str, default is Undefined, optional
        Message is an optional display message
    operator : str, default is Undefined, optional
        Operator is the conditional operation to perform. Valid operators are:
        Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,
        GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,
        DurationLessThanOrEquals, DurationLessThan
    value : any, default is Undefined, optional
        Value is the conditional value, or set of values. The values can be fixed set
        or can be variables declared using JMESPath.
    """


    key?: any

    message?: str

    operator?: "Equals" | "NotEquals" | "AnyIn" | "AllIn" | "AnyNotIn" | "AllNotIn" | "GreaterThanOrEquals" | "GreaterThan" | "LessThanOrEquals" | "LessThan" | "DurationGreaterThanOrEquals" | "DurationGreaterThan" | "DurationLessThanOrEquals" | "DurationLessThan"

    value?: any


schema KyvernoIoV2ClusterCleanupPolicySpecContextItems0:
    r"""
    ContextEntry adds variables and data sources to a rule Context. Either a
    ConfigMap reference or a APILookup must be provided.

    Attributes
    ----------
    apiCall : KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICall, default is Undefined, optional
        api call
    configMap : KyvernoIoV2ClusterCleanupPolicySpecContextItems0ConfigMap, default is Undefined, optional
        config map
    globalReference : KyvernoIoV2ClusterCleanupPolicySpecContextItems0GlobalReference, default is Undefined, optional
        global reference
    imageRegistry : KyvernoIoV2ClusterCleanupPolicySpecContextItems0ImageRegistry, default is Undefined, optional
        image registry
    name : str, default is Undefined, required
        Name is the variable name.
    variable : KyvernoIoV2ClusterCleanupPolicySpecContextItems0Variable, default is Undefined, optional
        variable
    """


    apiCall?: KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICall

    configMap?: KyvernoIoV2ClusterCleanupPolicySpecContextItems0ConfigMap

    globalReference?: KyvernoIoV2ClusterCleanupPolicySpecContextItems0GlobalReference

    imageRegistry?: KyvernoIoV2ClusterCleanupPolicySpecContextItems0ImageRegistry

    name: str

    variable?: KyvernoIoV2ClusterCleanupPolicySpecContextItems0Variable


schema KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICall:
    r"""
    APICall is an HTTP request to the Kubernetes API server, or other JSON web service.
    The data returned is stored in the context with the name for the context entry.

    Attributes
    ----------
    data : [KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICallDataItems0], default is Undefined, optional
        The data object specifies the POST data sent to the server.
        Only applicable when the method field is set to POST.
    default : any, default is Undefined, optional
        Default is an optional arbitrary JSON object that the context
        value is set to, if the apiCall returns error.
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JSON Match Expression that can be used to
        transform the JSON response returned from the server. For example
        a JMESPath of "items | length(@)" applied to the API server response
        for the URLPath "/apis/apps/v1/deployments" will return the total count
        of deployments across all namespaces.
    method : str, default is "GET", optional
        Method is the HTTP request type (GET or POST). Defaults to GET.
    service : KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICallService, default is Undefined, optional
        service
    urlPath : str, default is Undefined, optional
        URLPath is the URL path to be used in the HTTP GET or POST request to the
        Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments").
        The format required is the same format used by the `kubectl get --raw` command.
        See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls
        for details.
        It's mutually exclusive with the Service field.
    """


    data?: [KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICallDataItems0]

    default?: any

    jmesPath?: str

    method?: "GET" | "POST" = "GET"

    service?: KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICallService

    urlPath?: str


schema KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICallDataItems0:
    r"""
    RequestData contains the HTTP POST data

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is a unique identifier for the data value
    value : any, default is Undefined, required
        Value is the data value
    """


    key: str

    value: any


schema KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICallService:
    r"""
    Service is an API call to a JSON web service.
    This is used for non-Kubernetes API server calls.
    It's mutually exclusive with the URLPath field.

    Attributes
    ----------
    caBundle : str, default is Undefined, optional
        CABundle is a PEM encoded CA bundle which will be used to validate
        the server certificate.
    headers : [KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICallServiceHeadersItems0], default is Undefined, optional
        Headers is a list of optional HTTP headers to be included in the request.
    url : str, default is Undefined, required
        URL is the JSON web service URL. A typical form is
        `https://{service}.{namespace}:{port}/{path}`.
    """


    caBundle?: str

    headers?: [KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICallServiceHeadersItems0]

    url: str


schema KyvernoIoV2ClusterCleanupPolicySpecContextItems0APICallServiceHeadersItems0:
    r"""
    kyverno io v2 cluster cleanup policy spec context items0 API call service headers items0

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the header key
    value : str, default is Undefined, required
        Value is the header value
    """


    key: str

    value: str


schema KyvernoIoV2ClusterCleanupPolicySpecContextItems0ConfigMap:
    r"""
    ConfigMap is the ConfigMap reference.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the ConfigMap name.
    namespace : str, default is Undefined, optional
        Namespace is the ConfigMap namespace.
    """


    name: str

    namespace?: str


schema KyvernoIoV2ClusterCleanupPolicySpecContextItems0GlobalReference:
    r"""
    GlobalContextEntryReference is a reference to a cached global context entry.

    Attributes
    ----------
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JSON Match Expression that can be used to
        transform the JSON response returned from the server. For example
        a JMESPath of "items | length(@)" applied to the API server response
        for the URLPath "/apis/apps/v1/deployments" will return the total count
        of deployments across all namespaces.
    name : str, default is Undefined, required
        Name of the global context entry
    """


    jmesPath?: str

    name: str


schema KyvernoIoV2ClusterCleanupPolicySpecContextItems0ImageRegistry:
    r"""
    ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image
    details.

    Attributes
    ----------
    imageRegistryCredentials : KyvernoIoV2ClusterCleanupPolicySpecContextItems0ImageRegistryImageRegistryCredentials, default is Undefined, optional
        image registry credentials
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JSON Match Expression that can be used to
        transform the ImageData struct returned as a result of processing
        the image reference.
    reference : str, default is Undefined, required
        Reference is image reference to a container image in the registry.
        Example: ghcr.io/kyverno/kyverno:latest
    """


    imageRegistryCredentials?: KyvernoIoV2ClusterCleanupPolicySpecContextItems0ImageRegistryImageRegistryCredentials

    jmesPath?: str

    reference: str


schema KyvernoIoV2ClusterCleanupPolicySpecContextItems0ImageRegistryImageRegistryCredentials:
    r"""
    ImageRegistryCredentials provides credentials that will be used for authentication with registry

    Attributes
    ----------
    allowInsecureRegistry : bool, default is Undefined, optional
        AllowInsecureRegistry allows insecure access to a registry.
    providers : [str], default is Undefined, optional
        Providers specifies a list of OCI Registry names, whose authentication providers are provided.
        It can be of one of these values: default,google,azure,amazon,github.
    secrets : [str], default is Undefined, optional
        Secrets specifies a list of secrets that are provided for credentials.
        Secrets must live in the Kyverno namespace.
    """


    allowInsecureRegistry?: bool

    providers?: [str]

    secrets?: [str]


schema KyvernoIoV2ClusterCleanupPolicySpecContextItems0Variable:
    r"""
    Variable defines an arbitrary JMESPath context variable that can be defined inline.

    Attributes
    ----------
    default : any, default is Undefined, optional
        Default is an optional arbitrary JSON object that the variable may take if the JMESPath
        expression evaluates to nil
    jmesPath : str, default is Undefined, optional
        JMESPath is an optional JMESPath Expression that can be used to
        transform the variable.
    value : any, default is Undefined, optional
        Value is any arbitrary JSON object representable in YAML or JSON form.
    """


    default?: any

    jmesPath?: str

    value?: any


schema KyvernoIoV2ClusterCleanupPolicySpecExclude:
    r"""
    ExcludeResources defines when cleanuppolicy should not be applied. The exclude
    criteria can include resource information (e.g. kind, name, namespace, labels)
    and admission review request information like the name or role.

    Attributes
    ----------
    $all : [KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0], default is Undefined, optional
        All allows specifying resources which will be ANDed
    any : [KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0], default is Undefined, optional
        Any allows specifying resources which will be ORed
    """


    $all?: [KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0]

    any?: [KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0]


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0:
    r"""
    ResourceFilter allow users to "AND" or "OR" between resources

    Attributes
    ----------
    clusterRoles : [str], default is Undefined, optional
        ClusterRoles is the list of cluster-wide role names for the user.
    resources : KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0Resources, default is Undefined, optional
        resources
    roles : [str], default is Undefined, optional
        Roles is the list of namespaced role names for the user.
    subjects : [KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0SubjectsItems0], default is Undefined, optional
        Subjects is the list of subject names like users, user groups, and service accounts.
    """


    clusterRoles?: [str]

    resources?: KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0Resources

    roles?: [str]

    subjects?: [KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0SubjectsItems0]


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0Resources:
    r"""
    ResourceDescription contains information about the resource being created or modified.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a  map of annotations (key-value pairs of type string). Annotation keys
        and values support the wildcard characters "*" (matches zero or many characters) and
        "?" (matches at least one character).
    kinds : [str], default is Undefined, optional
        Kinds is a list of resource kinds.
    name : str, default is Undefined, optional
        Name is the name of the resource. The name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
        NOTE: "Name" is being deprecated in favor of "Names".
    names : [str], default is Undefined, optional
        Names are the names of the resources. Each name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
    namespaceSelector : KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespaces names. Each name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
    operations : [str], default is Undefined, optional
        Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
    selector : KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesSelector, default is Undefined, optional
        selector
    """


    annotations?: {str:str}

    kinds?: [str]

    name?: str

    names?: [str]

    namespaceSelector?: KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesNamespaceSelector

    namespaces?: [str]

    operations?: [str]

    selector?: KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesSelector


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesNamespaceSelector:
    r"""
    NamespaceSelector is a label selector for the resource namespace. Label keys and values
    in `matchLabels` support the wildcard characters `*` (matches zero or many characters)
    and `?` (matches one character).Wildcards allows writing label selectors like
    ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but
    does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesSelector:
    r"""
    Selector is a label selector. Label keys and values in `matchLabels` support the wildcard
    characters `*` (matches zero or many characters) and `?` (matches one character).
    Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that
    using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0ResourcesSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAllItems0SubjectsItems0:
    r"""
    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
    or a value for non-objects such as user and group names.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup holds the API group of the referenced subject.
        Defaults to "" for ServiceAccount subjects.
        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
    kind : str, default is Undefined, required
        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
    name : str, default is Undefined, required
        Name of the object being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
        the Authorizer should report an error.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0:
    r"""
    ResourceFilter allow users to "AND" or "OR" between resources

    Attributes
    ----------
    clusterRoles : [str], default is Undefined, optional
        ClusterRoles is the list of cluster-wide role names for the user.
    resources : KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0Resources, default is Undefined, optional
        resources
    roles : [str], default is Undefined, optional
        Roles is the list of namespaced role names for the user.
    subjects : [KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0SubjectsItems0], default is Undefined, optional
        Subjects is the list of subject names like users, user groups, and service accounts.
    """


    clusterRoles?: [str]

    resources?: KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0Resources

    roles?: [str]

    subjects?: [KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0SubjectsItems0]


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0Resources:
    r"""
    ResourceDescription contains information about the resource being created or modified.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a  map of annotations (key-value pairs of type string). Annotation keys
        and values support the wildcard characters "*" (matches zero or many characters) and
        "?" (matches at least one character).
    kinds : [str], default is Undefined, optional
        Kinds is a list of resource kinds.
    name : str, default is Undefined, optional
        Name is the name of the resource. The name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
        NOTE: "Name" is being deprecated in favor of "Names".
    names : [str], default is Undefined, optional
        Names are the names of the resources. Each name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
    namespaceSelector : KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespaces names. Each name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
    operations : [str], default is Undefined, optional
        Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
    selector : KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesSelector, default is Undefined, optional
        selector
    """


    annotations?: {str:str}

    kinds?: [str]

    name?: str

    names?: [str]

    namespaceSelector?: KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesNamespaceSelector

    namespaces?: [str]

    operations?: [str]

    selector?: KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesSelector


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesNamespaceSelector:
    r"""
    NamespaceSelector is a label selector for the resource namespace. Label keys and values
    in `matchLabels` support the wildcard characters `*` (matches zero or many characters)
    and `?` (matches one character).Wildcards allows writing label selectors like
    ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but
    does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesSelector:
    r"""
    Selector is a label selector. Label keys and values in `matchLabels` support the wildcard
    characters `*` (matches zero or many characters) and `?` (matches one character).
    Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that
    using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0ResourcesSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV2ClusterCleanupPolicySpecExcludeAnyItems0SubjectsItems0:
    r"""
    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
    or a value for non-objects such as user and group names.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup holds the API group of the referenced subject.
        Defaults to "" for ServiceAccount subjects.
        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
    kind : str, default is Undefined, required
        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
    name : str, default is Undefined, required
        Name of the object being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
        the Authorizer should report an error.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema KyvernoIoV2ClusterCleanupPolicySpecMatch:
    r"""
    MatchResources defines when cleanuppolicy should be applied. The match
    criteria can include resource information (e.g. kind, name, namespace, labels)
    and admission review request information like the user name or role.
    At least one kind is required.

    Attributes
    ----------
    $all : [KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0], default is Undefined, optional
        All allows specifying resources which will be ANDed
    any : [KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0], default is Undefined, optional
        Any allows specifying resources which will be ORed
    """


    $all?: [KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0]

    any?: [KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0]


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0:
    r"""
    ResourceFilter allow users to "AND" or "OR" between resources

    Attributes
    ----------
    clusterRoles : [str], default is Undefined, optional
        ClusterRoles is the list of cluster-wide role names for the user.
    resources : KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0Resources, default is Undefined, optional
        resources
    roles : [str], default is Undefined, optional
        Roles is the list of namespaced role names for the user.
    subjects : [KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0SubjectsItems0], default is Undefined, optional
        Subjects is the list of subject names like users, user groups, and service accounts.
    """


    clusterRoles?: [str]

    resources?: KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0Resources

    roles?: [str]

    subjects?: [KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0SubjectsItems0]


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0Resources:
    r"""
    ResourceDescription contains information about the resource being created or modified.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a  map of annotations (key-value pairs of type string). Annotation keys
        and values support the wildcard characters "*" (matches zero or many characters) and
        "?" (matches at least one character).
    kinds : [str], default is Undefined, optional
        Kinds is a list of resource kinds.
    name : str, default is Undefined, optional
        Name is the name of the resource. The name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
        NOTE: "Name" is being deprecated in favor of "Names".
    names : [str], default is Undefined, optional
        Names are the names of the resources. Each name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
    namespaceSelector : KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespaces names. Each name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
    operations : [str], default is Undefined, optional
        Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
    selector : KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesSelector, default is Undefined, optional
        selector
    """


    annotations?: {str:str}

    kinds?: [str]

    name?: str

    names?: [str]

    namespaceSelector?: KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesNamespaceSelector

    namespaces?: [str]

    operations?: [str]

    selector?: KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesSelector


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesNamespaceSelector:
    r"""
    NamespaceSelector is a label selector for the resource namespace. Label keys and values
    in `matchLabels` support the wildcard characters `*` (matches zero or many characters)
    and `?` (matches one character).Wildcards allows writing label selectors like
    ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but
    does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesSelector:
    r"""
    Selector is a label selector. Label keys and values in `matchLabels` support the wildcard
    characters `*` (matches zero or many characters) and `?` (matches one character).
    Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that
    using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0ResourcesSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAllItems0SubjectsItems0:
    r"""
    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
    or a value for non-objects such as user and group names.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup holds the API group of the referenced subject.
        Defaults to "" for ServiceAccount subjects.
        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
    kind : str, default is Undefined, required
        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
    name : str, default is Undefined, required
        Name of the object being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
        the Authorizer should report an error.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0:
    r"""
    ResourceFilter allow users to "AND" or "OR" between resources

    Attributes
    ----------
    clusterRoles : [str], default is Undefined, optional
        ClusterRoles is the list of cluster-wide role names for the user.
    resources : KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0Resources, default is Undefined, optional
        resources
    roles : [str], default is Undefined, optional
        Roles is the list of namespaced role names for the user.
    subjects : [KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0SubjectsItems0], default is Undefined, optional
        Subjects is the list of subject names like users, user groups, and service accounts.
    """


    clusterRoles?: [str]

    resources?: KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0Resources

    roles?: [str]

    subjects?: [KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0SubjectsItems0]


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0Resources:
    r"""
    ResourceDescription contains information about the resource being created or modified.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a  map of annotations (key-value pairs of type string). Annotation keys
        and values support the wildcard characters "*" (matches zero or many characters) and
        "?" (matches at least one character).
    kinds : [str], default is Undefined, optional
        Kinds is a list of resource kinds.
    name : str, default is Undefined, optional
        Name is the name of the resource. The name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
        NOTE: "Name" is being deprecated in favor of "Names".
    names : [str], default is Undefined, optional
        Names are the names of the resources. Each name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
    namespaceSelector : KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespaces names. Each name supports wildcard characters
        "*" (matches zero or many characters) and "?" (at least one character).
    operations : [str], default is Undefined, optional
        Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
    selector : KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesSelector, default is Undefined, optional
        selector
    """


    annotations?: {str:str}

    kinds?: [str]

    name?: str

    names?: [str]

    namespaceSelector?: KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesNamespaceSelector

    namespaces?: [str]

    operations?: [str]

    selector?: KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesSelector


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesNamespaceSelector:
    r"""
    NamespaceSelector is a label selector for the resource namespace. Label keys and values
    in `matchLabels` support the wildcard characters `*` (matches zero or many characters)
    and `?` (matches one character).Wildcards allows writing label selectors like
    ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but
    does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesSelector:
    r"""
    Selector is a label selector. Label keys and values in `matchLabels` support the wildcard
    characters `*` (matches zero or many characters) and `?` (matches one character).
    Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that
    using ["*" : "*"] matches any key and value but does not match an empty label set.

    Attributes
    ----------
    matchExpressions : [KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0ResourcesSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KyvernoIoV2ClusterCleanupPolicySpecMatchAnyItems0SubjectsItems0:
    r"""
    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
    or a value for non-objects such as user and group names.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup holds the API group of the referenced subject.
        Defaults to "" for ServiceAccount subjects.
        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
    kind : str, default is Undefined, required
        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
    name : str, default is Undefined, required
        Name of the object being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
        the Authorizer should report an error.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema KyvernoIoV2ClusterCleanupPolicyStatus:
    r"""
    Status contains policy runtime data.

    Attributes
    ----------
    conditions : [KyvernoIoV2ClusterCleanupPolicyStatusConditionsItems0], default is Undefined, optional
        conditions
    lastExecutionTime : str, default is Undefined, optional
        last execution time
    """


    conditions?: [KyvernoIoV2ClusterCleanupPolicyStatusConditionsItems0]

    lastExecutionTime?: str


schema KyvernoIoV2ClusterCleanupPolicyStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


