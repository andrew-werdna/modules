apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"argocd.argoproj.io/sync-wave":"2"},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","pipeline.tekton.dev/release":"v1.0.0","version":"v1.0.0"},"name":"verificationpolicies.tekton.dev"},"spec":{"group":"tekton.dev","names":{"categories":["tekton","tekton-pipelines"],"kind":"VerificationPolicy","plural":"verificationpolicies","singular":"verificationpolicy"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"VerificationPolicy defines the rules to verify Tekton resources.\nVerificationPolicy can config the mapping from resources to a list of public\nkeys, so when verifying the resources we can use the corresponding public keys.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"Spec holds the desired state of the VerificationPolicy.","properties":{"authorities":{"description":"Authorities defines the rules for validating signatures.","items":{"description":"The Authority block defines the keys for validating signatures.","properties":{"key":{"description":"Key contains the public key to validate the resource.","properties":{"data":{"description":"Data contains the inline public key.","type":"string"},"hashAlgorithm":{"description":"HashAlgorithm always defaults to sha256 if the algorithm hasn't been explicitly set","type":"string"},"kms":{"description":"KMS contains the KMS url of the public key\nSupported formats differ based on the KMS system used.\nOne example of a KMS url could be:\ngcpkms://projects/[PROJECT]/locations/[LOCATION]\u003e/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[KEY_VERSION]\nFor more examples please refer https://docs.sigstore.dev/cosign/kms_support.\nNote that the KMS is not supported yet.","type":"string"},"secretRef":{"description":"SecretRef sets a reference to a secret with the key.","properties":{"name":{"description":"name is unique within a namespace to reference a secret resource.","type":"string"},"namespace":{"description":"namespace defines the space within which the secret name must be unique.","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"},"name":{"description":"Name is the name for this authority.","type":"string"}},"required":["name"],"type":"object"},"type":"array"},"mode":{"description":"Mode controls whether a failing policy will fail the taskrun/pipelinerun, or only log the warnings\nenforce - fail the taskrun/pipelinerun if verification fails (default)\nwarn - don't fail the taskrun/pipelinerun if verification fails but log warnings","type":"string"},"resources":{"description":"Resources defines the patterns of resources sources that should be subject to this policy.\nFor example, we may want to apply this Policy from a certain GitHub repo.\nThen the ResourcesPattern should be valid regex. E.g. If using gitresolver, and we want to config keys from a certain git repo.\n`ResourcesPattern` can be `https://github.com/tektoncd/catalog.git`, we will use regex to filter out those resources.","items":{"description":"ResourcePattern defines the pattern of the resource source","properties":{"pattern":{"description":"Pattern defines a resource pattern. Regex is created to filter resources based on `Pattern`\nExample patterns:\nGitHub resource: https://github.com/tektoncd/catalog.git, https://github.com/tektoncd/*\nBundle resource: gcr.io/tekton-releases/catalog/upstream/git-clone, gcr.io/tekton-releases/catalog/upstream/*\nHub resource: https://artifacthub.io/*,","type":"string"}},"required":["pattern"],"type":"object"},"type":"array"}},"required":["authorities","resources"],"type":"object"}},"required":["spec"],"type":"object"}},"served":true,"storage":true}]}}
  creationTimestamp: "2025-05-20T13:06:36Z"
  generation: 1
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v1.0.0
    version: v1.0.0
  name: verificationpolicies.tekton.dev
  resourceVersion: "3923"
  uid: a72f41f0-4011-42c5-9f17-4334d0a0fdea
spec:
  conversion:
    strategy: None
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: VerificationPolicy
    listKind: VerificationPolicyList
    plural: verificationpolicies
    singular: verificationpolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          VerificationPolicy defines the rules to verify Tekton resources.
          VerificationPolicy can config the mapping from resources to a list of public
          keys, so when verifying the resources we can use the corresponding public keys.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec holds the desired state of the VerificationPolicy.
            properties:
              authorities:
                description: Authorities defines the rules for validating signatures.
                items:
                  description: The Authority block defines the keys for validating
                    signatures.
                  properties:
                    key:
                      description: Key contains the public key to validate the resource.
                      properties:
                        data:
                          description: Data contains the inline public key.
                          type: string
                        hashAlgorithm:
                          description: HashAlgorithm always defaults to sha256 if
                            the algorithm hasn't been explicitly set
                          type: string
                        kms:
                          description: |-
                            KMS contains the KMS url of the public key
                            Supported formats differ based on the KMS system used.
                            One example of a KMS url could be:
                            gcpkms://projects/[PROJECT]/locations/[LOCATION]>/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[KEY_VERSION]
                            For more examples please refer https://docs.sigstore.dev/cosign/kms_support.
                            Note that the KMS is not supported yet.
                          type: string
                        secretRef:
                          description: SecretRef sets a reference to a secret with
                            the key.
                          properties:
                            name:
                              description: name is unique within a namespace to reference
                                a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which
                                the secret name must be unique.
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    name:
                      description: Name is the name for this authority.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              mode:
                description: |-
                  Mode controls whether a failing policy will fail the taskrun/pipelinerun, or only log the warnings
                  enforce - fail the taskrun/pipelinerun if verification fails (default)
                  warn - don't fail the taskrun/pipelinerun if verification fails but log warnings
                type: string
              resources:
                description: |-
                  Resources defines the patterns of resources sources that should be subject to this policy.
                  For example, we may want to apply this Policy from a certain GitHub repo.
                  Then the ResourcesPattern should be valid regex. E.g. If using gitresolver, and we want to config keys from a certain git repo.
                  `ResourcesPattern` can be `https://github.com/tektoncd/catalog.git`, we will use regex to filter out those resources.
                items:
                  description: ResourcePattern defines the pattern of the resource
                    source
                  properties:
                    pattern:
                      description: |-
                        Pattern defines a resource pattern. Regex is created to filter resources based on `Pattern`
                        Example patterns:
                        GitHub resource: https://github.com/tektoncd/catalog.git, https://github.com/tektoncd/*
                        Bundle resource: gcr.io/tekton-releases/catalog/upstream/git-clone, gcr.io/tekton-releases/catalog/upstream/*
                        Hub resource: https://artifacthub.io/*,
                      type: string
                  required:
                  - pattern
                  type: object
                type: array
            required:
            - authorities
            - resources
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    categories:
    - tekton
    - tekton-pipelines
    kind: VerificationPolicy
    listKind: VerificationPolicyList
    plural: verificationpolicies
    singular: verificationpolicy
  conditions:
  - lastTransitionTime: "2025-05-20T13:06:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-05-20T13:06:36Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
