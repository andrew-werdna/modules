apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"argocd.argoproj.io/sync-wave":"2"},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","pipeline.tekton.dev/release":"v1.0.0","version":"v1.0.0"},"name":"taskruns.tekton.dev"},"spec":{"conversion":{"strategy":"Webhook","webhook":{"clientConfig":{"service":{"name":"tekton-pipelines-webhook","namespace":"tekton-pipelines"}},"conversionReviewVersions":["v1beta1","v1"]}},"group":"tekton.dev","names":{"categories":["tekton","tekton-pipelines"],"kind":"TaskRun","plural":"taskruns","shortNames":["tr","trs"],"singular":"taskrun"},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].status","name":"Succeeded","type":"string"},{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].reason","name":"Reason","type":"string"},{"jsonPath":".status.startTime","name":"StartTime","type":"date"},{"jsonPath":".status.completionTime","name":"CompletionTime","type":"date"}],"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"TaskRun represents a single execution of a Task. TaskRuns are how the steps\nspecified in a Task are executed; they specify the parameters and resources\nused to run the steps in a Task.\n\nDeprecated: Please use v1.TaskRun instead.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"TaskRunSpec defines the desired state of TaskRun","properties":{"computeResources":{"description":"Compute resources to use for this TaskRun","properties":{"claims":{"description":"Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.","items":{"description":"ResourceClaim references one entry in PodSpec.ResourceClaims.","properties":{"name":{"description":"Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.","type":"string"},"request":{"description":"Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"},"debug":{"description":"TaskRunDebug defines the breakpoint config for a particular TaskRun","properties":{"breakpoints":{"description":"TaskBreakpoints defines the breakpoint config for a particular Task","properties":{"beforeSteps":{"items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"onFailure":{"description":"if enabled, pause TaskRun on failure of a step\nfailed step will not exit","type":"string"}},"type":"object"}},"type":"object"},"params":{"description":"Params is a list of Param","items":{"description":"Param declares an ParamValues to use for the parameter called name.","properties":{"name":{"type":"string"},"value":{"x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"podTemplate":{"description":"PodTemplate holds pod specific configuration","properties":{"affinity":{"description":"If specified, the pod's scheduling constraints.\nSee Pod.spec.affinity (API version: v1)","x-kubernetes-preserve-unknown-fields":true},"automountServiceAccountToken":{"description":"AutomountServiceAccountToken indicates whether pods running as this\nservice account should have an API token automatically mounted.","type":"boolean"},"dnsConfig":{"description":"Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.","properties":{"nameservers":{"description":"A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"options":{"description":"A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.","items":{"description":"PodDNSConfigOption defines DNS resolver options of a pod.","properties":{"name":{"description":"Name is this DNS resolver option's name.\nRequired.","type":"string"},"value":{"description":"Value is this DNS resolver option's value.","type":"string"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"searches":{"description":"A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"dnsPolicy":{"description":"Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are\n'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig\nwill be merged with the policy selected with DNSPolicy.","type":"string"},"enableServiceLinks":{"description":"EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true.","type":"boolean"},"env":{"description":"List of environment variables that can be provided to the containers belonging to the pod.","items":{"description":"EnvVar represents an environment variable present in a Container.","properties":{"name":{"description":"Name of the environment variable. Must be a C_IDENTIFIER.","type":"string"},"value":{"description":"Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".","type":"string"},"valueFrom":{"description":"Source for the environment variable's value. Cannot be used if value is not empty.","properties":{"configMapKeyRef":{"description":"Selects a key of a ConfigMap.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object","x-kubernetes-map-type":"atomic"},"fieldRef":{"description":"Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object","x-kubernetes-map-type":"atomic"},"resourceFieldRef":{"description":"Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Specifies the output format of the exposed resources, defaults to \"1\"","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object","x-kubernetes-map-type":"atomic"},"secretKeyRef":{"description":"Selects a key of a secret in the pod's namespace","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"hostAliases":{"description":"HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts\nfile if specified. This is only valid for non-hostNetwork pods.","items":{"description":"HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.","properties":{"hostnames":{"description":"Hostnames for the above IP address.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"ip":{"description":"IP address of the host file entry.","type":"string"}},"required":["ip"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"hostNetwork":{"description":"HostNetwork specifies whether the pod may use the node network namespace","type":"boolean"},"imagePullSecrets":{"description":"ImagePullSecrets gives the name of the secret used by the pod to pull the image if specified","items":{"description":"LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"type":"array","x-kubernetes-list-type":"atomic"},"nodeSelector":{"additionalProperties":{"type":"string"},"description":"NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/","type":"object"},"priorityClassName":{"description":"If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.","type":"string"},"runtimeClassName":{"description":"RuntimeClassName refers to a RuntimeClass object in the node.k8s.io\ngroup, which should be used to run this pod. If no RuntimeClass resource\nmatches the named class, the pod will not be run. If unset or empty, the\n\"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md\nThis is a beta feature as of Kubernetes v1.14.","type":"string"},"schedulerName":{"description":"SchedulerName specifies the scheduler to be used to dispatch the Pod","type":"string"},"securityContext":{"description":"SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.\nSee Pod.spec.securityContext (API version: v1)","x-kubernetes-preserve-unknown-fields":true},"tolerations":{"description":"If specified, the pod's tolerations.","items":{"description":"The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.","properties":{"effect":{"description":"Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.","type":"string"},"key":{"description":"Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.","type":"string"},"operator":{"description":"Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.","type":"string"},"tolerationSeconds":{"description":"TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.","format":"int64","type":"integer"},"value":{"description":"Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.","type":"string"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"topologySpreadConstraints":{"description":"TopologySpreadConstraints controls how Pods are spread across your cluster among\nfailure-domains such as regions, zones, nodes, and other user-defined topology domains.","items":{"description":"TopologySpreadConstraint specifies how to spread matching pods among the given topology.","properties":{"labelSelector":{"description":"LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"matchLabelKeys":{"description":"MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"maxSkew":{"description":"MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed.","format":"int32","type":"integer"},"minDomains":{"description":"MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.","format":"int32","type":"integer"},"nodeAffinityPolicy":{"description":"NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.","type":"string"},"nodeTaintsPolicy":{"description":"NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.","type":"string"},"topologyKey":{"description":"TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each \u003ckey, value\u003e as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field.","type":"string"},"whenUnsatisfiable":{"description":"WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field.","type":"string"}},"required":["maxSkew","topologyKey","whenUnsatisfiable"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"volumes":{"description":"List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes\nSee Pod.spec.volumes (API version: v1)","x-kubernetes-preserve-unknown-fields":true}},"type":"object"},"resources":{"description":"Deprecated: Unused, preserved only for backwards compatibility","properties":{"inputs":{"description":"Inputs holds the inputs resources this task was invoked with","items":{"description":"TaskResourceBinding points to the PipelineResource that\nwill be used for the Task input or output called Name.\n\nDeprecated: Unused, preserved only for backwards compatibility","properties":{"name":{"description":"Name is the name of the PipelineResource in the Pipeline's declaration","type":"string"},"paths":{"description":"Paths will probably be removed in #1284, and then PipelineResourceBinding can be used instead.\nThe optional Path field corresponds to a path on disk at which the Resource can be found\n(used when providing the resource via mounted volume, overriding the default logic to fetch the Resource).","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"resourceRef":{"description":"ResourceRef is a reference to the instance of the actual PipelineResource\nthat should be used","properties":{"apiVersion":{"description":"API version of the referent","type":"string"},"name":{"description":"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names","type":"string"}},"type":"object"},"resourceSpec":{"description":"ResourceSpec is specification of a resource that should be created and\nconsumed by the task","properties":{"description":{"description":"Description is a user-facing description of the resource that may be\nused to populate a UI.","type":"string"},"params":{"items":{"description":"ResourceParam declares a string value to use for the parameter called Name, and is used in\nthe specific context of PipelineResources.\n\nDeprecated: Unused, preserved only for backwards compatibility","properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"secrets":{"description":"Secrets to fetch to populate some of resource fields","items":{"description":"SecretParam indicates which secret can be used to populate a field of the resource\n\nDeprecated: Unused, preserved only for backwards compatibility","properties":{"fieldName":{"type":"string"},"secretKey":{"type":"string"},"secretName":{"type":"string"}},"required":["fieldName","secretKey","secretName"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"type":{"description":"PipelineResourceType represents the type of endpoint the pipelineResource is, so that the\ncontroller will know this pipelineResource shouldx be fetched and optionally what\nadditional metatdata should be provided for it.\n\nDeprecated: Unused, preserved only for backwards compatibility","type":"string"}},"required":["params","type"],"type":"object"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"outputs":{"description":"Outputs holds the inputs resources this task was invoked with","items":{"description":"TaskResourceBinding points to the PipelineResource that\nwill be used for the Task input or output called Name.\n\nDeprecated: Unused, preserved only for backwards compatibility","properties":{"name":{"description":"Name is the name of the PipelineResource in the Pipeline's declaration","type":"string"},"paths":{"description":"Paths will probably be removed in #1284, and then PipelineResourceBinding can be used instead.\nThe optional Path field corresponds to a path on disk at which the Resource can be found\n(used when providing the resource via mounted volume, overriding the default logic to fetch the Resource).","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"resourceRef":{"description":"ResourceRef is a reference to the instance of the actual PipelineResource\nthat should be used","properties":{"apiVersion":{"description":"API version of the referent","type":"string"},"name":{"description":"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names","type":"string"}},"type":"object"},"resourceSpec":{"description":"ResourceSpec is specification of a resource that should be created and\nconsumed by the task","properties":{"description":{"description":"Description is a user-facing description of the resource that may be\nused to populate a UI.","type":"string"},"params":{"items":{"description":"ResourceParam declares a string value to use for the parameter called Name, and is used in\nthe specific context of PipelineResources.\n\nDeprecated: Unused, preserved only for backwards compatibility","properties":{"name":{"type":"string"},"value":{"type":"string"}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"secrets":{"description":"Secrets to fetch to populate some of resource fields","items":{"description":"SecretParam indicates which secret can be used to populate a field of the resource\n\nDeprecated: Unused, preserved only for backwards compatibility","properties":{"fieldName":{"type":"string"},"secretKey":{"type":"string"},"secretName":{"type":"string"}},"required":["fieldName","secretKey","secretName"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"type":{"description":"PipelineResourceType represents the type of endpoint the pipelineResource is, so that the\ncontroller will know this pipelineResource shouldx be fetched and optionally what\nadditional metatdata should be provided for it.\n\nDeprecated: Unused, preserved only for backwards compatibility","type":"string"}},"required":["params","type"],"type":"object"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"retries":{"description":"Retries represents how many times this TaskRun should be retried in the event of Task failure.","type":"integer"},"serviceAccountName":{"type":"string"},"sidecarOverrides":{"description":"Overrides to apply to Sidecars in this TaskRun.\nIf a field is specified in both a Sidecar and a SidecarOverride,\nthe value from the SidecarOverride will be used.\nThis field is only supported when the alpha feature gate is enabled.","items":{"description":"TaskRunSidecarOverride is used to override the values of a Sidecar in the corresponding Task.","properties":{"name":{"description":"The name of the Sidecar to override.","type":"string"},"resources":{"description":"The resource requirements to apply to the Sidecar.","properties":{"claims":{"description":"Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.","items":{"description":"ResourceClaim references one entry in PodSpec.ResourceClaims.","properties":{"name":{"description":"Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.","type":"string"},"request":{"description":"Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"}},"required":["name","resources"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"status":{"description":"Used for cancelling a TaskRun (and maybe more later on)","type":"string"},"statusMessage":{"description":"Status message for cancellation.","type":"string"},"stepOverrides":{"description":"Overrides to apply to Steps in this TaskRun.\nIf a field is specified in both a Step and a StepOverride,\nthe value from the StepOverride will be used.\nThis field is only supported when the alpha feature gate is enabled.","items":{"description":"TaskRunStepOverride is used to override the values of a Step in the corresponding Task.","properties":{"name":{"description":"The name of the Step to override.","type":"string"},"resources":{"description":"The resource requirements to apply to the Step.","properties":{"claims":{"description":"Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.","items":{"description":"ResourceClaim references one entry in PodSpec.ResourceClaims.","properties":{"name":{"description":"Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.","type":"string"},"request":{"description":"Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"}},"required":["name","resources"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"taskRef":{"description":"no more than one of the TaskRef and TaskSpec may be specified.","properties":{"apiVersion":{"description":"API version of the referent\nNote: A Task with non-empty APIVersion and Kind is considered a Custom Task","type":"string"},"bundle":{"description":"Bundle url reference to a Tekton Bundle.\n\nDeprecated: Please use ResolverRef with the bundles resolver instead.\nThe field is staying there for go client backward compatibility, but is not used/allowed anymore.","type":"string"},"kind":{"description":"TaskKind indicates the Kind of the Task:\n1. Namespaced Task when Kind is set to \"Task\". If Kind is \"\", it defaults to \"Task\".\n2. Custom Task when Kind is non-empty and APIVersion is non-empty","type":"string"},"name":{"description":"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names","type":"string"},"params":{"description":"Params contains the parameters used to identify the\nreferenced Tekton resource. Example entries might include\n\"repo\" or \"path\" but the set of params ultimately depends on\nthe chosen resolver.","items":{"description":"Param declares an ParamValues to use for the parameter called name.","properties":{"name":{"type":"string"},"value":{"x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"resolver":{"description":"Resolver is the name of the resolver that should perform\nresolution of the referenced Tekton resource, such as \"git\".","type":"string"}},"type":"object"},"taskSpec":{"description":"Specifying TaskSpec can be disabled by setting\n`disable-inline-spec` feature flag.\nSee Task.spec (API version: tekton.dev/v1beta1)","x-kubernetes-preserve-unknown-fields":true},"timeout":{"description":"Time after which one retry attempt times out. Defaults to 1 hour.\nRefer Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration","type":"string"},"workspaces":{"description":"Workspaces is a list of WorkspaceBindings from volumes to workspaces.","items":{"description":"WorkspaceBinding maps a Task's declared workspace to a Volume.","properties":{"configMap":{"description":"ConfigMap represents a configMap that should populate this workspace.","properties":{"defaultMode":{"description":"defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"items":{"description":"items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"key is the key to project.","type":"string"},"mode":{"description":"mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"optional specify whether the ConfigMap or its keys must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"},"csi":{"description":"CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.","properties":{"driver":{"description":"driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.","type":"string"},"fsType":{"description":"fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.","type":"string"},"nodePublishSecretRef":{"description":"nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"readOnly":{"description":"readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).","type":"boolean"},"volumeAttributes":{"additionalProperties":{"type":"string"},"description":"volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.","type":"object"}},"required":["driver"],"type":"object"},"emptyDir":{"description":"EmptyDir represents a temporary directory that shares a Task's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\nEither this OR PersistentVolumeClaim can be used.","properties":{"medium":{"description":"medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir","type":"string"},"sizeLimit":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true}},"type":"object"},"name":{"description":"Name is the name of the workspace populated by the volume.","type":"string"},"persistentVolumeClaim":{"description":"PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace. Either this OR EmptyDir can be used.","properties":{"claimName":{"description":"claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims","type":"string"},"readOnly":{"description":"readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.","type":"boolean"}},"required":["claimName"],"type":"object"},"projected":{"description":"Projected represents a projected volume that should populate this workspace.","properties":{"defaultMode":{"description":"defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"sources":{"description":"sources is the list of volume projections. Each entry in this list\nhandles one source.","items":{"description":"Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set.","properties":{"clusterTrustBundle":{"description":"ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time.","properties":{"labelSelector":{"description":"Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\".","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.","type":"string"},"optional":{"description":"If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.","type":"boolean"},"path":{"description":"Relative path from the volume root to write the bundle.","type":"string"},"signerName":{"description":"Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.","type":"string"}},"required":["path"],"type":"object"},"configMap":{"description":"configMap information about the configMap data to project","properties":{"items":{"description":"items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"key is the key to project.","type":"string"},"mode":{"description":"mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"optional specify whether the ConfigMap or its keys must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"},"downwardAPI":{"description":"downwardAPI information about the downwardAPI data to project","properties":{"items":{"description":"Items is a list of DownwardAPIVolume file","items":{"description":"DownwardAPIVolumeFile represents information to create the file containing the pod field","properties":{"fieldRef":{"description":"Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object","x-kubernetes-map-type":"atomic"},"mode":{"description":"Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'","type":"string"},"resourceFieldRef":{"description":"Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Specifies the output format of the exposed resources, defaults to \"1\"","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object","x-kubernetes-map-type":"atomic"}},"required":["path"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"secret":{"description":"secret information about the secret data to project","properties":{"items":{"description":"items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"key is the key to project.","type":"string"},"mode":{"description":"mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"optional field specify whether the Secret or its key must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"},"serviceAccountToken":{"description":"serviceAccountToken is information about the serviceAccountToken data to project","properties":{"audience":{"description":"audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.","type":"string"},"expirationSeconds":{"description":"expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.","format":"int64","type":"integer"},"path":{"description":"path is the path relative to the mount point of the file to project the\ntoken into.","type":"string"}},"required":["path"],"type":"object"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"secret":{"description":"Secret represents a secret that should populate this workspace.","properties":{"defaultMode":{"description":"defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"items":{"description":"items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"key is the key to project.","type":"string"},"mode":{"description":"mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"optional":{"description":"optional field specify whether the Secret or its keys must be defined","type":"boolean"},"secretName":{"description":"secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret","type":"string"}},"type":"object"},"subPath":{"description":"SubPath is optionally a directory on the volume which should be used\nfor this binding (i.e. the volume will be mounted at this sub directory).","type":"string"},"volumeClaimTemplate":{"description":"VolumeClaimTemplate is a template for a claim that will be created in the same namespace.\nThe PipelineRun controller is responsible for creating a unique claim for each instance of PipelineRun.\nSee PersistentVolumeClaim (API version: v1)","x-kubernetes-preserve-unknown-fields":true}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"status":{"description":"TaskRunStatus defines the observed state of TaskRun","properties":{"annotations":{"additionalProperties":{"type":"string"},"description":"Annotations is additional Status fields for the Resource to save some\nadditional State as well as convey more information to the user. This is\nroughly akin to Annotations on any k8s resource, just the reconciler conveying\nricher information outwards.","type":"object"},"cloudEvents":{"description":"CloudEvents describe the state of each cloud event requested via a\nCloudEventResource.\n\nDeprecated: Removed in v0.44.0.","items":{"description":"CloudEventDelivery is the target of a cloud event along with the state of\ndelivery.","properties":{"status":{"description":"CloudEventDeliveryState reports the state of a cloud event to be sent.","properties":{"condition":{"description":"Current status","type":"string"},"message":{"description":"Error is the text of error (if any)","type":"string"},"retryCount":{"description":"RetryCount is the number of attempts of sending the cloud event","format":"int32","type":"integer"},"sentAt":{"description":"SentAt is the time at which the last attempt to send the event was made","format":"date-time","type":"string"}},"required":["message","retryCount"],"type":"object"},"target":{"description":"Target points to an addressable","type":"string"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"completionTime":{"description":"CompletionTime is the time the build completed.","format":"date-time","type":"string"},"conditions":{"description":"Conditions the latest available observations of a resource's current state.","items":{"description":"Condition defines a readiness condition for a Knative resource.\nSee: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties","properties":{"lastTransitionTime":{"description":"LastTransitionTime is the last time the condition transitioned from one status to another.\nWe use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic\ndifferences (all other things held constant).","type":"string"},"message":{"description":"A human readable message indicating details about the transition.","type":"string"},"reason":{"description":"The reason for the condition's last transition.","type":"string"},"severity":{"description":"Severity with which to treat failures of this type of condition.\nWhen this is not specified, it defaults to Error.","type":"string"},"status":{"description":"Status of the condition, one of True, False, Unknown.","type":"string"},"type":{"description":"Type of condition.","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"observedGeneration":{"description":"ObservedGeneration is the 'Generation' of the Service that\nwas last processed by the controller.","format":"int64","type":"integer"},"podName":{"description":"PodName is the name of the pod responsible for executing this task's steps.","type":"string"},"provenance":{"description":"Provenance contains some key authenticated metadata about how a software artifact was built (what sources, what inputs/outputs, etc.).","properties":{"configSource":{"description":"Deprecated: Use RefSource instead","properties":{"digest":{"additionalProperties":{"type":"string"},"description":"Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.\nExample: {\"sha1\": \"f99d13e554ffcb696dee719fa85b695cb5b0f428\"}","type":"object"},"entryPoint":{"description":"EntryPoint identifies the entry point into the build. This is often a path to a\nbuild definition file and/or a target label within that file.\nExample: \"task/git-clone/0.8/git-clone.yaml\"","type":"string"},"uri":{"description":"URI indicates the identity of the source of the build definition.\nExample: \"https://github.com/tektoncd/catalog\"","type":"string"}},"type":"object"},"featureFlags":{"description":"FeatureFlags identifies the feature flags that were used during the task/pipeline run","properties":{"awaitSidecarReadiness":{"type":"boolean"},"coschedule":{"type":"string"},"disableCredsInit":{"type":"boolean"},"disableInlineSpec":{"type":"string"},"enableAPIFields":{"type":"string"},"enableArtifacts":{"type":"boolean"},"enableCELInWhenExpression":{"type":"boolean"},"enableConciseResolverSyntax":{"type":"boolean"},"enableKeepPodOnCancel":{"type":"boolean"},"enableKubernetesSidecar":{"type":"boolean"},"enableParamEnum":{"type":"boolean"},"enableProvenanceInStatus":{"type":"boolean"},"enableStepActions":{"description":"EnableStepActions is a no-op flag since StepActions are stable","type":"boolean"},"enforceNonfalsifiability":{"type":"string"},"maxResultSize":{"type":"integer"},"requireGitSSHSecretKnownHosts":{"type":"boolean"},"resultExtractionMethod":{"type":"string"},"runningInEnvWithInjectedSidecars":{"type":"boolean"},"sendCloudEventsForRuns":{"type":"boolean"},"setSecurityContext":{"type":"boolean"},"setSecurityContextReadOnlyRootFilesystem":{"type":"boolean"},"verificationNoMatchPolicy":{"description":"VerificationNoMatchPolicy is the feature flag for \"trusted-resources-verification-no-match-policy\"\nVerificationNoMatchPolicy can be set to \"ignore\", \"warn\" and \"fail\" values.\nignore: skip trusted resources verification when no matching verification policies found\nwarn: skip trusted resources verification when no matching verification policies found and log a warning\nfail: fail the taskrun or pipelines run if no matching verification policies found","type":"string"}},"type":"object"},"refSource":{"description":"RefSource identifies the source where a remote task/pipeline came from.","properties":{"digest":{"additionalProperties":{"type":"string"},"description":"Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.\nExample: {\"sha1\": \"f99d13e554ffcb696dee719fa85b695cb5b0f428\"}","type":"object"},"entryPoint":{"description":"EntryPoint identifies the entry point into the build. This is often a path to a\nbuild definition file and/or a target label within that file.\nExample: \"task/git-clone/0.8/git-clone.yaml\"","type":"string"},"uri":{"description":"URI indicates the identity of the source of the build definition.\nExample: \"https://github.com/tektoncd/catalog\"","type":"string"}},"type":"object"}},"type":"object"},"resourcesResult":{"description":"Results from Resources built during the TaskRun.\nThis is tomb-stoned along with the removal of pipelineResources\nDeprecated: this field is not populated and is preserved only for backwards compatibility","items":{"description":"RunResult is used to write key/value pairs to TaskRun pod termination messages.\nThe key/value pairs may come from the entrypoint binary, or represent a TaskRunResult.\nIf they represent a TaskRunResult, the key is the name of the result and the value is the\nJSON-serialized value of the result.","properties":{"key":{"type":"string"},"resourceName":{"description":"ResourceName may be used in tests, but it is not populated in termination messages.\nIt is preserved here for backwards compatibility and will not be ported to v1.","type":"string"},"type":{"description":"ResultType used to find out whether a RunResult is from a task result or not\nNote that ResultsType is another type which is used to define the data type\n(e.g. string, array, etc) we used for Results","type":"integer"},"value":{"type":"string"}},"required":["key","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"retriesStatus":{"description":"RetriesStatus contains the history of TaskRunStatus in case of a retry in order to keep record of failures.\nAll TaskRunStatus stored in RetriesStatus will have no date within the RetriesStatus as is redundant.\nSee TaskRun.status (API version: tekton.dev/v1beta1)","x-kubernetes-preserve-unknown-fields":true},"sidecars":{"description":"The list has one entry per sidecar in the manifest. Each entry is\nrepresents the imageid of the corresponding sidecar.","items":{"description":"SidecarState reports the results of running a sidecar in a Task.","properties":{"container":{"type":"string"},"imageID":{"type":"string"},"name":{"type":"string"},"running":{"description":"Details about a running container","properties":{"startedAt":{"description":"Time at which the container was last (re-)started","format":"date-time","type":"string"}},"type":"object"},"terminated":{"description":"Details about a terminated container","properties":{"containerID":{"description":"Container's ID in the format '\u003ctype\u003e://\u003ccontainer_id\u003e'","type":"string"},"exitCode":{"description":"Exit status from the last termination of the container","format":"int32","type":"integer"},"finishedAt":{"description":"Time at which the container last terminated","format":"date-time","type":"string"},"message":{"description":"Message regarding the last termination of the container","type":"string"},"reason":{"description":"(brief) reason from the last termination of the container","type":"string"},"signal":{"description":"Signal from the last termination of the container","format":"int32","type":"integer"},"startedAt":{"description":"Time at which previous execution of the container started","format":"date-time","type":"string"}},"required":["exitCode"],"type":"object"},"waiting":{"description":"Details about a waiting container","properties":{"message":{"description":"Message regarding why the container is not yet running.","type":"string"},"reason":{"description":"(brief) reason the container is not yet running.","type":"string"}},"type":"object"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"spanContext":{"additionalProperties":{"type":"string"},"description":"SpanContext contains tracing span context fields","type":"object"},"startTime":{"description":"StartTime is the time the build is actually started.","format":"date-time","type":"string"},"steps":{"description":"Steps describes the state of each build step container.","items":{"description":"StepState reports the results of running a step in a Task.","properties":{"container":{"type":"string"},"imageID":{"type":"string"},"inputs":{"items":{"description":"Artifact represents an artifact within a system, potentially containing multiple values\nassociated with it.","properties":{"buildOutput":{"description":"Indicate if the artifact is a build output or a by-product","type":"boolean"},"name":{"description":"The artifact's identifying category name","type":"string"},"values":{"description":"A collection of values related to the artifact","items":{"description":"ArtifactValue represents a specific value or data element within an Artifact.","properties":{"digest":{"additionalProperties":{"type":"string"},"type":"object"},"uri":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"type":"array"},"name":{"type":"string"},"outputs":{"items":{"description":"Artifact represents an artifact within a system, potentially containing multiple values\nassociated with it.","properties":{"buildOutput":{"description":"Indicate if the artifact is a build output or a by-product","type":"boolean"},"name":{"description":"The artifact's identifying category name","type":"string"},"values":{"description":"A collection of values related to the artifact","items":{"description":"ArtifactValue represents a specific value or data element within an Artifact.","properties":{"digest":{"additionalProperties":{"type":"string"},"type":"object"},"uri":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"type":"array"},"provenance":{"description":"Provenance contains metadata about resources used in the TaskRun/PipelineRun\nsuch as the source from where a remote build definition was fetched.\nThis field aims to carry minimum amoumt of metadata in *Run status so that\nTekton Chains can capture them in the provenance.","properties":{"configSource":{"description":"Deprecated: Use RefSource instead","properties":{"digest":{"additionalProperties":{"type":"string"},"description":"Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.\nExample: {\"sha1\": \"f99d13e554ffcb696dee719fa85b695cb5b0f428\"}","type":"object"},"entryPoint":{"description":"EntryPoint identifies the entry point into the build. This is often a path to a\nbuild definition file and/or a target label within that file.\nExample: \"task/git-clone/0.8/git-clone.yaml\"","type":"string"},"uri":{"description":"URI indicates the identity of the source of the build definition.\nExample: \"https://github.com/tektoncd/catalog\"","type":"string"}},"type":"object"},"featureFlags":{"description":"FeatureFlags identifies the feature flags that were used during the task/pipeline run","properties":{"awaitSidecarReadiness":{"type":"boolean"},"coschedule":{"type":"string"},"disableCredsInit":{"type":"boolean"},"disableInlineSpec":{"type":"string"},"enableAPIFields":{"type":"string"},"enableArtifacts":{"type":"boolean"},"enableCELInWhenExpression":{"type":"boolean"},"enableConciseResolverSyntax":{"type":"boolean"},"enableKeepPodOnCancel":{"type":"boolean"},"enableKubernetesSidecar":{"type":"boolean"},"enableParamEnum":{"type":"boolean"},"enableProvenanceInStatus":{"type":"boolean"},"enableStepActions":{"description":"EnableStepActions is a no-op flag since StepActions are stable","type":"boolean"},"enforceNonfalsifiability":{"type":"string"},"maxResultSize":{"type":"integer"},"requireGitSSHSecretKnownHosts":{"type":"boolean"},"resultExtractionMethod":{"type":"string"},"runningInEnvWithInjectedSidecars":{"type":"boolean"},"sendCloudEventsForRuns":{"type":"boolean"},"setSecurityContext":{"type":"boolean"},"setSecurityContextReadOnlyRootFilesystem":{"type":"boolean"},"verificationNoMatchPolicy":{"description":"VerificationNoMatchPolicy is the feature flag for \"trusted-resources-verification-no-match-policy\"\nVerificationNoMatchPolicy can be set to \"ignore\", \"warn\" and \"fail\" values.\nignore: skip trusted resources verification when no matching verification policies found\nwarn: skip trusted resources verification when no matching verification policies found and log a warning\nfail: fail the taskrun or pipelines run if no matching verification policies found","type":"string"}},"type":"object"},"refSource":{"description":"RefSource identifies the source where a remote task/pipeline came from.","properties":{"digest":{"additionalProperties":{"type":"string"},"description":"Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.\nExample: {\"sha1\": \"f99d13e554ffcb696dee719fa85b695cb5b0f428\"}","type":"object"},"entryPoint":{"description":"EntryPoint identifies the entry point into the build. This is often a path to a\nbuild definition file and/or a target label within that file.\nExample: \"task/git-clone/0.8/git-clone.yaml\"","type":"string"},"uri":{"description":"URI indicates the identity of the source of the build definition.\nExample: \"https://github.com/tektoncd/catalog\"","type":"string"}},"type":"object"}},"type":"object"},"results":{"items":{"description":"TaskRunResult used to describe the results of a task","properties":{"name":{"description":"Name the given name","type":"string"},"type":{"description":"Type is the user-specified type of the result. The possible type\nis currently \"string\" and will support \"array\" in following work.","type":"string"},"value":{"description":"Value the given value of the result","x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array"},"running":{"description":"Details about a running container","properties":{"startedAt":{"description":"Time at which the container was last (re-)started","format":"date-time","type":"string"}},"type":"object"},"terminated":{"description":"Details about a terminated container","properties":{"containerID":{"description":"Container's ID in the format '\u003ctype\u003e://\u003ccontainer_id\u003e'","type":"string"},"exitCode":{"description":"Exit status from the last termination of the container","format":"int32","type":"integer"},"finishedAt":{"description":"Time at which the container last terminated","format":"date-time","type":"string"},"message":{"description":"Message regarding the last termination of the container","type":"string"},"reason":{"description":"(brief) reason from the last termination of the container","type":"string"},"signal":{"description":"Signal from the last termination of the container","format":"int32","type":"integer"},"startedAt":{"description":"Time at which previous execution of the container started","format":"date-time","type":"string"}},"required":["exitCode"],"type":"object"},"waiting":{"description":"Details about a waiting container","properties":{"message":{"description":"Message regarding why the container is not yet running.","type":"string"},"reason":{"description":"(brief) reason the container is not yet running.","type":"string"}},"type":"object"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"taskResults":{"description":"TaskRunResults are the list of results written out by the task's containers","items":{"description":"TaskRunResult used to describe the results of a task","properties":{"name":{"description":"Name the given name","type":"string"},"type":{"description":"Type is the user-specified type of the result. The possible type\nis currently \"string\" and will support \"array\" in following work.","type":"string"},"value":{"description":"Value the given value of the result","x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"taskSpec":{"description":"TaskSpec contains the Spec from the dereferenced Task definition used to instantiate this TaskRun.\nSee Task.spec (API version tekton.dev/v1beta1)","x-kubernetes-preserve-unknown-fields":true}},"required":["podName"],"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}},{"additionalPrinterColumns":[{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].status","name":"Succeeded","type":"string"},{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].reason","name":"Reason","type":"string"},{"jsonPath":".status.startTime","name":"StartTime","type":"date"},{"jsonPath":".status.completionTime","name":"CompletionTime","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"TaskRun represents a single execution of a Task. TaskRuns are how the steps\nspecified in a Task are executed; they specify the parameters and resources\nused to run the steps in a Task.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"TaskRunSpec defines the desired state of TaskRun","properties":{"computeResources":{"description":"Compute resources to use for this TaskRun","properties":{"claims":{"description":"Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.","items":{"description":"ResourceClaim references one entry in PodSpec.ResourceClaims.","properties":{"name":{"description":"Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.","type":"string"},"request":{"description":"Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"},"debug":{"description":"TaskRunDebug defines the breakpoint config for a particular TaskRun","properties":{"breakpoints":{"description":"TaskBreakpoints defines the breakpoint config for a particular Task","properties":{"beforeSteps":{"items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"onFailure":{"description":"if enabled, pause TaskRun on failure of a step\nfailed step will not exit","type":"string"}},"type":"object"}},"type":"object"},"params":{"description":"Params is a list of Param","items":{"description":"Param declares an ParamValues to use for the parameter called name.","properties":{"name":{"type":"string"},"value":{"x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"podTemplate":{"description":"PodTemplate holds pod specific configuration","properties":{"affinity":{"description":"If specified, the pod's scheduling constraints.\nSee Pod.spec.affinity (API version: v1)","x-kubernetes-preserve-unknown-fields":true},"automountServiceAccountToken":{"description":"AutomountServiceAccountToken indicates whether pods running as this\nservice account should have an API token automatically mounted.","type":"boolean"},"dnsConfig":{"description":"Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.","properties":{"nameservers":{"description":"A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"options":{"description":"A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.","items":{"description":"PodDNSConfigOption defines DNS resolver options of a pod.","properties":{"name":{"description":"Name is this DNS resolver option's name.\nRequired.","type":"string"},"value":{"description":"Value is this DNS resolver option's value.","type":"string"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"searches":{"description":"A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"dnsPolicy":{"description":"Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are\n'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig\nwill be merged with the policy selected with DNSPolicy.","type":"string"},"enableServiceLinks":{"description":"EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true.","type":"boolean"},"env":{"description":"List of environment variables that can be provided to the containers belonging to the pod.","items":{"description":"EnvVar represents an environment variable present in a Container.","properties":{"name":{"description":"Name of the environment variable. Must be a C_IDENTIFIER.","type":"string"},"value":{"description":"Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".","type":"string"},"valueFrom":{"description":"Source for the environment variable's value. Cannot be used if value is not empty.","properties":{"configMapKeyRef":{"description":"Selects a key of a ConfigMap.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object","x-kubernetes-map-type":"atomic"},"fieldRef":{"description":"Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object","x-kubernetes-map-type":"atomic"},"resourceFieldRef":{"description":"Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Specifies the output format of the exposed resources, defaults to \"1\"","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object","x-kubernetes-map-type":"atomic"},"secretKeyRef":{"description":"Selects a key of a secret in the pod's namespace","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"hostAliases":{"description":"HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts\nfile if specified. This is only valid for non-hostNetwork pods.","items":{"description":"HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.","properties":{"hostnames":{"description":"Hostnames for the above IP address.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"ip":{"description":"IP address of the host file entry.","type":"string"}},"required":["ip"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"hostNetwork":{"description":"HostNetwork specifies whether the pod may use the node network namespace","type":"boolean"},"imagePullSecrets":{"description":"ImagePullSecrets gives the name of the secret used by the pod to pull the image if specified","items":{"description":"LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"type":"array","x-kubernetes-list-type":"atomic"},"nodeSelector":{"additionalProperties":{"type":"string"},"description":"NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/","type":"object"},"priorityClassName":{"description":"If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.","type":"string"},"runtimeClassName":{"description":"RuntimeClassName refers to a RuntimeClass object in the node.k8s.io\ngroup, which should be used to run this pod. If no RuntimeClass resource\nmatches the named class, the pod will not be run. If unset or empty, the\n\"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md\nThis is a beta feature as of Kubernetes v1.14.","type":"string"},"schedulerName":{"description":"SchedulerName specifies the scheduler to be used to dispatch the Pod","type":"string"},"securityContext":{"description":"SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.\nSee Pod.spec.securityContext (API version: v1)","x-kubernetes-preserve-unknown-fields":true},"tolerations":{"description":"If specified, the pod's tolerations.","items":{"description":"The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.","properties":{"effect":{"description":"Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.","type":"string"},"key":{"description":"Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.","type":"string"},"operator":{"description":"Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.","type":"string"},"tolerationSeconds":{"description":"TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.","format":"int64","type":"integer"},"value":{"description":"Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.","type":"string"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"topologySpreadConstraints":{"description":"TopologySpreadConstraints controls how Pods are spread across your cluster among\nfailure-domains such as regions, zones, nodes, and other user-defined topology domains.","items":{"description":"TopologySpreadConstraint specifies how to spread matching pods among the given topology.","properties":{"labelSelector":{"description":"LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"matchLabelKeys":{"description":"MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"maxSkew":{"description":"MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed.","format":"int32","type":"integer"},"minDomains":{"description":"MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.","format":"int32","type":"integer"},"nodeAffinityPolicy":{"description":"NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.","type":"string"},"nodeTaintsPolicy":{"description":"NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.","type":"string"},"topologyKey":{"description":"TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each \u003ckey, value\u003e as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field.","type":"string"},"whenUnsatisfiable":{"description":"WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field.","type":"string"}},"required":["maxSkew","topologyKey","whenUnsatisfiable"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"volumes":{"description":"List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes\nSee Pod.spec.volumes (API version: v1)","x-kubernetes-preserve-unknown-fields":true}},"type":"object"},"retries":{"description":"Retries represents how many times this TaskRun should be retried in the event of task failure.","type":"integer"},"serviceAccountName":{"type":"string"},"sidecarSpecs":{"description":"Specs to apply to Sidecars in this TaskRun.\nIf a field is specified in both a Sidecar and a SidecarSpec,\nthe value from the SidecarSpec will be used.\nThis field is only supported when the alpha feature gate is enabled.","items":{"description":"TaskRunSidecarSpec is used to override the values of a Sidecar in the corresponding Task.","properties":{"computeResources":{"description":"The resource requirements to apply to the Sidecar.","properties":{"claims":{"description":"Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.","items":{"description":"ResourceClaim references one entry in PodSpec.ResourceClaims.","properties":{"name":{"description":"Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.","type":"string"},"request":{"description":"Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"},"name":{"description":"The name of the Sidecar to override.","type":"string"}},"required":["computeResources","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"status":{"description":"Used for cancelling a TaskRun (and maybe more later on)","type":"string"},"statusMessage":{"description":"Status message for cancellation.","type":"string"},"stepSpecs":{"description":"Specs to apply to Steps in this TaskRun.\nIf a field is specified in both a Step and a StepSpec,\nthe value from the StepSpec will be used.\nThis field is only supported when the alpha feature gate is enabled.","items":{"description":"TaskRunStepSpec is used to override the values of a Step in the corresponding Task.","properties":{"computeResources":{"description":"The resource requirements to apply to the Step.","properties":{"claims":{"description":"Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.","items":{"description":"ResourceClaim references one entry in PodSpec.ResourceClaims.","properties":{"name":{"description":"Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.","type":"string"},"request":{"description":"Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"},"name":{"description":"The name of the Step to override.","type":"string"}},"required":["computeResources","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"taskRef":{"description":"no more than one of the TaskRef and TaskSpec may be specified.","properties":{"apiVersion":{"description":"API version of the referent\nNote: A Task with non-empty APIVersion and Kind is considered a Custom Task","type":"string"},"kind":{"description":"TaskKind indicates the Kind of the Task:\n1. Namespaced Task when Kind is set to \"Task\". If Kind is \"\", it defaults to \"Task\".\n2. Custom Task when Kind is non-empty and APIVersion is non-empty","type":"string"},"name":{"description":"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names","type":"string"},"params":{"description":"Params contains the parameters used to identify the\nreferenced Tekton resource. Example entries might include\n\"repo\" or \"path\" but the set of params ultimately depends on\nthe chosen resolver.","items":{"description":"Param declares an ParamValues to use for the parameter called name.","properties":{"name":{"type":"string"},"value":{"x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"resolver":{"description":"Resolver is the name of the resolver that should perform\nresolution of the referenced Tekton resource, such as \"git\".","type":"string"}},"type":"object"},"taskSpec":{"description":"Specifying TaskSpec can be disabled by setting\n`disable-inline-spec` feature flag.\nSee Task.spec (API version: tekton.dev/v1)","x-kubernetes-preserve-unknown-fields":true},"timeout":{"description":"Time after which one retry attempt times out. Defaults to 1 hour.\nRefer Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration","type":"string"},"workspaces":{"description":"Workspaces is a list of WorkspaceBindings from volumes to workspaces.","items":{"description":"WorkspaceBinding maps a Task's declared workspace to a Volume.","properties":{"configMap":{"description":"ConfigMap represents a configMap that should populate this workspace.","properties":{"defaultMode":{"description":"defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"items":{"description":"items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"key is the key to project.","type":"string"},"mode":{"description":"mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"optional specify whether the ConfigMap or its keys must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"},"csi":{"description":"CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.","properties":{"driver":{"description":"driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.","type":"string"},"fsType":{"description":"fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.","type":"string"},"nodePublishSecretRef":{"description":"nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"readOnly":{"description":"readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).","type":"boolean"},"volumeAttributes":{"additionalProperties":{"type":"string"},"description":"volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.","type":"object"}},"required":["driver"],"type":"object"},"emptyDir":{"description":"EmptyDir represents a temporary directory that shares a Task's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\nEither this OR PersistentVolumeClaim can be used.","properties":{"medium":{"description":"medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir","type":"string"},"sizeLimit":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true}},"type":"object"},"name":{"description":"Name is the name of the workspace populated by the volume.","type":"string"},"persistentVolumeClaim":{"description":"PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace. Either this OR EmptyDir can be used.","properties":{"claimName":{"description":"claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims","type":"string"},"readOnly":{"description":"readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.","type":"boolean"}},"required":["claimName"],"type":"object"},"projected":{"description":"Projected represents a projected volume that should populate this workspace.","properties":{"defaultMode":{"description":"defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"sources":{"description":"sources is the list of volume projections. Each entry in this list\nhandles one source.","items":{"description":"Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set.","properties":{"clusterTrustBundle":{"description":"ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time.","properties":{"labelSelector":{"description":"Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\".","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.","type":"string"},"optional":{"description":"If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.","type":"boolean"},"path":{"description":"Relative path from the volume root to write the bundle.","type":"string"},"signerName":{"description":"Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.","type":"string"}},"required":["path"],"type":"object"},"configMap":{"description":"configMap information about the configMap data to project","properties":{"items":{"description":"items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"key is the key to project.","type":"string"},"mode":{"description":"mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"optional specify whether the ConfigMap or its keys must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"},"downwardAPI":{"description":"downwardAPI information about the downwardAPI data to project","properties":{"items":{"description":"Items is a list of DownwardAPIVolume file","items":{"description":"DownwardAPIVolumeFile represents information to create the file containing the pod field","properties":{"fieldRef":{"description":"Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object","x-kubernetes-map-type":"atomic"},"mode":{"description":"Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'","type":"string"},"resourceFieldRef":{"description":"Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Specifies the output format of the exposed resources, defaults to \"1\"","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object","x-kubernetes-map-type":"atomic"}},"required":["path"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"secret":{"description":"secret information about the secret data to project","properties":{"items":{"description":"items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"key is the key to project.","type":"string"},"mode":{"description":"mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"optional field specify whether the Secret or its key must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"},"serviceAccountToken":{"description":"serviceAccountToken is information about the serviceAccountToken data to project","properties":{"audience":{"description":"audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.","type":"string"},"expirationSeconds":{"description":"expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.","format":"int64","type":"integer"},"path":{"description":"path is the path relative to the mount point of the file to project the\ntoken into.","type":"string"}},"required":["path"],"type":"object"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"secret":{"description":"Secret represents a secret that should populate this workspace.","properties":{"defaultMode":{"description":"defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"items":{"description":"items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"key is the key to project.","type":"string"},"mode":{"description":"mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"optional":{"description":"optional field specify whether the Secret or its keys must be defined","type":"boolean"},"secretName":{"description":"secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret","type":"string"}},"type":"object"},"subPath":{"description":"SubPath is optionally a directory on the volume which should be used\nfor this binding (i.e. the volume will be mounted at this sub directory).","type":"string"},"volumeClaimTemplate":{"description":"VolumeClaimTemplate is a template for a claim that will be created in the same namespace.\nThe PipelineRun controller is responsible for creating a unique claim for each instance of PipelineRun.\nSee PersistentVolumeClaim (API version: v1)","x-kubernetes-preserve-unknown-fields":true}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"status":{"description":"TaskRunStatus defines the observed state of TaskRun","properties":{"annotations":{"additionalProperties":{"type":"string"},"description":"Annotations is additional Status fields for the Resource to save some\nadditional State as well as convey more information to the user. This is\nroughly akin to Annotations on any k8s resource, just the reconciler conveying\nricher information outwards.","type":"object"},"artifacts":{"description":"Artifacts are the list of artifacts written out by the task's containers","properties":{"inputs":{"items":{"description":"Artifact represents an artifact within a system, potentially containing multiple values\nassociated with it.","properties":{"buildOutput":{"description":"Indicate if the artifact is a build output or a by-product","type":"boolean"},"name":{"description":"The artifact's identifying category name","type":"string"},"values":{"description":"A collection of values related to the artifact","items":{"description":"ArtifactValue represents a specific value or data element within an Artifact.","properties":{"digest":{"additionalProperties":{"type":"string"},"type":"object"},"uri":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"outputs":{"items":{"description":"Artifact represents an artifact within a system, potentially containing multiple values\nassociated with it.","properties":{"buildOutput":{"description":"Indicate if the artifact is a build output or a by-product","type":"boolean"},"name":{"description":"The artifact's identifying category name","type":"string"},"values":{"description":"A collection of values related to the artifact","items":{"description":"ArtifactValue represents a specific value or data element within an Artifact.","properties":{"digest":{"additionalProperties":{"type":"string"},"type":"object"},"uri":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"completionTime":{"description":"CompletionTime is the time the build completed.","format":"date-time","type":"string"},"conditions":{"description":"Conditions the latest available observations of a resource's current state.","items":{"description":"Condition defines a readiness condition for a Knative resource.\nSee: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties","properties":{"lastTransitionTime":{"description":"LastTransitionTime is the last time the condition transitioned from one status to another.\nWe use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic\ndifferences (all other things held constant).","type":"string"},"message":{"description":"A human readable message indicating details about the transition.","type":"string"},"reason":{"description":"The reason for the condition's last transition.","type":"string"},"severity":{"description":"Severity with which to treat failures of this type of condition.\nWhen this is not specified, it defaults to Error.","type":"string"},"status":{"description":"Status of the condition, one of True, False, Unknown.","type":"string"},"type":{"description":"Type of condition.","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"observedGeneration":{"description":"ObservedGeneration is the 'Generation' of the Service that\nwas last processed by the controller.","format":"int64","type":"integer"},"podName":{"description":"PodName is the name of the pod responsible for executing this task's steps.","type":"string"},"provenance":{"description":"Provenance contains some key authenticated metadata about how a software artifact was built (what sources, what inputs/outputs, etc.).","properties":{"featureFlags":{"description":"FeatureFlags identifies the feature flags that were used during the task/pipeline run","properties":{"awaitSidecarReadiness":{"type":"boolean"},"coschedule":{"type":"string"},"disableCredsInit":{"type":"boolean"},"disableInlineSpec":{"type":"string"},"enableAPIFields":{"type":"string"},"enableArtifacts":{"type":"boolean"},"enableCELInWhenExpression":{"type":"boolean"},"enableConciseResolverSyntax":{"type":"boolean"},"enableKeepPodOnCancel":{"type":"boolean"},"enableKubernetesSidecar":{"type":"boolean"},"enableParamEnum":{"type":"boolean"},"enableProvenanceInStatus":{"type":"boolean"},"enableStepActions":{"description":"EnableStepActions is a no-op flag since StepActions are stable","type":"boolean"},"enforceNonfalsifiability":{"type":"string"},"maxResultSize":{"type":"integer"},"requireGitSSHSecretKnownHosts":{"type":"boolean"},"resultExtractionMethod":{"type":"string"},"runningInEnvWithInjectedSidecars":{"type":"boolean"},"sendCloudEventsForRuns":{"type":"boolean"},"setSecurityContext":{"type":"boolean"},"setSecurityContextReadOnlyRootFilesystem":{"type":"boolean"},"verificationNoMatchPolicy":{"description":"VerificationNoMatchPolicy is the feature flag for \"trusted-resources-verification-no-match-policy\"\nVerificationNoMatchPolicy can be set to \"ignore\", \"warn\" and \"fail\" values.\nignore: skip trusted resources verification when no matching verification policies found\nwarn: skip trusted resources verification when no matching verification policies found and log a warning\nfail: fail the taskrun or pipelines run if no matching verification policies found","type":"string"}},"type":"object"},"refSource":{"description":"RefSource identifies the source where a remote task/pipeline came from.","properties":{"digest":{"additionalProperties":{"type":"string"},"description":"Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.\nExample: {\"sha1\": \"f99d13e554ffcb696dee719fa85b695cb5b0f428\"}","type":"object"},"entryPoint":{"description":"EntryPoint identifies the entry point into the build. This is often a path to a\nbuild definition file and/or a target label within that file.\nExample: \"task/git-clone/0.8/git-clone.yaml\"","type":"string"},"uri":{"description":"URI indicates the identity of the source of the build definition.\nExample: \"https://github.com/tektoncd/catalog\"","type":"string"}},"type":"object"}},"type":"object"},"results":{"description":"Results are the list of results written out by the task's containers","items":{"description":"TaskRunResult used to describe the results of a task","properties":{"name":{"description":"Name the given name","type":"string"},"type":{"description":"Type is the user-specified type of the result. The possible type\nis currently \"string\" and will support \"array\" in following work.","type":"string"},"value":{"description":"Value the given value of the result","x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"retriesStatus":{"description":"RetriesStatus contains the history of TaskRunStatus in case of a retry in order to keep record of failures.\nAll TaskRunStatus stored in RetriesStatus will have no date within the RetriesStatus as is redundant.","x-kubernetes-preserve-unknown-fields":true},"sidecars":{"description":"The list has one entry per sidecar in the manifest. Each entry is\nrepresents the imageid of the corresponding sidecar.","items":{"description":"SidecarState reports the results of running a sidecar in a Task.","properties":{"container":{"type":"string"},"imageID":{"type":"string"},"name":{"type":"string"},"running":{"description":"Details about a running container","properties":{"startedAt":{"description":"Time at which the container was last (re-)started","format":"date-time","type":"string"}},"type":"object"},"terminated":{"description":"Details about a terminated container","properties":{"containerID":{"description":"Container's ID in the format '\u003ctype\u003e://\u003ccontainer_id\u003e'","type":"string"},"exitCode":{"description":"Exit status from the last termination of the container","format":"int32","type":"integer"},"finishedAt":{"description":"Time at which the container last terminated","format":"date-time","type":"string"},"message":{"description":"Message regarding the last termination of the container","type":"string"},"reason":{"description":"(brief) reason from the last termination of the container","type":"string"},"signal":{"description":"Signal from the last termination of the container","format":"int32","type":"integer"},"startedAt":{"description":"Time at which previous execution of the container started","format":"date-time","type":"string"}},"required":["exitCode"],"type":"object"},"waiting":{"description":"Details about a waiting container","properties":{"message":{"description":"Message regarding why the container is not yet running.","type":"string"},"reason":{"description":"(brief) reason the container is not yet running.","type":"string"}},"type":"object"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"spanContext":{"additionalProperties":{"type":"string"},"description":"SpanContext contains tracing span context fields","type":"object"},"startTime":{"description":"StartTime is the time the build is actually started.","format":"date-time","type":"string"},"steps":{"description":"Steps describes the state of each build step container.","items":{"description":"StepState reports the results of running a step in a Task.","properties":{"container":{"type":"string"},"imageID":{"type":"string"},"inputs":{"items":{"description":"Artifact represents an artifact within a system, potentially containing multiple values\nassociated with it.","properties":{"buildOutput":{"description":"Indicate if the artifact is a build output or a by-product","type":"boolean"},"name":{"description":"The artifact's identifying category name","type":"string"},"values":{"description":"A collection of values related to the artifact","items":{"description":"ArtifactValue represents a specific value or data element within an Artifact.","properties":{"digest":{"additionalProperties":{"type":"string"},"type":"object"},"uri":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"type":"array"},"name":{"type":"string"},"outputs":{"items":{"description":"Artifact represents an artifact within a system, potentially containing multiple values\nassociated with it.","properties":{"buildOutput":{"description":"Indicate if the artifact is a build output or a by-product","type":"boolean"},"name":{"description":"The artifact's identifying category name","type":"string"},"values":{"description":"A collection of values related to the artifact","items":{"description":"ArtifactValue represents a specific value or data element within an Artifact.","properties":{"digest":{"additionalProperties":{"type":"string"},"type":"object"},"uri":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"type":"array"},"provenance":{"description":"Provenance contains metadata about resources used in the TaskRun/PipelineRun\nsuch as the source from where a remote build definition was fetched.\nThis field aims to carry minimum amoumt of metadata in *Run status so that\nTekton Chains can capture them in the provenance.","properties":{"featureFlags":{"description":"FeatureFlags identifies the feature flags that were used during the task/pipeline run","properties":{"awaitSidecarReadiness":{"type":"boolean"},"coschedule":{"type":"string"},"disableCredsInit":{"type":"boolean"},"disableInlineSpec":{"type":"string"},"enableAPIFields":{"type":"string"},"enableArtifacts":{"type":"boolean"},"enableCELInWhenExpression":{"type":"boolean"},"enableConciseResolverSyntax":{"type":"boolean"},"enableKeepPodOnCancel":{"type":"boolean"},"enableKubernetesSidecar":{"type":"boolean"},"enableParamEnum":{"type":"boolean"},"enableProvenanceInStatus":{"type":"boolean"},"enableStepActions":{"description":"EnableStepActions is a no-op flag since StepActions are stable","type":"boolean"},"enforceNonfalsifiability":{"type":"string"},"maxResultSize":{"type":"integer"},"requireGitSSHSecretKnownHosts":{"type":"boolean"},"resultExtractionMethod":{"type":"string"},"runningInEnvWithInjectedSidecars":{"type":"boolean"},"sendCloudEventsForRuns":{"type":"boolean"},"setSecurityContext":{"type":"boolean"},"setSecurityContextReadOnlyRootFilesystem":{"type":"boolean"},"verificationNoMatchPolicy":{"description":"VerificationNoMatchPolicy is the feature flag for \"trusted-resources-verification-no-match-policy\"\nVerificationNoMatchPolicy can be set to \"ignore\", \"warn\" and \"fail\" values.\nignore: skip trusted resources verification when no matching verification policies found\nwarn: skip trusted resources verification when no matching verification policies found and log a warning\nfail: fail the taskrun or pipelines run if no matching verification policies found","type":"string"}},"type":"object"},"refSource":{"description":"RefSource identifies the source where a remote task/pipeline came from.","properties":{"digest":{"additionalProperties":{"type":"string"},"description":"Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.\nExample: {\"sha1\": \"f99d13e554ffcb696dee719fa85b695cb5b0f428\"}","type":"object"},"entryPoint":{"description":"EntryPoint identifies the entry point into the build. This is often a path to a\nbuild definition file and/or a target label within that file.\nExample: \"task/git-clone/0.8/git-clone.yaml\"","type":"string"},"uri":{"description":"URI indicates the identity of the source of the build definition.\nExample: \"https://github.com/tektoncd/catalog\"","type":"string"}},"type":"object"}},"type":"object"},"results":{"items":{"description":"TaskRunResult used to describe the results of a task","properties":{"name":{"description":"Name the given name","type":"string"},"type":{"description":"Type is the user-specified type of the result. The possible type\nis currently \"string\" and will support \"array\" in following work.","type":"string"},"value":{"description":"Value the given value of the result","x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array"},"running":{"description":"Details about a running container","properties":{"startedAt":{"description":"Time at which the container was last (re-)started","format":"date-time","type":"string"}},"type":"object"},"terminated":{"description":"Details about a terminated container","properties":{"containerID":{"description":"Container's ID in the format '\u003ctype\u003e://\u003ccontainer_id\u003e'","type":"string"},"exitCode":{"description":"Exit status from the last termination of the container","format":"int32","type":"integer"},"finishedAt":{"description":"Time at which the container last terminated","format":"date-time","type":"string"},"message":{"description":"Message regarding the last termination of the container","type":"string"},"reason":{"description":"(brief) reason from the last termination of the container","type":"string"},"signal":{"description":"Signal from the last termination of the container","format":"int32","type":"integer"},"startedAt":{"description":"Time at which previous execution of the container started","format":"date-time","type":"string"}},"required":["exitCode"],"type":"object"},"terminationReason":{"type":"string"},"waiting":{"description":"Details about a waiting container","properties":{"message":{"description":"Message regarding why the container is not yet running.","type":"string"},"reason":{"description":"(brief) reason the container is not yet running.","type":"string"}},"type":"object"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"taskSpec":{"description":"TaskSpec contains the Spec from the dereferenced Task definition used to instantiate this TaskRun.","properties":{"description":{"description":"Description is a user-facing description of the task that may be\nused to populate a UI.","type":"string"},"displayName":{"description":"DisplayName is a user-facing name of the task that may be\nused to populate a UI.","type":"string"},"params":{"description":"Params is a list of input parameters required to run the task. Params\nmust be supplied as inputs in TaskRuns unless they declare a default\nvalue.","items":{"description":"ParamSpec defines arbitrary parameters needed beyond typed inputs (such as\nresources). Parameter values are provided by users as inputs on a TaskRun\nor PipelineRun.","properties":{"default":{"description":"Default is the value a parameter takes if no input value is supplied. If\ndefault is set, a Task may be executed without a supplied value for the\nparameter.","x-kubernetes-preserve-unknown-fields":true},"description":{"description":"Description is a user-facing description of the parameter that may be\nused to populate a UI.","type":"string"},"enum":{"description":"Enum declares a set of allowed param input values for tasks/pipelines that can be validated.\nIf Enum is not set, no input validation is performed for the param.","items":{"type":"string"},"type":"array"},"name":{"description":"Name declares the name by which a parameter is referenced.","type":"string"},"properties":{"additionalProperties":{"description":"PropertySpec defines the struct for object keys","properties":{"type":{"description":"ParamType indicates the type of an input parameter;\nUsed to distinguish between a single string and an array of strings.","type":"string"}},"type":"object"},"description":"Properties is the JSON Schema properties to support key-value pairs parameter.","type":"object"},"type":{"description":"Type is the user-specified type of the parameter. The possible types\nare currently \"string\", \"array\" and \"object\", and \"string\" is the default.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"results":{"description":"Results are values that this Task can output","items":{"description":"TaskResult used to describe the results of a task","properties":{"description":{"description":"Description is a human-readable description of the result","type":"string"},"name":{"description":"Name the given name","type":"string"},"properties":{"additionalProperties":{"description":"PropertySpec defines the struct for object keys","properties":{"type":{"description":"ParamType indicates the type of an input parameter;\nUsed to distinguish between a single string and an array of strings.","type":"string"}},"type":"object"},"description":"Properties is the JSON Schema properties to support key-value pairs results.","type":"object"},"type":{"description":"Type is the user-specified type of the result. The possible type\nis currently \"string\" and will support \"array\" in following work.","type":"string"},"value":{"description":"Value the expression used to retrieve the value of the result from an underlying Step.","x-kubernetes-preserve-unknown-fields":true}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"sidecars":{"description":"Sidecars are run alongside the Task's step containers. They begin before\nthe steps start and end after the steps complete.","items":{"description":"Sidecar has nearly the same data structure as Step but does not have the ability to timeout.","properties":{"args":{"description":"Arguments to the entrypoint.\nThe image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the Sidecar's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"command":{"description":"Entrypoint array. Not executed within a shell.\nThe image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the Sidecar's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"computeResources":{"description":"ComputeResources required by this Sidecar.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","properties":{"claims":{"description":"Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.","items":{"description":"ResourceClaim references one entry in PodSpec.ResourceClaims.","properties":{"name":{"description":"Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.","type":"string"},"request":{"description":"Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"},"env":{"description":"List of environment variables to set in the Sidecar.\nCannot be updated.","items":{"description":"EnvVar represents an environment variable present in a Container.","properties":{"name":{"description":"Name of the environment variable. Must be a C_IDENTIFIER.","type":"string"},"value":{"description":"Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".","type":"string"},"valueFrom":{"description":"Source for the environment variable's value. Cannot be used if value is not empty.","properties":{"configMapKeyRef":{"description":"Selects a key of a ConfigMap.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object","x-kubernetes-map-type":"atomic"},"fieldRef":{"description":"Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object","x-kubernetes-map-type":"atomic"},"resourceFieldRef":{"description":"Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Specifies the output format of the exposed resources, defaults to \"1\"","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object","x-kubernetes-map-type":"atomic"},"secretKeyRef":{"description":"Selects a key of a secret in the pod's namespace","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"envFrom":{"description":"List of sources to populate environment variables in the Sidecar.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.","items":{"description":"EnvFromSource represents the source of a set of ConfigMaps","properties":{"configMapRef":{"description":"The ConfigMap to select from","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"},"prefix":{"description":"An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.","type":"string"},"secretRef":{"description":"The Secret to select from","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"image":{"description":"Image reference name.\nMore info: https://kubernetes.io/docs/concepts/containers/images","type":"string"},"imagePullPolicy":{"description":"Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images","type":"string"},"lifecycle":{"description":"Actions that the management system should take in response to Sidecar lifecycle events.\nCannot be updated.","properties":{"postStart":{"description":"PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks","properties":{"exec":{"description":"Exec specifies a command to execute in the container.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"httpGet":{"description":"HTTPGet specifies an HTTP GET request to perform.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.","x-kubernetes-int-or-string":true},"scheme":{"description":"Scheme to use for connecting to the host.\nDefaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"sleep":{"description":"Sleep represents a duration that the container should sleep.","properties":{"seconds":{"description":"Seconds is the number of seconds to sleep.","format":"int64","type":"integer"}},"required":["seconds"],"type":"object"},"tcpSocket":{"description":"Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.","x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"},"preStop":{"description":"PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks","properties":{"exec":{"description":"Exec specifies a command to execute in the container.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"httpGet":{"description":"HTTPGet specifies an HTTP GET request to perform.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.","x-kubernetes-int-or-string":true},"scheme":{"description":"Scheme to use for connecting to the host.\nDefaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"sleep":{"description":"Sleep represents a duration that the container should sleep.","properties":{"seconds":{"description":"Seconds is the number of seconds to sleep.","format":"int64","type":"integer"}},"required":["seconds"],"type":"object"},"tcpSocket":{"description":"Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.","x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"}},"type":"object"}},"type":"object"},"livenessProbe":{"description":"Periodic probe of Sidecar liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","properties":{"exec":{"description":"Exec specifies a command to execute in the container.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"failureThreshold":{"description":"Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.","format":"int32","type":"integer"},"grpc":{"description":"GRPC specifies a GRPC HealthCheckRequest.","properties":{"port":{"description":"Port number of the gRPC service. Number must be in the range 1 to 65535.","format":"int32","type":"integer"},"service":{"default":"","description":"Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.","type":"string"}},"required":["port"],"type":"object"},"httpGet":{"description":"HTTPGet specifies an HTTP GET request to perform.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.","x-kubernetes-int-or-string":true},"scheme":{"description":"Scheme to use for connecting to the host.\nDefaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"description":"Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"},"periodSeconds":{"description":"How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.","format":"int32","type":"integer"},"successThreshold":{"description":"Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.","format":"int32","type":"integer"},"tcpSocket":{"description":"TCPSocket specifies a connection to a TCP port.","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.","x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"description":"Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.","format":"int64","type":"integer"},"timeoutSeconds":{"description":"Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"}},"type":"object"},"name":{"description":"Name of the Sidecar specified as a DNS_LABEL.\nEach Sidecar in a Task must have a unique name (DNS_LABEL).\nCannot be updated.","type":"string"},"ports":{"description":"List of ports to expose from the Sidecar. Exposing a port here gives\nthe system additional information about the network connections a\ncontainer uses, but is primarily informational. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nCannot be updated.","items":{"description":"ContainerPort represents a network port in a single container.","properties":{"containerPort":{"description":"Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536.","format":"int32","type":"integer"},"hostIP":{"description":"What host IP to bind the external port to.","type":"string"},"hostPort":{"description":"Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 \u003c x \u003c 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.","format":"int32","type":"integer"},"name":{"description":"If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.","type":"string"},"protocol":{"default":"TCP","description":"Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".","type":"string"}},"required":["containerPort"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["containerPort","protocol"],"x-kubernetes-list-type":"map"},"readinessProbe":{"description":"Periodic probe of Sidecar service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","properties":{"exec":{"description":"Exec specifies a command to execute in the container.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"failureThreshold":{"description":"Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.","format":"int32","type":"integer"},"grpc":{"description":"GRPC specifies a GRPC HealthCheckRequest.","properties":{"port":{"description":"Port number of the gRPC service. Number must be in the range 1 to 65535.","format":"int32","type":"integer"},"service":{"default":"","description":"Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.","type":"string"}},"required":["port"],"type":"object"},"httpGet":{"description":"HTTPGet specifies an HTTP GET request to perform.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.","x-kubernetes-int-or-string":true},"scheme":{"description":"Scheme to use for connecting to the host.\nDefaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"description":"Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"},"periodSeconds":{"description":"How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.","format":"int32","type":"integer"},"successThreshold":{"description":"Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.","format":"int32","type":"integer"},"tcpSocket":{"description":"TCPSocket specifies a connection to a TCP port.","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.","x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"description":"Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.","format":"int64","type":"integer"},"timeoutSeconds":{"description":"Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"}},"type":"object"},"restartPolicy":{"description":"RestartPolicy refers to kubernetes RestartPolicy. It can only be set for an\ninitContainer and must have it's policy set to \"Always\". It is currently\nleft optional to help support Kubernetes versions prior to 1.29 when this feature\nwas introduced.","type":"string"},"script":{"description":"Script is the contents of an executable file to execute.\n\nIf Script is not empty, the Step cannot have an Command or Args.","type":"string"},"securityContext":{"description":"SecurityContext defines the security options the Sidecar should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/","properties":{"allowPrivilegeEscalation":{"description":"AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.","type":"boolean"},"appArmorProfile":{"description":"appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"localhostProfile":{"description":"localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".","type":"string"},"type":{"description":"type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.","type":"string"}},"required":["type"],"type":"object"},"capabilities":{"description":"The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"add":{"description":"Added capabilities","items":{"description":"Capability represent POSIX capabilities type","type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"drop":{"description":"Removed capabilities","items":{"description":"Capability represent POSIX capabilities type","type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"privileged":{"description":"Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.","type":"boolean"},"procMount":{"description":"procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.","type":"string"},"readOnlyRootFilesystem":{"description":"Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.","type":"boolean"},"runAsGroup":{"description":"The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.","format":"int64","type":"integer"},"runAsNonRoot":{"description":"Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.","type":"boolean"},"runAsUser":{"description":"The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.","format":"int64","type":"integer"},"seLinuxOptions":{"description":"The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"level":{"description":"Level is SELinux level label that applies to the container.","type":"string"},"role":{"description":"Role is a SELinux role label that applies to the container.","type":"string"},"type":{"description":"Type is a SELinux type label that applies to the container.","type":"string"},"user":{"description":"User is a SELinux user label that applies to the container.","type":"string"}},"type":"object"},"seccompProfile":{"description":"The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"localhostProfile":{"description":"localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.","type":"string"},"type":{"description":"type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.","type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"description":"The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.","properties":{"gmsaCredentialSpec":{"description":"GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.","type":"string"},"gmsaCredentialSpecName":{"description":"GMSACredentialSpecName is the name of the GMSA credential spec to use.","type":"string"},"hostProcess":{"description":"HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.","type":"boolean"},"runAsUserName":{"description":"The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.","type":"string"}},"type":"object"}},"type":"object"},"startupProbe":{"description":"StartupProbe indicates that the Pod the Sidecar is running in has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","properties":{"exec":{"description":"Exec specifies a command to execute in the container.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"failureThreshold":{"description":"Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.","format":"int32","type":"integer"},"grpc":{"description":"GRPC specifies a GRPC HealthCheckRequest.","properties":{"port":{"description":"Port number of the gRPC service. Number must be in the range 1 to 65535.","format":"int32","type":"integer"},"service":{"default":"","description":"Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.","type":"string"}},"required":["port"],"type":"object"},"httpGet":{"description":"HTTPGet specifies an HTTP GET request to perform.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.","x-kubernetes-int-or-string":true},"scheme":{"description":"Scheme to use for connecting to the host.\nDefaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"description":"Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"},"periodSeconds":{"description":"How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.","format":"int32","type":"integer"},"successThreshold":{"description":"Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.","format":"int32","type":"integer"},"tcpSocket":{"description":"TCPSocket specifies a connection to a TCP port.","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.","x-kubernetes-int-or-string":true}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"description":"Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.","format":"int64","type":"integer"},"timeoutSeconds":{"description":"Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"}},"type":"object"},"stdin":{"description":"Whether this Sidecar should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the Sidecar will always result in EOF.\nDefault is false.","type":"boolean"},"stdinOnce":{"description":"Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on Sidecar start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the Sidecar is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false","type":"boolean"},"terminationMessagePath":{"description":"Optional: Path at which the file to which the Sidecar's termination message\nwill be written is mounted into the Sidecar's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.","type":"string"},"terminationMessagePolicy":{"description":"Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the Sidecar status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of Sidecar log output if the termination\nmessage file is empty and the Sidecar exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.","type":"string"},"tty":{"description":"Whether this Sidecar should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.","type":"boolean"},"volumeDevices":{"description":"volumeDevices is the list of block devices to be used by the Sidecar.","items":{"description":"volumeDevice describes a mapping of a raw block device within a container.","properties":{"devicePath":{"description":"devicePath is the path inside of the container that the device will be mapped to.","type":"string"},"name":{"description":"name must match the name of a persistentVolumeClaim in the pod","type":"string"}},"required":["devicePath","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"volumeMounts":{"description":"Volumes to mount into the Sidecar's filesystem.\nCannot be updated.","items":{"description":"VolumeMount describes a mounting of a Volume within a container.","properties":{"mountPath":{"description":"Path within the container at which the volume should be mounted.  Must\nnot contain ':'.","type":"string"},"mountPropagation":{"description":"mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).","type":"string"},"name":{"description":"This must match the Name of a Volume.","type":"string"},"readOnly":{"description":"Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.","type":"boolean"},"recursiveReadOnly":{"description":"RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.","type":"string"},"subPath":{"description":"Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).","type":"string"},"subPathExpr":{"description":"Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.","type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"workingDir":{"description":"Sidecar's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.","type":"string"},"workspaces":{"description":"This is an alpha field. You must set the \"enable-api-fields\" feature flag to \"alpha\"\nfor this field to be supported.\n\nWorkspaces is a list of workspaces from the Task that this Sidecar wants\nexclusive access to. Adding a workspace to this list means that any\nother Step or Sidecar that does not also request this Workspace will\nnot have access to it.","items":{"description":"WorkspaceUsage is used by a Step or Sidecar to declare that it wants isolated access\nto a Workspace defined in a Task.","properties":{"mountPath":{"description":"MountPath is the path that the workspace should be mounted to inside the Step or Sidecar,\noverriding any MountPath specified in the Task's WorkspaceDeclaration.","type":"string"},"name":{"description":"Name is the name of the workspace this Step or Sidecar wants access to.","type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"stepTemplate":{"description":"StepTemplate can be used as the basis for all step containers within the\nTask, so that the steps inherit settings on the base container.","properties":{"args":{"description":"Arguments to the entrypoint.\nThe image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the Step's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"command":{"description":"Entrypoint array. Not executed within a shell.\nThe image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the Step's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"computeResources":{"description":"ComputeResources required by this Step.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","properties":{"claims":{"description":"Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.","items":{"description":"ResourceClaim references one entry in PodSpec.ResourceClaims.","properties":{"name":{"description":"Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.","type":"string"},"request":{"description":"Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"},"env":{"description":"List of environment variables to set in the Step.\nCannot be updated.","items":{"description":"EnvVar represents an environment variable present in a Container.","properties":{"name":{"description":"Name of the environment variable. Must be a C_IDENTIFIER.","type":"string"},"value":{"description":"Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".","type":"string"},"valueFrom":{"description":"Source for the environment variable's value. Cannot be used if value is not empty.","properties":{"configMapKeyRef":{"description":"Selects a key of a ConfigMap.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object","x-kubernetes-map-type":"atomic"},"fieldRef":{"description":"Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object","x-kubernetes-map-type":"atomic"},"resourceFieldRef":{"description":"Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Specifies the output format of the exposed resources, defaults to \"1\"","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object","x-kubernetes-map-type":"atomic"},"secretKeyRef":{"description":"Selects a key of a secret in the pod's namespace","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"envFrom":{"description":"List of sources to populate environment variables in the Step.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the Step is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.","items":{"description":"EnvFromSource represents the source of a set of ConfigMaps","properties":{"configMapRef":{"description":"The ConfigMap to select from","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"},"prefix":{"description":"An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.","type":"string"},"secretRef":{"description":"The Secret to select from","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"image":{"description":"Image reference name.\nMore info: https://kubernetes.io/docs/concepts/containers/images","type":"string"},"imagePullPolicy":{"description":"Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images","type":"string"},"securityContext":{"description":"SecurityContext defines the security options the Step should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/","properties":{"allowPrivilegeEscalation":{"description":"AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.","type":"boolean"},"appArmorProfile":{"description":"appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"localhostProfile":{"description":"localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".","type":"string"},"type":{"description":"type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.","type":"string"}},"required":["type"],"type":"object"},"capabilities":{"description":"The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"add":{"description":"Added capabilities","items":{"description":"Capability represent POSIX capabilities type","type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"drop":{"description":"Removed capabilities","items":{"description":"Capability represent POSIX capabilities type","type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"privileged":{"description":"Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.","type":"boolean"},"procMount":{"description":"procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.","type":"string"},"readOnlyRootFilesystem":{"description":"Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.","type":"boolean"},"runAsGroup":{"description":"The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.","format":"int64","type":"integer"},"runAsNonRoot":{"description":"Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.","type":"boolean"},"runAsUser":{"description":"The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.","format":"int64","type":"integer"},"seLinuxOptions":{"description":"The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"level":{"description":"Level is SELinux level label that applies to the container.","type":"string"},"role":{"description":"Role is a SELinux role label that applies to the container.","type":"string"},"type":{"description":"Type is a SELinux type label that applies to the container.","type":"string"},"user":{"description":"User is a SELinux user label that applies to the container.","type":"string"}},"type":"object"},"seccompProfile":{"description":"The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"localhostProfile":{"description":"localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.","type":"string"},"type":{"description":"type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.","type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"description":"The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.","properties":{"gmsaCredentialSpec":{"description":"GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.","type":"string"},"gmsaCredentialSpecName":{"description":"GMSACredentialSpecName is the name of the GMSA credential spec to use.","type":"string"},"hostProcess":{"description":"HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.","type":"boolean"},"runAsUserName":{"description":"The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.","type":"string"}},"type":"object"}},"type":"object"},"volumeDevices":{"description":"volumeDevices is the list of block devices to be used by the Step.","items":{"description":"volumeDevice describes a mapping of a raw block device within a container.","properties":{"devicePath":{"description":"devicePath is the path inside of the container that the device will be mapped to.","type":"string"},"name":{"description":"name must match the name of a persistentVolumeClaim in the pod","type":"string"}},"required":["devicePath","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"volumeMounts":{"description":"Volumes to mount into the Step's filesystem.\nCannot be updated.","items":{"description":"VolumeMount describes a mounting of a Volume within a container.","properties":{"mountPath":{"description":"Path within the container at which the volume should be mounted.  Must\nnot contain ':'.","type":"string"},"mountPropagation":{"description":"mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).","type":"string"},"name":{"description":"This must match the Name of a Volume.","type":"string"},"readOnly":{"description":"Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.","type":"boolean"},"recursiveReadOnly":{"description":"RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.","type":"string"},"subPath":{"description":"Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).","type":"string"},"subPathExpr":{"description":"Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.","type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"workingDir":{"description":"Step's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.","type":"string"}},"type":"object"},"steps":{"description":"Steps are the steps of the build; each step is run sequentially with the\nsource mounted into /workspace.","items":{"description":"Step runs a subcomponent of a Task","properties":{"args":{"description":"Arguments to the entrypoint.\nThe image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"command":{"description":"Entrypoint array. Not executed within a shell.\nThe image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"computeResources":{"description":"ComputeResources required by this Step.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","properties":{"claims":{"description":"Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.","items":{"description":"ResourceClaim references one entry in PodSpec.ResourceClaims.","properties":{"name":{"description":"Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.","type":"string"},"request":{"description":"Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"},"env":{"description":"List of environment variables to set in the Step.\nCannot be updated.","items":{"description":"EnvVar represents an environment variable present in a Container.","properties":{"name":{"description":"Name of the environment variable. Must be a C_IDENTIFIER.","type":"string"},"value":{"description":"Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".","type":"string"},"valueFrom":{"description":"Source for the environment variable's value. Cannot be used if value is not empty.","properties":{"configMapKeyRef":{"description":"Selects a key of a ConfigMap.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object","x-kubernetes-map-type":"atomic"},"fieldRef":{"description":"Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object","x-kubernetes-map-type":"atomic"},"resourceFieldRef":{"description":"Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Specifies the output format of the exposed resources, defaults to \"1\"","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object","x-kubernetes-map-type":"atomic"},"secretKeyRef":{"description":"Selects a key of a secret in the pod's namespace","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"envFrom":{"description":"List of sources to populate environment variables in the Step.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the Step is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.","items":{"description":"EnvFromSource represents the source of a set of ConfigMaps","properties":{"configMapRef":{"description":"The ConfigMap to select from","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"},"prefix":{"description":"An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.","type":"string"},"secretRef":{"description":"The Secret to select from","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret must be defined","type":"boolean"}},"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"image":{"description":"Docker image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images","type":"string"},"imagePullPolicy":{"description":"Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images","type":"string"},"name":{"description":"Name of the Step specified as a DNS_LABEL.\nEach Step in a Task must have a unique name.","type":"string"},"onError":{"description":"OnError defines the exiting behavior of a container on error\ncan be set to [ continue | stopAndFail ]","type":"string"},"params":{"description":"Params declares parameters passed to this step action.","items":{"description":"Param declares an ParamValues to use for the parameter called name.","properties":{"name":{"type":"string"},"value":{"x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"ref":{"description":"Contains the reference to an existing StepAction.","properties":{"name":{"description":"Name of the referenced step","type":"string"},"params":{"description":"Params contains the parameters used to identify the\nreferenced Tekton resource. Example entries might include\n\"repo\" or \"path\" but the set of params ultimately depends on\nthe chosen resolver.","items":{"description":"Param declares an ParamValues to use for the parameter called name.","properties":{"name":{"type":"string"},"value":{"x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"resolver":{"description":"Resolver is the name of the resolver that should perform\nresolution of the referenced Tekton resource, such as \"git\".","type":"string"}},"type":"object"},"results":{"description":"Results declares StepResults produced by the Step.\n\nIt can be used in an inlined Step when used to store Results to $(step.results.resultName.path).\nIt cannot be used when referencing StepActions using [v1.Step.Ref].\nThe Results declared by the StepActions will be stored here instead.","items":{"description":"StepResult used to describe the Results of a Step.","properties":{"description":{"description":"Description is a human-readable description of the result","type":"string"},"name":{"description":"Name the given name","type":"string"},"properties":{"additionalProperties":{"description":"PropertySpec defines the struct for object keys","properties":{"type":{"description":"ParamType indicates the type of an input parameter;\nUsed to distinguish between a single string and an array of strings.","type":"string"}},"type":"object"},"description":"Properties is the JSON Schema properties to support key-value pairs results.","type":"object"},"type":{"description":"The possible types are 'string', 'array', and 'object', with 'string' as the default.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"script":{"description":"Script is the contents of an executable file to execute.\n\nIf Script is not empty, the Step cannot have an Command and the Args will be passed to the Script.","type":"string"},"securityContext":{"description":"SecurityContext defines the security options the Step should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/","properties":{"allowPrivilegeEscalation":{"description":"AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.","type":"boolean"},"appArmorProfile":{"description":"appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"localhostProfile":{"description":"localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".","type":"string"},"type":{"description":"type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.","type":"string"}},"required":["type"],"type":"object"},"capabilities":{"description":"The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"add":{"description":"Added capabilities","items":{"description":"Capability represent POSIX capabilities type","type":"string"},"type":"array","x-kubernetes-list-type":"atomic"},"drop":{"description":"Removed capabilities","items":{"description":"Capability represent POSIX capabilities type","type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"privileged":{"description":"Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.","type":"boolean"},"procMount":{"description":"procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.","type":"string"},"readOnlyRootFilesystem":{"description":"Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.","type":"boolean"},"runAsGroup":{"description":"The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.","format":"int64","type":"integer"},"runAsNonRoot":{"description":"Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.","type":"boolean"},"runAsUser":{"description":"The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.","format":"int64","type":"integer"},"seLinuxOptions":{"description":"The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"level":{"description":"Level is SELinux level label that applies to the container.","type":"string"},"role":{"description":"Role is a SELinux role label that applies to the container.","type":"string"},"type":{"description":"Type is a SELinux type label that applies to the container.","type":"string"},"user":{"description":"User is a SELinux user label that applies to the container.","type":"string"}},"type":"object"},"seccompProfile":{"description":"The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.","properties":{"localhostProfile":{"description":"localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.","type":"string"},"type":{"description":"type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.","type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"description":"The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.","properties":{"gmsaCredentialSpec":{"description":"GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.","type":"string"},"gmsaCredentialSpecName":{"description":"GMSACredentialSpecName is the name of the GMSA credential spec to use.","type":"string"},"hostProcess":{"description":"HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.","type":"boolean"},"runAsUserName":{"description":"The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.","type":"string"}},"type":"object"}},"type":"object"},"stderrConfig":{"description":"Stores configuration for the stderr stream of the step.","properties":{"path":{"description":"Path to duplicate stdout stream to on container's local filesystem.","type":"string"}},"type":"object"},"stdoutConfig":{"description":"Stores configuration for the stdout stream of the step.","properties":{"path":{"description":"Path to duplicate stdout stream to on container's local filesystem.","type":"string"}},"type":"object"},"timeout":{"description":"Timeout is the time after which the step times out. Defaults to never.\nRefer to Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration","type":"string"},"volumeDevices":{"description":"volumeDevices is the list of block devices to be used by the Step.","items":{"description":"volumeDevice describes a mapping of a raw block device within a container.","properties":{"devicePath":{"description":"devicePath is the path inside of the container that the device will be mapped to.","type":"string"},"name":{"description":"name must match the name of a persistentVolumeClaim in the pod","type":"string"}},"required":["devicePath","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"volumeMounts":{"description":"Volumes to mount into the Step's filesystem.\nCannot be updated.","items":{"description":"VolumeMount describes a mounting of a Volume within a container.","properties":{"mountPath":{"description":"Path within the container at which the volume should be mounted.  Must\nnot contain ':'.","type":"string"},"mountPropagation":{"description":"mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).","type":"string"},"name":{"description":"This must match the Name of a Volume.","type":"string"},"readOnly":{"description":"Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.","type":"boolean"},"recursiveReadOnly":{"description":"RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.","type":"string"},"subPath":{"description":"Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).","type":"string"},"subPathExpr":{"description":"Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.","type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"when":{"description":"When is a list of when expressions that need to be true for the task to run","items":{"description":"WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run\nto determine whether the Task should be executed or skipped","properties":{"cel":{"description":"CEL is a string of Common Language Expression, which can be used to conditionally execute\nthe task based on the result of the expression evaluation\nMore info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md","type":"string"},"input":{"description":"Input is the string for guard checking which can be a static input or an output from a parent Task","type":"string"},"operator":{"description":"Operator that represents an Input's relationship to the values","type":"string"},"values":{"description":"Values is an array of strings, which is compared against the input, for guard checking\nIt must be non-empty","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"},"type":"array"},"workingDir":{"description":"Step's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.","type":"string"},"workspaces":{"description":"This is an alpha field. You must set the \"enable-api-fields\" feature flag to \"alpha\"\nfor this field to be supported.\n\nWorkspaces is a list of workspaces from the Task that this Step wants\nexclusive access to. Adding a workspace to this list means that any\nother Step or Sidecar that does not also request this Workspace will\nnot have access to it.","items":{"description":"WorkspaceUsage is used by a Step or Sidecar to declare that it wants isolated access\nto a Workspace defined in a Task.","properties":{"mountPath":{"description":"MountPath is the path that the workspace should be mounted to inside the Step or Sidecar,\noverriding any MountPath specified in the Task's WorkspaceDeclaration.","type":"string"},"name":{"description":"Name is the name of the workspace this Step or Sidecar wants access to.","type":"string"}},"required":["mountPath","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"volumes":{"description":"Volumes is a collection of volumes that are available to mount into the\nsteps of the build.\nSee Pod.spec.volumes (API version: v1)","x-kubernetes-preserve-unknown-fields":true},"workspaces":{"description":"Workspaces are the volumes that this Task requires.","items":{"description":"WorkspaceDeclaration is a declaration of a volume that a Task requires.","properties":{"description":{"description":"Description is an optional human readable description of this volume.","type":"string"},"mountPath":{"description":"MountPath overrides the directory that the volume will be made available at.","type":"string"},"name":{"description":"Name is the name by which you can bind the volume at runtime.","type":"string"},"optional":{"description":"Optional marks a Workspace as not being required in TaskRuns. By default\nthis field is false and so declared workspaces are required.","type":"boolean"},"readOnly":{"description":"ReadOnly dictates whether a mounted volume is writable. By default this\nfield is false and so mounted volumes are writable.","type":"boolean"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"type":"object"}},"required":["podName"],"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
  creationTimestamp: "2025-05-20T13:06:36Z"
  generation: 2
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v1.0.0
    version: v1.0.0
  name: taskruns.tekton.dev
  resourceVersion: "4273"
  uid: 92dcacf5-04cd-4b9d-9abe-c317bf971d76
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQW1TZ0F3SUJBZ0lRTWlsMDRqdC8xYzZIeTZKdmZLQ2xvekFLQmdncWhrak9QUVFEQWpCT01SUXcKRWdZRFZRUUtFd3RyYm1GMGFYWmxMbVJsZGpFMk1EUUdBMVVFQXhNdGRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxMwpaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpNQjRYRFRJMU1EVXlNREV6TURZME0xb1hEVEkxCk1EVXlOekV6TURZME0xb3dUakVVTUJJR0ExVUVDaE1MYTI1aGRHbDJaUzVrWlhZeE5qQTBCZ05WQkFNVExYUmwKYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmF5NTBaV3QwYjI0dGNHbHdaV3hwYm1WekxuTjJZekJaTUJNRwpCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkJtSGxXQXlvaEl4WVl5cmtUY2xKVXZXYkh5ZWlJUGZoaUh2Cnl5NlhOdVdzTGRIZXN5OFIxbGNVckhwTjltUkdIdnJpdFVXNURYdVRmY2FwSUtzMEF1S2pnZ0VpTUlJQkhqQU8KQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4RwpBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCZDJueTNiSy9rMis4VGdIclBscklZcVIzNTBNSUc4CkJnTlZIUkVFZ2JRd2diR0NHSFJsYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmE0SXBkR1ZyZEc5dUxYQnAKY0dWc2FXNWxjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYT0NMWFJsYTNSdmJpMXdhWEJsYkdsdQpaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWTRJN2RHVnJkRzl1TFhCcGNHVnNhVzVsCmN5MTNaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd3d0NnWUkKS29aSXpqMEVBd0lEU0FBd1JRSWhBTG84YVRuNE5pL2NJVVdUUUFQdDNTOGhkT01UYklORHU5N3J5c3V4OFFEegpBaUJnZHI4bE56dVZQdVNlR2pSWXVvd2xFbWdRSDFUUW5NcEVybXRPMWpKb2dBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        service:
          name: tekton-pipelines-webhook
          namespace: tekton-pipelines
          path: /resource-conversion
          port: 443
      conversionReviewVersions:
      - v1beta1
      - v1
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: TaskRun
    listKind: TaskRunList
    plural: taskruns
    shortNames:
    - tr
    - trs
    singular: taskrun
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
      name: Succeeded
      type: string
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
      name: Reason
      type: string
    - jsonPath: .status.startTime
      name: StartTime
      type: date
    - jsonPath: .status.completionTime
      name: CompletionTime
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          TaskRun represents a single execution of a Task. TaskRuns are how the steps
          specified in a Task are executed; they specify the parameters and resources
          used to run the steps in a Task.

          Deprecated: Please use v1.TaskRun instead.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TaskRunSpec defines the desired state of TaskRun
            properties:
              computeResources:
                description: Compute resources to use for this TaskRun
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              debug:
                description: TaskRunDebug defines the breakpoint config for a particular
                  TaskRun
                properties:
                  breakpoints:
                    description: TaskBreakpoints defines the breakpoint config for
                      a particular Task
                    properties:
                      beforeSteps:
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      onFailure:
                        description: |-
                          if enabled, pause TaskRun on failure of a step
                          failed step will not exit
                        type: string
                    type: object
                type: object
              params:
                description: Params is a list of Param
                items:
                  description: Param declares an ParamValues to use for the parameter
                    called name.
                  properties:
                    name:
                      type: string
                    value:
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  - value
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              podTemplate:
                description: PodTemplate holds pod specific configuration
                properties:
                  affinity:
                    description: |-
                      If specified, the pod's scheduling constraints.
                      See Pod.spec.affinity (API version: v1)
                    x-kubernetes-preserve-unknown-fields: true
                  automountServiceAccountToken:
                    description: |-
                      AutomountServiceAccountToken indicates whether pods running as this
                      service account should have an API token automatically mounted.
                    type: boolean
                  dnsConfig:
                    description: |-
                      Specifies the DNS parameters of a pod.
                      Parameters specified here will be merged to the generated DNS
                      configuration based on DNSPolicy.
                    properties:
                      nameservers:
                        description: |-
                          A list of DNS name server IP addresses.
                          This will be appended to the base nameservers generated from DNSPolicy.
                          Duplicated nameservers will be removed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      options:
                        description: |-
                          A list of DNS resolver options.
                          This will be merged with the base options generated from DNSPolicy.
                          Duplicated entries will be removed. Resolution options given in Options
                          will override those that appear in the base DNSPolicy.
                        items:
                          description: PodDNSConfigOption defines DNS resolver options
                            of a pod.
                          properties:
                            name:
                              description: |-
                                Name is this DNS resolver option's name.
                                Required.
                              type: string
                            value:
                              description: Value is this DNS resolver option's value.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      searches:
                        description: |-
                          A list of DNS search domains for host-name lookup.
                          This will be appended to the base search paths generated from DNSPolicy.
                          Duplicated search paths will be removed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  dnsPolicy:
                    description: |-
                      Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are
                      'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig
                      will be merged with the policy selected with DNSPolicy.
                    type: string
                  enableServiceLinks:
                    description: |-
                      EnableServiceLinks indicates whether information about services should be injected into pod's
                      environment variables, matching the syntax of Docker links.
                      Optional: Defaults to true.
                    type: boolean
                  env:
                    description: List of environment variables that can be provided
                      to the containers belonging to the pod.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  hostAliases:
                    description: |-
                      HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                      file if specified. This is only valid for non-hostNetwork pods.
                    items:
                      description: |-
                        HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                        pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  hostNetwork:
                    description: HostNetwork specifies whether the pod may use the
                      node network namespace
                    type: boolean
                  imagePullSecrets:
                    description: ImagePullSecrets gives the name of the secret used
                      by the pod to pull the image if specified
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                    x-kubernetes-list-type: atomic
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: |-
                      NodeSelector is a selector which must be true for the pod to fit on a node.
                      Selector which must match a node's labels for the pod to be scheduled on that node.
                      More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                    type: object
                  priorityClassName:
                    description: |-
                      If specified, indicates the pod's priority. "system-node-critical" and
                      "system-cluster-critical" are two special keywords which indicate the
                      highest priorities with the former being the highest priority. Any other
                      name must be defined by creating a PriorityClass object with that name.
                      If not specified, the pod priority will be default or zero if there is no
                      default.
                    type: string
                  runtimeClassName:
                    description: |-
                      RuntimeClassName refers to a RuntimeClass object in the node.k8s.io
                      group, which should be used to run this pod. If no RuntimeClass resource
                      matches the named class, the pod will not be run. If unset or empty, the
                      "legacy" RuntimeClass will be used, which is an implicit class with an
                      empty definition that uses the default runtime handler.
                      More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
                      This is a beta feature as of Kubernetes v1.14.
                    type: string
                  schedulerName:
                    description: SchedulerName specifies the scheduler to be used
                      to dispatch the Pod
                    type: string
                  securityContext:
                    description: |-
                      SecurityContext holds pod-level security attributes and common container settings.
                      Optional: Defaults to empty.  See type description for default values of each field.
                      See Pod.spec.securityContext (API version: v1)
                    x-kubernetes-preserve-unknown-fields: true
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  topologySpreadConstraints:
                    description: |-
                      TopologySpreadConstraints controls how Pods are spread across your cluster among
                      failure-domains such as regions, zones, nodes, and other user-defined topology domains.
                    items:
                      description: TopologySpreadConstraint specifies how to spread
                        matching pods among the given topology.
                      properties:
                        labelSelector:
                          description: |-
                            LabelSelector is used to find matching pods.
                            Pods that match this label selector are counted to determine the number of pods
                            in their corresponding topology domain.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        matchLabelKeys:
                          description: |-
                            MatchLabelKeys is a set of pod label keys to select the pods over which
                            spreading will be calculated. The keys are used to lookup values from the
                            incoming pod labels, those key-value labels are ANDed with labelSelector
                            to select the group of existing pods over which spreading will be calculated
                            for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                            MatchLabelKeys cannot be set when LabelSelector isn't set.
                            Keys that don't exist in the incoming pod labels will
                            be ignored. A null or empty list means only match against labelSelector.

                            This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        maxSkew:
                          description: |-
                            MaxSkew describes the degree to which pods may be unevenly distributed.
                            When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                            between the number of matching pods in the target topology and the global minimum.
                            The global minimum is the minimum number of matching pods in an eligible domain
                            or zero if the number of eligible domains is less than MinDomains.
                            For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                            labelSelector spread as 2/2/1:
                            In this case, the global minimum is 1.
                            | zone1 | zone2 | zone3 |
                            |  P P  |  P P  |   P   |
                            - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                            scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                            violate MaxSkew(1).
                            - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                            When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                            to topologies that satisfy it.
                            It's a required field. Default value is 1 and 0 is not allowed.
                          format: int32
                          type: integer
                        minDomains:
                          description: |-
                            MinDomains indicates a minimum number of eligible domains.
                            When the number of eligible domains with matching topology keys is less than minDomains,
                            Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                            And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                            this value has no effect on scheduling.
                            As a result, when the number of eligible domains is less than minDomains,
                            scheduler won't schedule more than maxSkew Pods to those domains.
                            If value is nil, the constraint behaves as if MinDomains is equal to 1.
                            Valid values are integers greater than 0.
                            When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                            For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                            labelSelector spread as 2/2/2:
                            | zone1 | zone2 | zone3 |
                            |  P P  |  P P  |  P P  |
                            The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                            In this situation, new pod with the same labelSelector cannot be scheduled,
                            because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                            it will violate MaxSkew.
                          format: int32
                          type: integer
                        nodeAffinityPolicy:
                          description: |-
                            NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                            when calculating pod topology spread skew. Options are:
                            - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                            - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                            If this value is nil, the behavior is equivalent to the Honor policy.
                            This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                          type: string
                        nodeTaintsPolicy:
                          description: |-
                            NodeTaintsPolicy indicates how we will treat node taints when calculating
                            pod topology spread skew. Options are:
                            - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                            has a toleration, are included.
                            - Ignore: node taints are ignored. All nodes are included.

                            If this value is nil, the behavior is equivalent to the Ignore policy.
                            This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                          type: string
                        topologyKey:
                          description: |-
                            TopologyKey is the key of node labels. Nodes that have a label with this key
                            and identical values are considered to be in the same topology.
                            We consider each <key, value> as a "bucket", and try to put balanced number
                            of pods into each bucket.
                            We define a domain as a particular instance of a topology.
                            Also, we define an eligible domain as a domain whose nodes meet the requirements of
                            nodeAffinityPolicy and nodeTaintsPolicy.
                            e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                            And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                            It's a required field.
                          type: string
                        whenUnsatisfiable:
                          description: |-
                            WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                            the spread constraint.
                            - DoNotSchedule (default) tells the scheduler not to schedule it.
                            - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                              but giving higher precedence to topologies that would help reduce the
                              skew.
                            A constraint is considered "Unsatisfiable" for an incoming pod
                            if and only if every possible node assignment for that pod would violate
                            "MaxSkew" on some topology.
                            For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                            labelSelector spread as 3/1/1:
                            | zone1 | zone2 | zone3 |
                            | P P P |   P   |   P   |
                            If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                            to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                            MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                            won't make it *more* imbalanced.
                            It's a required field.
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  volumes:
                    description: |-
                      List of volumes that can be mounted by containers belonging to the pod.
                      More info: https://kubernetes.io/docs/concepts/storage/volumes
                      See Pod.spec.volumes (API version: v1)
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              resources:
                description: 'Deprecated: Unused, preserved only for backwards compatibility'
                properties:
                  inputs:
                    description: Inputs holds the inputs resources this task was invoked
                      with
                    items:
                      description: |-
                        TaskResourceBinding points to the PipelineResource that
                        will be used for the Task input or output called Name.

                        Deprecated: Unused, preserved only for backwards compatibility
                      properties:
                        name:
                          description: Name is the name of the PipelineResource in
                            the Pipeline's declaration
                          type: string
                        paths:
                          description: |-
                            Paths will probably be removed in #1284, and then PipelineResourceBinding can be used instead.
                            The optional Path field corresponds to a path on disk at which the Resource can be found
                            (used when providing the resource via mounted volume, overriding the default logic to fetch the Resource).
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        resourceRef:
                          description: |-
                            ResourceRef is a reference to the instance of the actual PipelineResource
                            that should be used
                          properties:
                            apiVersion:
                              description: API version of the referent
                              type: string
                            name:
                              description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                          type: object
                        resourceSpec:
                          description: |-
                            ResourceSpec is specification of a resource that should be created and
                            consumed by the task
                          properties:
                            description:
                              description: |-
                                Description is a user-facing description of the resource that may be
                                used to populate a UI.
                              type: string
                            params:
                              items:
                                description: |-
                                  ResourceParam declares a string value to use for the parameter called Name, and is used in
                                  the specific context of PipelineResources.

                                  Deprecated: Unused, preserved only for backwards compatibility
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            secrets:
                              description: Secrets to fetch to populate some of resource
                                fields
                              items:
                                description: |-
                                  SecretParam indicates which secret can be used to populate a field of the resource

                                  Deprecated: Unused, preserved only for backwards compatibility
                                properties:
                                  fieldName:
                                    type: string
                                  secretKey:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                - fieldName
                                - secretKey
                                - secretName
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            type:
                              description: |-
                                PipelineResourceType represents the type of endpoint the pipelineResource is, so that the
                                controller will know this pipelineResource shouldx be fetched and optionally what
                                additional metatdata should be provided for it.

                                Deprecated: Unused, preserved only for backwards compatibility
                              type: string
                          required:
                          - params
                          - type
                          type: object
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  outputs:
                    description: Outputs holds the inputs resources this task was
                      invoked with
                    items:
                      description: |-
                        TaskResourceBinding points to the PipelineResource that
                        will be used for the Task input or output called Name.

                        Deprecated: Unused, preserved only for backwards compatibility
                      properties:
                        name:
                          description: Name is the name of the PipelineResource in
                            the Pipeline's declaration
                          type: string
                        paths:
                          description: |-
                            Paths will probably be removed in #1284, and then PipelineResourceBinding can be used instead.
                            The optional Path field corresponds to a path on disk at which the Resource can be found
                            (used when providing the resource via mounted volume, overriding the default logic to fetch the Resource).
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        resourceRef:
                          description: |-
                            ResourceRef is a reference to the instance of the actual PipelineResource
                            that should be used
                          properties:
                            apiVersion:
                              description: API version of the referent
                              type: string
                            name:
                              description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                          type: object
                        resourceSpec:
                          description: |-
                            ResourceSpec is specification of a resource that should be created and
                            consumed by the task
                          properties:
                            description:
                              description: |-
                                Description is a user-facing description of the resource that may be
                                used to populate a UI.
                              type: string
                            params:
                              items:
                                description: |-
                                  ResourceParam declares a string value to use for the parameter called Name, and is used in
                                  the specific context of PipelineResources.

                                  Deprecated: Unused, preserved only for backwards compatibility
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            secrets:
                              description: Secrets to fetch to populate some of resource
                                fields
                              items:
                                description: |-
                                  SecretParam indicates which secret can be used to populate a field of the resource

                                  Deprecated: Unused, preserved only for backwards compatibility
                                properties:
                                  fieldName:
                                    type: string
                                  secretKey:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                - fieldName
                                - secretKey
                                - secretName
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            type:
                              description: |-
                                PipelineResourceType represents the type of endpoint the pipelineResource is, so that the
                                controller will know this pipelineResource shouldx be fetched and optionally what
                                additional metatdata should be provided for it.

                                Deprecated: Unused, preserved only for backwards compatibility
                              type: string
                          required:
                          - params
                          - type
                          type: object
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              retries:
                description: Retries represents how many times this TaskRun should
                  be retried in the event of Task failure.
                type: integer
              serviceAccountName:
                type: string
              sidecarOverrides:
                description: |-
                  Overrides to apply to Sidecars in this TaskRun.
                  If a field is specified in both a Sidecar and a SidecarOverride,
                  the value from the SidecarOverride will be used.
                  This field is only supported when the alpha feature gate is enabled.
                items:
                  description: TaskRunSidecarOverride is used to override the values
                    of a Sidecar in the corresponding Task.
                  properties:
                    name:
                      description: The name of the Sidecar to override.
                      type: string
                    resources:
                      description: The resource requirements to apply to the Sidecar.
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.

                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.

                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                              request:
                                description: |-
                                  Request is the name chosen for a request in the referenced claim.
                                  If empty, everything from the claim is made available, otherwise
                                  only the result of this request.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                  required:
                  - name
                  - resources
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              status:
                description: Used for cancelling a TaskRun (and maybe more later on)
                type: string
              statusMessage:
                description: Status message for cancellation.
                type: string
              stepOverrides:
                description: |-
                  Overrides to apply to Steps in this TaskRun.
                  If a field is specified in both a Step and a StepOverride,
                  the value from the StepOverride will be used.
                  This field is only supported when the alpha feature gate is enabled.
                items:
                  description: TaskRunStepOverride is used to override the values
                    of a Step in the corresponding Task.
                  properties:
                    name:
                      description: The name of the Step to override.
                      type: string
                    resources:
                      description: The resource requirements to apply to the Step.
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.

                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.

                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                              request:
                                description: |-
                                  Request is the name chosen for a request in the referenced claim.
                                  If empty, everything from the claim is made available, otherwise
                                  only the result of this request.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                  required:
                  - name
                  - resources
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              taskRef:
                description: no more than one of the TaskRef and TaskSpec may be specified.
                properties:
                  apiVersion:
                    description: |-
                      API version of the referent
                      Note: A Task with non-empty APIVersion and Kind is considered a Custom Task
                    type: string
                  bundle:
                    description: |-
                      Bundle url reference to a Tekton Bundle.

                      Deprecated: Please use ResolverRef with the bundles resolver instead.
                      The field is staying there for go client backward compatibility, but is not used/allowed anymore.
                    type: string
                  kind:
                    description: |-
                      TaskKind indicates the Kind of the Task:
                      1. Namespaced Task when Kind is set to "Task". If Kind is "", it defaults to "Task".
                      2. Custom Task when Kind is non-empty and APIVersion is non-empty
                    type: string
                  name:
                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  params:
                    description: |-
                      Params contains the parameters used to identify the
                      referenced Tekton resource. Example entries might include
                      "repo" or "path" but the set of params ultimately depends on
                      the chosen resolver.
                    items:
                      description: Param declares an ParamValues to use for the parameter
                        called name.
                      properties:
                        name:
                          type: string
                        value:
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - name
                      - value
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  resolver:
                    description: |-
                      Resolver is the name of the resolver that should perform
                      resolution of the referenced Tekton resource, such as "git".
                    type: string
                type: object
              taskSpec:
                description: |-
                  Specifying TaskSpec can be disabled by setting
                  `disable-inline-spec` feature flag.
                  See Task.spec (API version: tekton.dev/v1beta1)
                x-kubernetes-preserve-unknown-fields: true
              timeout:
                description: |-
                  Time after which one retry attempt times out. Defaults to 1 hour.
                  Refer Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration
                type: string
              workspaces:
                description: Workspaces is a list of WorkspaceBindings from volumes
                  to workspaces.
                items:
                  description: WorkspaceBinding maps a Task's declared workspace to
                    a Volume.
                  properties:
                    configMap:
                      description: ConfigMap represents a configMap that should populate
                        this workspace.
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode is optional: mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                            Defaults to 0644.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        items:
                          description: |-
                            items if unspecified, each key-value pair in the Data field of the referenced
                            ConfigMap will be projected into the volume as a file whose name is the
                            key and content is the value. If specified, the listed keys will be
                            projected into the specified paths, and unlisted keys will not be
                            present. If a key is specified which is not present in the ConfigMap,
                            the volume setup will error unless it is marked optional. Paths must be
                            relative and may not contain the '..' path or start with '..'.
                          items:
                            description: Maps a string key to a path within a volume.
                            properties:
                              key:
                                description: key is the key to project.
                                type: string
                              mode:
                                description: |-
                                  mode is Optional: mode bits used to set permissions on this file.
                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                  If not specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              path:
                                description: |-
                                  path is the relative path of the file to map the key to.
                                  May not be an absolute path.
                                  May not contain the path element '..'.
                                  May not start with the string '..'.
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: optional specify whether the ConfigMap or its
                            keys must be defined
                          type: boolean
                      type: object
                      x-kubernetes-map-type: atomic
                    csi:
                      description: CSI (Container Storage Interface) represents ephemeral
                        storage that is handled by certain external CSI drivers.
                      properties:
                        driver:
                          description: |-
                            driver is the name of the CSI driver that handles this volume.
                            Consult with your admin for the correct name as registered in the cluster.
                          type: string
                        fsType:
                          description: |-
                            fsType to mount. Ex. "ext4", "xfs", "ntfs".
                            If not provided, the empty value is passed to the associated CSI driver
                            which will determine the default filesystem to apply.
                          type: string
                        nodePublishSecretRef:
                          description: |-
                            nodePublishSecretRef is a reference to the secret object containing
                            sensitive information to pass to the CSI driver to complete the CSI
                            NodePublishVolume and NodeUnpublishVolume calls.
                            This field is optional, and  may be empty if no secret is required. If the
                            secret object contains more than one secret, all secret references are passed.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        readOnly:
                          description: |-
                            readOnly specifies a read-only configuration for the volume.
                            Defaults to false (read/write).
                          type: boolean
                        volumeAttributes:
                          additionalProperties:
                            type: string
                          description: |-
                            volumeAttributes stores driver-specific properties that are passed to the CSI
                            driver. Consult your driver's documentation for supported values.
                          type: object
                      required:
                      - driver
                      type: object
                    emptyDir:
                      description: |-
                        EmptyDir represents a temporary directory that shares a Task's lifetime.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                        Either this OR PersistentVolumeClaim can be used.
                      properties:
                        medium:
                          description: |-
                            medium represents what type of storage medium should back this directory.
                            The default is "" which means to use the node's default medium.
                            Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          type: string
                        sizeLimit:
                          anyOf:
                          - type: integer
                          - type: string
                          description: |-
                            sizeLimit is the total amount of local storage required for this EmptyDir volume.
                            The size limit is also applicable for memory medium.
                            The maximum usage on memory medium EmptyDir would be the minimum value between
                            the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                            The default is nil which means that the limit is undefined.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    name:
                      description: Name is the name of the workspace populated by
                        the volume.
                      type: string
                    persistentVolumeClaim:
                      description: |-
                        PersistentVolumeClaimVolumeSource represents a reference to a
                        PersistentVolumeClaim in the same namespace. Either this OR EmptyDir can be used.
                      properties:
                        claimName:
                          description: |-
                            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          type: string
                        readOnly:
                          description: |-
                            readOnly Will force the ReadOnly setting in VolumeMounts.
                            Default false.
                          type: boolean
                      required:
                      - claimName
                      type: object
                    projected:
                      description: Projected represents a projected volume that should
                        populate this workspace.
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode are the mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        sources:
                          description: |-
                            sources is the list of volume projections. Each entry in this list
                            handles one source.
                          items:
                            description: |-
                              Projection that may be projected along with other supported volume types.
                              Exactly one of these fields must be set.
                            properties:
                              clusterTrustBundle:
                                description: |-
                                  ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                  of ClusterTrustBundle objects in an auto-updating file.

                                  Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                  ClusterTrustBundle objects can either be selected by name, or by the
                                  combination of signer name and a label selector.

                                  Kubelet performs aggressive normalization of the PEM contents written
                                  into the pod filesystem.  Esoteric PEM features such as inter-block
                                  comments and block headers are stripped.  Certificates are deduplicated.
                                  The ordering of certificates within the file is arbitrary, and Kubelet
                                  may change the order over time.
                                properties:
                                  labelSelector:
                                    description: |-
                                      Select all ClusterTrustBundles that match this label selector.  Only has
                                      effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                      interpreted as "match nothing".  If set but empty, interpreted as "match
                                      everything".
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  name:
                                    description: |-
                                      Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                      with signerName and labelSelector.
                                    type: string
                                  optional:
                                    description: |-
                                      If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                      aren't available.  If using name, then the named ClusterTrustBundle is
                                      allowed not to exist.  If using signerName, then the combination of
                                      signerName and labelSelector is allowed to match zero
                                      ClusterTrustBundles.
                                    type: boolean
                                  path:
                                    description: Relative path from the volume root
                                      to write the bundle.
                                    type: string
                                  signerName:
                                    description: |-
                                      Select all ClusterTrustBundles that match this signer name.
                                      Mutually-exclusive with name.  The contents of all selected
                                      ClusterTrustBundles will be unified and deduplicated.
                                    type: string
                                required:
                                - path
                                type: object
                              configMap:
                                description: configMap information about the configMap
                                  data to project
                                properties:
                                  items:
                                    description: |-
                                      items if unspecified, each key-value pair in the Data field of the referenced
                                      ConfigMap will be projected into the volume as a file whose name is the
                                      key and content is the value. If specified, the listed keys will be
                                      projected into the specified paths, and unlisted keys will not be
                                      present. If a key is specified which is not present in the ConfigMap,
                                      the volume setup will error unless it is marked optional. Paths must be
                                      relative and may not contain the '..' path or start with '..'.
                                    items:
                                      description: Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: key is the key to project.
                                          type: string
                                        mode:
                                          description: |-
                                            mode is Optional: mode bits used to set permissions on this file.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: |-
                                            path is the relative path of the file to map the key to.
                                            May not be an absolute path.
                                            May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                      - key
                                      - path
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: optional specify whether the ConfigMap
                                      or its keys must be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              downwardAPI:
                                description: downwardAPI information about the downwardAPI
                                  data to project
                                properties:
                                  items:
                                    description: Items is a list of DownwardAPIVolume
                                      file
                                    items:
                                      description: DownwardAPIVolumeFile represents
                                        information to create the file containing
                                        the pod field
                                      properties:
                                        fieldRef:
                                          description: 'Required: Selects a field
                                            of the pod: only annotations, labels,
                                            name, namespace and uid are supported.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        mode:
                                          description: |-
                                            Optional: mode bits used to set permissions on this file, must be an octal value
                                            between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: 'Required: Path is  the relative
                                            path name of the file to be created. Must
                                            not be absolute or contain the ''..''
                                            path. Must be utf-8 encoded. The first
                                            item of the relative path must not start
                                            with ''..'''
                                          type: string
                                        resourceFieldRef:
                                          description: |-
                                            Selects a resource of the container: only resources limits and requests
                                            (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - path
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              secret:
                                description: secret information about the secret data
                                  to project
                                properties:
                                  items:
                                    description: |-
                                      items if unspecified, each key-value pair in the Data field of the referenced
                                      Secret will be projected into the volume as a file whose name is the
                                      key and content is the value. If specified, the listed keys will be
                                      projected into the specified paths, and unlisted keys will not be
                                      present. If a key is specified which is not present in the Secret,
                                      the volume setup will error unless it is marked optional. Paths must be
                                      relative and may not contain the '..' path or start with '..'.
                                    items:
                                      description: Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: key is the key to project.
                                          type: string
                                        mode:
                                          description: |-
                                            mode is Optional: mode bits used to set permissions on this file.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: |-
                                            path is the relative path of the file to map the key to.
                                            May not be an absolute path.
                                            May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                      - key
                                      - path
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: optional field specify whether the
                                      Secret or its key must be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              serviceAccountToken:
                                description: serviceAccountToken is information about
                                  the serviceAccountToken data to project
                                properties:
                                  audience:
                                    description: |-
                                      audience is the intended audience of the token. A recipient of a token
                                      must identify itself with an identifier specified in the audience of the
                                      token, and otherwise should reject the token. The audience defaults to the
                                      identifier of the apiserver.
                                    type: string
                                  expirationSeconds:
                                    description: |-
                                      expirationSeconds is the requested duration of validity of the service
                                      account token. As the token approaches expiration, the kubelet volume
                                      plugin will proactively rotate the service account token. The kubelet will
                                      start trying to rotate the token if the token is older than 80 percent of
                                      its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                      and must be at least 10 minutes.
                                    format: int64
                                    type: integer
                                  path:
                                    description: |-
                                      path is the path relative to the mount point of the file to project the
                                      token into.
                                    type: string
                                required:
                                - path
                                type: object
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    secret:
                      description: Secret represents a secret that should populate
                        this workspace.
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode is Optional: mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values
                            for mode bits. Defaults to 0644.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        items:
                          description: |-
                            items If unspecified, each key-value pair in the Data field of the referenced
                            Secret will be projected into the volume as a file whose name is the
                            key and content is the value. If specified, the listed keys will be
                            projected into the specified paths, and unlisted keys will not be
                            present. If a key is specified which is not present in the Secret,
                            the volume setup will error unless it is marked optional. Paths must be
                            relative and may not contain the '..' path or start with '..'.
                          items:
                            description: Maps a string key to a path within a volume.
                            properties:
                              key:
                                description: key is the key to project.
                                type: string
                              mode:
                                description: |-
                                  mode is Optional: mode bits used to set permissions on this file.
                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                  If not specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              path:
                                description: |-
                                  path is the relative path of the file to map the key to.
                                  May not be an absolute path.
                                  May not contain the path element '..'.
                                  May not start with the string '..'.
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        optional:
                          description: optional field specify whether the Secret or
                            its keys must be defined
                          type: boolean
                        secretName:
                          description: |-
                            secretName is the name of the secret in the pod's namespace to use.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                          type: string
                      type: object
                    subPath:
                      description: |-
                        SubPath is optionally a directory on the volume which should be used
                        for this binding (i.e. the volume will be mounted at this sub directory).
                      type: string
                    volumeClaimTemplate:
                      description: |-
                        VolumeClaimTemplate is a template for a claim that will be created in the same namespace.
                        The PipelineRun controller is responsible for creating a unique claim for each instance of PipelineRun.
                        See PersistentVolumeClaim (API version: v1)
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
          status:
            description: TaskRunStatus defines the observed state of TaskRun
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: |-
                  Annotations is additional Status fields for the Resource to save some
                  additional State as well as convey more information to the user. This is
                  roughly akin to Annotations on any k8s resource, just the reconciler conveying
                  richer information outwards.
                type: object
              cloudEvents:
                description: |-
                  CloudEvents describe the state of each cloud event requested via a
                  CloudEventResource.

                  Deprecated: Removed in v0.44.0.
                items:
                  description: |-
                    CloudEventDelivery is the target of a cloud event along with the state of
                    delivery.
                  properties:
                    status:
                      description: CloudEventDeliveryState reports the state of a
                        cloud event to be sent.
                      properties:
                        condition:
                          description: Current status
                          type: string
                        message:
                          description: Error is the text of error (if any)
                          type: string
                        retryCount:
                          description: RetryCount is the number of attempts of sending
                            the cloud event
                          format: int32
                          type: integer
                        sentAt:
                          description: SentAt is the time at which the last attempt
                            to send the event was made
                          format: date-time
                          type: string
                      required:
                      - message
                      - retryCount
                      type: object
                    target:
                      description: Target points to an addressable
                      type: string
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              completionTime:
                description: CompletionTime is the time the build completed.
                format: date-time
                type: string
              conditions:
                description: Conditions the latest available observations of a resource's
                  current state.
                items:
                  description: |-
                    Condition defines a readiness condition for a Knative resource.
                    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time the condition transitioned from one status to another.
                        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                        differences (all other things held constant).
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: |-
                  ObservedGeneration is the 'Generation' of the Service that
                  was last processed by the controller.
                format: int64
                type: integer
              podName:
                description: PodName is the name of the pod responsible for executing
                  this task's steps.
                type: string
              provenance:
                description: Provenance contains some key authenticated metadata about
                  how a software artifact was built (what sources, what inputs/outputs,
                  etc.).
                properties:
                  configSource:
                    description: 'Deprecated: Use RefSource instead'
                    properties:
                      digest:
                        additionalProperties:
                          type: string
                        description: |-
                          Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                          Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                        type: object
                      entryPoint:
                        description: |-
                          EntryPoint identifies the entry point into the build. This is often a path to a
                          build definition file and/or a target label within that file.
                          Example: "task/git-clone/0.8/git-clone.yaml"
                        type: string
                      uri:
                        description: |-
                          URI indicates the identity of the source of the build definition.
                          Example: "https://github.com/tektoncd/catalog"
                        type: string
                    type: object
                  featureFlags:
                    description: FeatureFlags identifies the feature flags that were
                      used during the task/pipeline run
                    properties:
                      awaitSidecarReadiness:
                        type: boolean
                      coschedule:
                        type: string
                      disableCredsInit:
                        type: boolean
                      disableInlineSpec:
                        type: string
                      enableAPIFields:
                        type: string
                      enableArtifacts:
                        type: boolean
                      enableCELInWhenExpression:
                        type: boolean
                      enableConciseResolverSyntax:
                        type: boolean
                      enableKeepPodOnCancel:
                        type: boolean
                      enableKubernetesSidecar:
                        type: boolean
                      enableParamEnum:
                        type: boolean
                      enableProvenanceInStatus:
                        type: boolean
                      enableStepActions:
                        description: EnableStepActions is a no-op flag since StepActions
                          are stable
                        type: boolean
                      enforceNonfalsifiability:
                        type: string
                      maxResultSize:
                        type: integer
                      requireGitSSHSecretKnownHosts:
                        type: boolean
                      resultExtractionMethod:
                        type: string
                      runningInEnvWithInjectedSidecars:
                        type: boolean
                      sendCloudEventsForRuns:
                        type: boolean
                      setSecurityContext:
                        type: boolean
                      setSecurityContextReadOnlyRootFilesystem:
                        type: boolean
                      verificationNoMatchPolicy:
                        description: |-
                          VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
                          VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
                          ignore: skip trusted resources verification when no matching verification policies found
                          warn: skip trusted resources verification when no matching verification policies found and log a warning
                          fail: fail the taskrun or pipelines run if no matching verification policies found
                        type: string
                    type: object
                  refSource:
                    description: RefSource identifies the source where a remote task/pipeline
                      came from.
                    properties:
                      digest:
                        additionalProperties:
                          type: string
                        description: |-
                          Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                          Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                        type: object
                      entryPoint:
                        description: |-
                          EntryPoint identifies the entry point into the build. This is often a path to a
                          build definition file and/or a target label within that file.
                          Example: "task/git-clone/0.8/git-clone.yaml"
                        type: string
                      uri:
                        description: |-
                          URI indicates the identity of the source of the build definition.
                          Example: "https://github.com/tektoncd/catalog"
                        type: string
                    type: object
                type: object
              resourcesResult:
                description: |-
                  Results from Resources built during the TaskRun.
                  This is tomb-stoned along with the removal of pipelineResources
                  Deprecated: this field is not populated and is preserved only for backwards compatibility
                items:
                  description: |-
                    RunResult is used to write key/value pairs to TaskRun pod termination messages.
                    The key/value pairs may come from the entrypoint binary, or represent a TaskRunResult.
                    If they represent a TaskRunResult, the key is the name of the result and the value is the
                    JSON-serialized value of the result.
                  properties:
                    key:
                      type: string
                    resourceName:
                      description: |-
                        ResourceName may be used in tests, but it is not populated in termination messages.
                        It is preserved here for backwards compatibility and will not be ported to v1.
                      type: string
                    type:
                      description: |-
                        ResultType used to find out whether a RunResult is from a task result or not
                        Note that ResultsType is another type which is used to define the data type
                        (e.g. string, array, etc) we used for Results
                      type: integer
                    value:
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              retriesStatus:
                description: |-
                  RetriesStatus contains the history of TaskRunStatus in case of a retry in order to keep record of failures.
                  All TaskRunStatus stored in RetriesStatus will have no date within the RetriesStatus as is redundant.
                  See TaskRun.status (API version: tekton.dev/v1beta1)
                x-kubernetes-preserve-unknown-fields: true
              sidecars:
                description: |-
                  The list has one entry per sidecar in the manifest. Each entry is
                  represents the imageid of the corresponding sidecar.
                items:
                  description: SidecarState reports the results of running a sidecar
                    in a Task.
                  properties:
                    container:
                      type: string
                    imageID:
                      type: string
                    name:
                      type: string
                    running:
                      description: Details about a running container
                      properties:
                        startedAt:
                          description: Time at which the container was last (re-)started
                          format: date-time
                          type: string
                      type: object
                    terminated:
                      description: Details about a terminated container
                      properties:
                        containerID:
                          description: Container's ID in the format '<type>://<container_id>'
                          type: string
                        exitCode:
                          description: Exit status from the last termination of the
                            container
                          format: int32
                          type: integer
                        finishedAt:
                          description: Time at which the container last terminated
                          format: date-time
                          type: string
                        message:
                          description: Message regarding the last termination of the
                            container
                          type: string
                        reason:
                          description: (brief) reason from the last termination of
                            the container
                          type: string
                        signal:
                          description: Signal from the last termination of the container
                          format: int32
                          type: integer
                        startedAt:
                          description: Time at which previous execution of the container
                            started
                          format: date-time
                          type: string
                      required:
                      - exitCode
                      type: object
                    waiting:
                      description: Details about a waiting container
                      properties:
                        message:
                          description: Message regarding why the container is not
                            yet running.
                          type: string
                        reason:
                          description: (brief) reason the container is not yet running.
                          type: string
                      type: object
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              spanContext:
                additionalProperties:
                  type: string
                description: SpanContext contains tracing span context fields
                type: object
              startTime:
                description: StartTime is the time the build is actually started.
                format: date-time
                type: string
              steps:
                description: Steps describes the state of each build step container.
                items:
                  description: StepState reports the results of running a step in
                    a Task.
                  properties:
                    container:
                      type: string
                    imageID:
                      type: string
                    inputs:
                      items:
                        description: |-
                          Artifact represents an artifact within a system, potentially containing multiple values
                          associated with it.
                        properties:
                          buildOutput:
                            description: Indicate if the artifact is a build output
                              or a by-product
                            type: boolean
                          name:
                            description: The artifact's identifying category name
                            type: string
                          values:
                            description: A collection of values related to the artifact
                            items:
                              description: ArtifactValue represents a specific value
                                or data element within an Artifact.
                              properties:
                                digest:
                                  additionalProperties:
                                    type: string
                                  type: object
                                uri:
                                  type: string
                              type: object
                            type: array
                        type: object
                      type: array
                    name:
                      type: string
                    outputs:
                      items:
                        description: |-
                          Artifact represents an artifact within a system, potentially containing multiple values
                          associated with it.
                        properties:
                          buildOutput:
                            description: Indicate if the artifact is a build output
                              or a by-product
                            type: boolean
                          name:
                            description: The artifact's identifying category name
                            type: string
                          values:
                            description: A collection of values related to the artifact
                            items:
                              description: ArtifactValue represents a specific value
                                or data element within an Artifact.
                              properties:
                                digest:
                                  additionalProperties:
                                    type: string
                                  type: object
                                uri:
                                  type: string
                              type: object
                            type: array
                        type: object
                      type: array
                    provenance:
                      description: |-
                        Provenance contains metadata about resources used in the TaskRun/PipelineRun
                        such as the source from where a remote build definition was fetched.
                        This field aims to carry minimum amoumt of metadata in *Run status so that
                        Tekton Chains can capture them in the provenance.
                      properties:
                        configSource:
                          description: 'Deprecated: Use RefSource instead'
                          properties:
                            digest:
                              additionalProperties:
                                type: string
                              description: |-
                                Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                                Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                              type: object
                            entryPoint:
                              description: |-
                                EntryPoint identifies the entry point into the build. This is often a path to a
                                build definition file and/or a target label within that file.
                                Example: "task/git-clone/0.8/git-clone.yaml"
                              type: string
                            uri:
                              description: |-
                                URI indicates the identity of the source of the build definition.
                                Example: "https://github.com/tektoncd/catalog"
                              type: string
                          type: object
                        featureFlags:
                          description: FeatureFlags identifies the feature flags that
                            were used during the task/pipeline run
                          properties:
                            awaitSidecarReadiness:
                              type: boolean
                            coschedule:
                              type: string
                            disableCredsInit:
                              type: boolean
                            disableInlineSpec:
                              type: string
                            enableAPIFields:
                              type: string
                            enableArtifacts:
                              type: boolean
                            enableCELInWhenExpression:
                              type: boolean
                            enableConciseResolverSyntax:
                              type: boolean
                            enableKeepPodOnCancel:
                              type: boolean
                            enableKubernetesSidecar:
                              type: boolean
                            enableParamEnum:
                              type: boolean
                            enableProvenanceInStatus:
                              type: boolean
                            enableStepActions:
                              description: EnableStepActions is a no-op flag since
                                StepActions are stable
                              type: boolean
                            enforceNonfalsifiability:
                              type: string
                            maxResultSize:
                              type: integer
                            requireGitSSHSecretKnownHosts:
                              type: boolean
                            resultExtractionMethod:
                              type: string
                            runningInEnvWithInjectedSidecars:
                              type: boolean
                            sendCloudEventsForRuns:
                              type: boolean
                            setSecurityContext:
                              type: boolean
                            setSecurityContextReadOnlyRootFilesystem:
                              type: boolean
                            verificationNoMatchPolicy:
                              description: |-
                                VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
                                VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
                                ignore: skip trusted resources verification when no matching verification policies found
                                warn: skip trusted resources verification when no matching verification policies found and log a warning
                                fail: fail the taskrun or pipelines run if no matching verification policies found
                              type: string
                          type: object
                        refSource:
                          description: RefSource identifies the source where a remote
                            task/pipeline came from.
                          properties:
                            digest:
                              additionalProperties:
                                type: string
                              description: |-
                                Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                                Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                              type: object
                            entryPoint:
                              description: |-
                                EntryPoint identifies the entry point into the build. This is often a path to a
                                build definition file and/or a target label within that file.
                                Example: "task/git-clone/0.8/git-clone.yaml"
                              type: string
                            uri:
                              description: |-
                                URI indicates the identity of the source of the build definition.
                                Example: "https://github.com/tektoncd/catalog"
                              type: string
                          type: object
                      type: object
                    results:
                      items:
                        description: TaskRunResult used to describe the results of
                          a task
                        properties:
                          name:
                            description: Name the given name
                            type: string
                          type:
                            description: |-
                              Type is the user-specified type of the result. The possible type
                              is currently "string" and will support "array" in following work.
                            type: string
                          value:
                            description: Value the given value of the result
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    running:
                      description: Details about a running container
                      properties:
                        startedAt:
                          description: Time at which the container was last (re-)started
                          format: date-time
                          type: string
                      type: object
                    terminated:
                      description: Details about a terminated container
                      properties:
                        containerID:
                          description: Container's ID in the format '<type>://<container_id>'
                          type: string
                        exitCode:
                          description: Exit status from the last termination of the
                            container
                          format: int32
                          type: integer
                        finishedAt:
                          description: Time at which the container last terminated
                          format: date-time
                          type: string
                        message:
                          description: Message regarding the last termination of the
                            container
                          type: string
                        reason:
                          description: (brief) reason from the last termination of
                            the container
                          type: string
                        signal:
                          description: Signal from the last termination of the container
                          format: int32
                          type: integer
                        startedAt:
                          description: Time at which previous execution of the container
                            started
                          format: date-time
                          type: string
                      required:
                      - exitCode
                      type: object
                    waiting:
                      description: Details about a waiting container
                      properties:
                        message:
                          description: Message regarding why the container is not
                            yet running.
                          type: string
                        reason:
                          description: (brief) reason the container is not yet running.
                          type: string
                      type: object
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              taskResults:
                description: TaskRunResults are the list of results written out by
                  the task's containers
                items:
                  description: TaskRunResult used to describe the results of a task
                  properties:
                    name:
                      description: Name the given name
                      type: string
                    type:
                      description: |-
                        Type is the user-specified type of the result. The possible type
                        is currently "string" and will support "array" in following work.
                      type: string
                    value:
                      description: Value the given value of the result
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  - value
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              taskSpec:
                description: |-
                  TaskSpec contains the Spec from the dereferenced Task definition used to instantiate this TaskRun.
                  See Task.spec (API version tekton.dev/v1beta1)
                x-kubernetes-preserve-unknown-fields: true
            required:
            - podName
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
      name: Succeeded
      type: string
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
      name: Reason
      type: string
    - jsonPath: .status.startTime
      name: StartTime
      type: date
    - jsonPath: .status.completionTime
      name: CompletionTime
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          TaskRun represents a single execution of a Task. TaskRuns are how the steps
          specified in a Task are executed; they specify the parameters and resources
          used to run the steps in a Task.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TaskRunSpec defines the desired state of TaskRun
            properties:
              computeResources:
                description: Compute resources to use for this TaskRun
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              debug:
                description: TaskRunDebug defines the breakpoint config for a particular
                  TaskRun
                properties:
                  breakpoints:
                    description: TaskBreakpoints defines the breakpoint config for
                      a particular Task
                    properties:
                      beforeSteps:
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      onFailure:
                        description: |-
                          if enabled, pause TaskRun on failure of a step
                          failed step will not exit
                        type: string
                    type: object
                type: object
              params:
                description: Params is a list of Param
                items:
                  description: Param declares an ParamValues to use for the parameter
                    called name.
                  properties:
                    name:
                      type: string
                    value:
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  - value
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              podTemplate:
                description: PodTemplate holds pod specific configuration
                properties:
                  affinity:
                    description: |-
                      If specified, the pod's scheduling constraints.
                      See Pod.spec.affinity (API version: v1)
                    x-kubernetes-preserve-unknown-fields: true
                  automountServiceAccountToken:
                    description: |-
                      AutomountServiceAccountToken indicates whether pods running as this
                      service account should have an API token automatically mounted.
                    type: boolean
                  dnsConfig:
                    description: |-
                      Specifies the DNS parameters of a pod.
                      Parameters specified here will be merged to the generated DNS
                      configuration based on DNSPolicy.
                    properties:
                      nameservers:
                        description: |-
                          A list of DNS name server IP addresses.
                          This will be appended to the base nameservers generated from DNSPolicy.
                          Duplicated nameservers will be removed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      options:
                        description: |-
                          A list of DNS resolver options.
                          This will be merged with the base options generated from DNSPolicy.
                          Duplicated entries will be removed. Resolution options given in Options
                          will override those that appear in the base DNSPolicy.
                        items:
                          description: PodDNSConfigOption defines DNS resolver options
                            of a pod.
                          properties:
                            name:
                              description: |-
                                Name is this DNS resolver option's name.
                                Required.
                              type: string
                            value:
                              description: Value is this DNS resolver option's value.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      searches:
                        description: |-
                          A list of DNS search domains for host-name lookup.
                          This will be appended to the base search paths generated from DNSPolicy.
                          Duplicated search paths will be removed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  dnsPolicy:
                    description: |-
                      Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are
                      'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig
                      will be merged with the policy selected with DNSPolicy.
                    type: string
                  enableServiceLinks:
                    description: |-
                      EnableServiceLinks indicates whether information about services should be injected into pod's
                      environment variables, matching the syntax of Docker links.
                      Optional: Defaults to true.
                    type: boolean
                  env:
                    description: List of environment variables that can be provided
                      to the containers belonging to the pod.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  hostAliases:
                    description: |-
                      HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                      file if specified. This is only valid for non-hostNetwork pods.
                    items:
                      description: |-
                        HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                        pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  hostNetwork:
                    description: HostNetwork specifies whether the pod may use the
                      node network namespace
                    type: boolean
                  imagePullSecrets:
                    description: ImagePullSecrets gives the name of the secret used
                      by the pod to pull the image if specified
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                    x-kubernetes-list-type: atomic
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: |-
                      NodeSelector is a selector which must be true for the pod to fit on a node.
                      Selector which must match a node's labels for the pod to be scheduled on that node.
                      More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                    type: object
                  priorityClassName:
                    description: |-
                      If specified, indicates the pod's priority. "system-node-critical" and
                      "system-cluster-critical" are two special keywords which indicate the
                      highest priorities with the former being the highest priority. Any other
                      name must be defined by creating a PriorityClass object with that name.
                      If not specified, the pod priority will be default or zero if there is no
                      default.
                    type: string
                  runtimeClassName:
                    description: |-
                      RuntimeClassName refers to a RuntimeClass object in the node.k8s.io
                      group, which should be used to run this pod. If no RuntimeClass resource
                      matches the named class, the pod will not be run. If unset or empty, the
                      "legacy" RuntimeClass will be used, which is an implicit class with an
                      empty definition that uses the default runtime handler.
                      More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
                      This is a beta feature as of Kubernetes v1.14.
                    type: string
                  schedulerName:
                    description: SchedulerName specifies the scheduler to be used
                      to dispatch the Pod
                    type: string
                  securityContext:
                    description: |-
                      SecurityContext holds pod-level security attributes and common container settings.
                      Optional: Defaults to empty.  See type description for default values of each field.
                      See Pod.spec.securityContext (API version: v1)
                    x-kubernetes-preserve-unknown-fields: true
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  topologySpreadConstraints:
                    description: |-
                      TopologySpreadConstraints controls how Pods are spread across your cluster among
                      failure-domains such as regions, zones, nodes, and other user-defined topology domains.
                    items:
                      description: TopologySpreadConstraint specifies how to spread
                        matching pods among the given topology.
                      properties:
                        labelSelector:
                          description: |-
                            LabelSelector is used to find matching pods.
                            Pods that match this label selector are counted to determine the number of pods
                            in their corresponding topology domain.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        matchLabelKeys:
                          description: |-
                            MatchLabelKeys is a set of pod label keys to select the pods over which
                            spreading will be calculated. The keys are used to lookup values from the
                            incoming pod labels, those key-value labels are ANDed with labelSelector
                            to select the group of existing pods over which spreading will be calculated
                            for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                            MatchLabelKeys cannot be set when LabelSelector isn't set.
                            Keys that don't exist in the incoming pod labels will
                            be ignored. A null or empty list means only match against labelSelector.

                            This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        maxSkew:
                          description: |-
                            MaxSkew describes the degree to which pods may be unevenly distributed.
                            When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                            between the number of matching pods in the target topology and the global minimum.
                            The global minimum is the minimum number of matching pods in an eligible domain
                            or zero if the number of eligible domains is less than MinDomains.
                            For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                            labelSelector spread as 2/2/1:
                            In this case, the global minimum is 1.
                            | zone1 | zone2 | zone3 |
                            |  P P  |  P P  |   P   |
                            - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                            scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                            violate MaxSkew(1).
                            - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                            When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                            to topologies that satisfy it.
                            It's a required field. Default value is 1 and 0 is not allowed.
                          format: int32
                          type: integer
                        minDomains:
                          description: |-
                            MinDomains indicates a minimum number of eligible domains.
                            When the number of eligible domains with matching topology keys is less than minDomains,
                            Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                            And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                            this value has no effect on scheduling.
                            As a result, when the number of eligible domains is less than minDomains,
                            scheduler won't schedule more than maxSkew Pods to those domains.
                            If value is nil, the constraint behaves as if MinDomains is equal to 1.
                            Valid values are integers greater than 0.
                            When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                            For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                            labelSelector spread as 2/2/2:
                            | zone1 | zone2 | zone3 |
                            |  P P  |  P P  |  P P  |
                            The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                            In this situation, new pod with the same labelSelector cannot be scheduled,
                            because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                            it will violate MaxSkew.
                          format: int32
                          type: integer
                        nodeAffinityPolicy:
                          description: |-
                            NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                            when calculating pod topology spread skew. Options are:
                            - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                            - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                            If this value is nil, the behavior is equivalent to the Honor policy.
                            This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                          type: string
                        nodeTaintsPolicy:
                          description: |-
                            NodeTaintsPolicy indicates how we will treat node taints when calculating
                            pod topology spread skew. Options are:
                            - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                            has a toleration, are included.
                            - Ignore: node taints are ignored. All nodes are included.

                            If this value is nil, the behavior is equivalent to the Ignore policy.
                            This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                          type: string
                        topologyKey:
                          description: |-
                            TopologyKey is the key of node labels. Nodes that have a label with this key
                            and identical values are considered to be in the same topology.
                            We consider each <key, value> as a "bucket", and try to put balanced number
                            of pods into each bucket.
                            We define a domain as a particular instance of a topology.
                            Also, we define an eligible domain as a domain whose nodes meet the requirements of
                            nodeAffinityPolicy and nodeTaintsPolicy.
                            e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                            And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                            It's a required field.
                          type: string
                        whenUnsatisfiable:
                          description: |-
                            WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                            the spread constraint.
                            - DoNotSchedule (default) tells the scheduler not to schedule it.
                            - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                              but giving higher precedence to topologies that would help reduce the
                              skew.
                            A constraint is considered "Unsatisfiable" for an incoming pod
                            if and only if every possible node assignment for that pod would violate
                            "MaxSkew" on some topology.
                            For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                            labelSelector spread as 3/1/1:
                            | zone1 | zone2 | zone3 |
                            | P P P |   P   |   P   |
                            If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                            to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                            MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                            won't make it *more* imbalanced.
                            It's a required field.
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  volumes:
                    description: |-
                      List of volumes that can be mounted by containers belonging to the pod.
                      More info: https://kubernetes.io/docs/concepts/storage/volumes
                      See Pod.spec.volumes (API version: v1)
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              retries:
                description: Retries represents how many times this TaskRun should
                  be retried in the event of task failure.
                type: integer
              serviceAccountName:
                type: string
              sidecarSpecs:
                description: |-
                  Specs to apply to Sidecars in this TaskRun.
                  If a field is specified in both a Sidecar and a SidecarSpec,
                  the value from the SidecarSpec will be used.
                  This field is only supported when the alpha feature gate is enabled.
                items:
                  description: TaskRunSidecarSpec is used to override the values of
                    a Sidecar in the corresponding Task.
                  properties:
                    computeResources:
                      description: The resource requirements to apply to the Sidecar.
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.

                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.

                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                              request:
                                description: |-
                                  Request is the name chosen for a request in the referenced claim.
                                  If empty, everything from the claim is made available, otherwise
                                  only the result of this request.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    name:
                      description: The name of the Sidecar to override.
                      type: string
                  required:
                  - computeResources
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              status:
                description: Used for cancelling a TaskRun (and maybe more later on)
                type: string
              statusMessage:
                description: Status message for cancellation.
                type: string
              stepSpecs:
                description: |-
                  Specs to apply to Steps in this TaskRun.
                  If a field is specified in both a Step and a StepSpec,
                  the value from the StepSpec will be used.
                  This field is only supported when the alpha feature gate is enabled.
                items:
                  description: TaskRunStepSpec is used to override the values of a
                    Step in the corresponding Task.
                  properties:
                    computeResources:
                      description: The resource requirements to apply to the Step.
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.

                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.

                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                              request:
                                description: |-
                                  Request is the name chosen for a request in the referenced claim.
                                  If empty, everything from the claim is made available, otherwise
                                  only the result of this request.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    name:
                      description: The name of the Step to override.
                      type: string
                  required:
                  - computeResources
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              taskRef:
                description: no more than one of the TaskRef and TaskSpec may be specified.
                properties:
                  apiVersion:
                    description: |-
                      API version of the referent
                      Note: A Task with non-empty APIVersion and Kind is considered a Custom Task
                    type: string
                  kind:
                    description: |-
                      TaskKind indicates the Kind of the Task:
                      1. Namespaced Task when Kind is set to "Task". If Kind is "", it defaults to "Task".
                      2. Custom Task when Kind is non-empty and APIVersion is non-empty
                    type: string
                  name:
                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  params:
                    description: |-
                      Params contains the parameters used to identify the
                      referenced Tekton resource. Example entries might include
                      "repo" or "path" but the set of params ultimately depends on
                      the chosen resolver.
                    items:
                      description: Param declares an ParamValues to use for the parameter
                        called name.
                      properties:
                        name:
                          type: string
                        value:
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - name
                      - value
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  resolver:
                    description: |-
                      Resolver is the name of the resolver that should perform
                      resolution of the referenced Tekton resource, such as "git".
                    type: string
                type: object
              taskSpec:
                description: |-
                  Specifying TaskSpec can be disabled by setting
                  `disable-inline-spec` feature flag.
                  See Task.spec (API version: tekton.dev/v1)
                x-kubernetes-preserve-unknown-fields: true
              timeout:
                description: |-
                  Time after which one retry attempt times out. Defaults to 1 hour.
                  Refer Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration
                type: string
              workspaces:
                description: Workspaces is a list of WorkspaceBindings from volumes
                  to workspaces.
                items:
                  description: WorkspaceBinding maps a Task's declared workspace to
                    a Volume.
                  properties:
                    configMap:
                      description: ConfigMap represents a configMap that should populate
                        this workspace.
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode is optional: mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                            Defaults to 0644.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        items:
                          description: |-
                            items if unspecified, each key-value pair in the Data field of the referenced
                            ConfigMap will be projected into the volume as a file whose name is the
                            key and content is the value. If specified, the listed keys will be
                            projected into the specified paths, and unlisted keys will not be
                            present. If a key is specified which is not present in the ConfigMap,
                            the volume setup will error unless it is marked optional. Paths must be
                            relative and may not contain the '..' path or start with '..'.
                          items:
                            description: Maps a string key to a path within a volume.
                            properties:
                              key:
                                description: key is the key to project.
                                type: string
                              mode:
                                description: |-
                                  mode is Optional: mode bits used to set permissions on this file.
                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                  If not specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              path:
                                description: |-
                                  path is the relative path of the file to map the key to.
                                  May not be an absolute path.
                                  May not contain the path element '..'.
                                  May not start with the string '..'.
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: optional specify whether the ConfigMap or its
                            keys must be defined
                          type: boolean
                      type: object
                      x-kubernetes-map-type: atomic
                    csi:
                      description: CSI (Container Storage Interface) represents ephemeral
                        storage that is handled by certain external CSI drivers.
                      properties:
                        driver:
                          description: |-
                            driver is the name of the CSI driver that handles this volume.
                            Consult with your admin for the correct name as registered in the cluster.
                          type: string
                        fsType:
                          description: |-
                            fsType to mount. Ex. "ext4", "xfs", "ntfs".
                            If not provided, the empty value is passed to the associated CSI driver
                            which will determine the default filesystem to apply.
                          type: string
                        nodePublishSecretRef:
                          description: |-
                            nodePublishSecretRef is a reference to the secret object containing
                            sensitive information to pass to the CSI driver to complete the CSI
                            NodePublishVolume and NodeUnpublishVolume calls.
                            This field is optional, and  may be empty if no secret is required. If the
                            secret object contains more than one secret, all secret references are passed.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        readOnly:
                          description: |-
                            readOnly specifies a read-only configuration for the volume.
                            Defaults to false (read/write).
                          type: boolean
                        volumeAttributes:
                          additionalProperties:
                            type: string
                          description: |-
                            volumeAttributes stores driver-specific properties that are passed to the CSI
                            driver. Consult your driver's documentation for supported values.
                          type: object
                      required:
                      - driver
                      type: object
                    emptyDir:
                      description: |-
                        EmptyDir represents a temporary directory that shares a Task's lifetime.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                        Either this OR PersistentVolumeClaim can be used.
                      properties:
                        medium:
                          description: |-
                            medium represents what type of storage medium should back this directory.
                            The default is "" which means to use the node's default medium.
                            Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          type: string
                        sizeLimit:
                          anyOf:
                          - type: integer
                          - type: string
                          description: |-
                            sizeLimit is the total amount of local storage required for this EmptyDir volume.
                            The size limit is also applicable for memory medium.
                            The maximum usage on memory medium EmptyDir would be the minimum value between
                            the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                            The default is nil which means that the limit is undefined.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    name:
                      description: Name is the name of the workspace populated by
                        the volume.
                      type: string
                    persistentVolumeClaim:
                      description: |-
                        PersistentVolumeClaimVolumeSource represents a reference to a
                        PersistentVolumeClaim in the same namespace. Either this OR EmptyDir can be used.
                      properties:
                        claimName:
                          description: |-
                            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          type: string
                        readOnly:
                          description: |-
                            readOnly Will force the ReadOnly setting in VolumeMounts.
                            Default false.
                          type: boolean
                      required:
                      - claimName
                      type: object
                    projected:
                      description: Projected represents a projected volume that should
                        populate this workspace.
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode are the mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        sources:
                          description: |-
                            sources is the list of volume projections. Each entry in this list
                            handles one source.
                          items:
                            description: |-
                              Projection that may be projected along with other supported volume types.
                              Exactly one of these fields must be set.
                            properties:
                              clusterTrustBundle:
                                description: |-
                                  ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                  of ClusterTrustBundle objects in an auto-updating file.

                                  Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                  ClusterTrustBundle objects can either be selected by name, or by the
                                  combination of signer name and a label selector.

                                  Kubelet performs aggressive normalization of the PEM contents written
                                  into the pod filesystem.  Esoteric PEM features such as inter-block
                                  comments and block headers are stripped.  Certificates are deduplicated.
                                  The ordering of certificates within the file is arbitrary, and Kubelet
                                  may change the order over time.
                                properties:
                                  labelSelector:
                                    description: |-
                                      Select all ClusterTrustBundles that match this label selector.  Only has
                                      effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                      interpreted as "match nothing".  If set but empty, interpreted as "match
                                      everything".
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  name:
                                    description: |-
                                      Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                      with signerName and labelSelector.
                                    type: string
                                  optional:
                                    description: |-
                                      If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                      aren't available.  If using name, then the named ClusterTrustBundle is
                                      allowed not to exist.  If using signerName, then the combination of
                                      signerName and labelSelector is allowed to match zero
                                      ClusterTrustBundles.
                                    type: boolean
                                  path:
                                    description: Relative path from the volume root
                                      to write the bundle.
                                    type: string
                                  signerName:
                                    description: |-
                                      Select all ClusterTrustBundles that match this signer name.
                                      Mutually-exclusive with name.  The contents of all selected
                                      ClusterTrustBundles will be unified and deduplicated.
                                    type: string
                                required:
                                - path
                                type: object
                              configMap:
                                description: configMap information about the configMap
                                  data to project
                                properties:
                                  items:
                                    description: |-
                                      items if unspecified, each key-value pair in the Data field of the referenced
                                      ConfigMap will be projected into the volume as a file whose name is the
                                      key and content is the value. If specified, the listed keys will be
                                      projected into the specified paths, and unlisted keys will not be
                                      present. If a key is specified which is not present in the ConfigMap,
                                      the volume setup will error unless it is marked optional. Paths must be
                                      relative and may not contain the '..' path or start with '..'.
                                    items:
                                      description: Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: key is the key to project.
                                          type: string
                                        mode:
                                          description: |-
                                            mode is Optional: mode bits used to set permissions on this file.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: |-
                                            path is the relative path of the file to map the key to.
                                            May not be an absolute path.
                                            May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                      - key
                                      - path
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: optional specify whether the ConfigMap
                                      or its keys must be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              downwardAPI:
                                description: downwardAPI information about the downwardAPI
                                  data to project
                                properties:
                                  items:
                                    description: Items is a list of DownwardAPIVolume
                                      file
                                    items:
                                      description: DownwardAPIVolumeFile represents
                                        information to create the file containing
                                        the pod field
                                      properties:
                                        fieldRef:
                                          description: 'Required: Selects a field
                                            of the pod: only annotations, labels,
                                            name, namespace and uid are supported.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        mode:
                                          description: |-
                                            Optional: mode bits used to set permissions on this file, must be an octal value
                                            between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: 'Required: Path is  the relative
                                            path name of the file to be created. Must
                                            not be absolute or contain the ''..''
                                            path. Must be utf-8 encoded. The first
                                            item of the relative path must not start
                                            with ''..'''
                                          type: string
                                        resourceFieldRef:
                                          description: |-
                                            Selects a resource of the container: only resources limits and requests
                                            (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - path
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              secret:
                                description: secret information about the secret data
                                  to project
                                properties:
                                  items:
                                    description: |-
                                      items if unspecified, each key-value pair in the Data field of the referenced
                                      Secret will be projected into the volume as a file whose name is the
                                      key and content is the value. If specified, the listed keys will be
                                      projected into the specified paths, and unlisted keys will not be
                                      present. If a key is specified which is not present in the Secret,
                                      the volume setup will error unless it is marked optional. Paths must be
                                      relative and may not contain the '..' path or start with '..'.
                                    items:
                                      description: Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: key is the key to project.
                                          type: string
                                        mode:
                                          description: |-
                                            mode is Optional: mode bits used to set permissions on this file.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: |-
                                            path is the relative path of the file to map the key to.
                                            May not be an absolute path.
                                            May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                      - key
                                      - path
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: optional field specify whether the
                                      Secret or its key must be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              serviceAccountToken:
                                description: serviceAccountToken is information about
                                  the serviceAccountToken data to project
                                properties:
                                  audience:
                                    description: |-
                                      audience is the intended audience of the token. A recipient of a token
                                      must identify itself with an identifier specified in the audience of the
                                      token, and otherwise should reject the token. The audience defaults to the
                                      identifier of the apiserver.
                                    type: string
                                  expirationSeconds:
                                    description: |-
                                      expirationSeconds is the requested duration of validity of the service
                                      account token. As the token approaches expiration, the kubelet volume
                                      plugin will proactively rotate the service account token. The kubelet will
                                      start trying to rotate the token if the token is older than 80 percent of
                                      its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                      and must be at least 10 minutes.
                                    format: int64
                                    type: integer
                                  path:
                                    description: |-
                                      path is the path relative to the mount point of the file to project the
                                      token into.
                                    type: string
                                required:
                                - path
                                type: object
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    secret:
                      description: Secret represents a secret that should populate
                        this workspace.
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode is Optional: mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values
                            for mode bits. Defaults to 0644.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        items:
                          description: |-
                            items If unspecified, each key-value pair in the Data field of the referenced
                            Secret will be projected into the volume as a file whose name is the
                            key and content is the value. If specified, the listed keys will be
                            projected into the specified paths, and unlisted keys will not be
                            present. If a key is specified which is not present in the Secret,
                            the volume setup will error unless it is marked optional. Paths must be
                            relative and may not contain the '..' path or start with '..'.
                          items:
                            description: Maps a string key to a path within a volume.
                            properties:
                              key:
                                description: key is the key to project.
                                type: string
                              mode:
                                description: |-
                                  mode is Optional: mode bits used to set permissions on this file.
                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                  If not specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              path:
                                description: |-
                                  path is the relative path of the file to map the key to.
                                  May not be an absolute path.
                                  May not contain the path element '..'.
                                  May not start with the string '..'.
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        optional:
                          description: optional field specify whether the Secret or
                            its keys must be defined
                          type: boolean
                        secretName:
                          description: |-
                            secretName is the name of the secret in the pod's namespace to use.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                          type: string
                      type: object
                    subPath:
                      description: |-
                        SubPath is optionally a directory on the volume which should be used
                        for this binding (i.e. the volume will be mounted at this sub directory).
                      type: string
                    volumeClaimTemplate:
                      description: |-
                        VolumeClaimTemplate is a template for a claim that will be created in the same namespace.
                        The PipelineRun controller is responsible for creating a unique claim for each instance of PipelineRun.
                        See PersistentVolumeClaim (API version: v1)
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
          status:
            description: TaskRunStatus defines the observed state of TaskRun
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: |-
                  Annotations is additional Status fields for the Resource to save some
                  additional State as well as convey more information to the user. This is
                  roughly akin to Annotations on any k8s resource, just the reconciler conveying
                  richer information outwards.
                type: object
              artifacts:
                description: Artifacts are the list of artifacts written out by the
                  task's containers
                properties:
                  inputs:
                    items:
                      description: |-
                        Artifact represents an artifact within a system, potentially containing multiple values
                        associated with it.
                      properties:
                        buildOutput:
                          description: Indicate if the artifact is a build output
                            or a by-product
                          type: boolean
                        name:
                          description: The artifact's identifying category name
                          type: string
                        values:
                          description: A collection of values related to the artifact
                          items:
                            description: ArtifactValue represents a specific value
                              or data element within an Artifact.
                            properties:
                              digest:
                                additionalProperties:
                                  type: string
                                type: object
                              uri:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  outputs:
                    items:
                      description: |-
                        Artifact represents an artifact within a system, potentially containing multiple values
                        associated with it.
                      properties:
                        buildOutput:
                          description: Indicate if the artifact is a build output
                            or a by-product
                          type: boolean
                        name:
                          description: The artifact's identifying category name
                          type: string
                        values:
                          description: A collection of values related to the artifact
                          items:
                            description: ArtifactValue represents a specific value
                              or data element within an Artifact.
                            properties:
                              digest:
                                additionalProperties:
                                  type: string
                                type: object
                              uri:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              completionTime:
                description: CompletionTime is the time the build completed.
                format: date-time
                type: string
              conditions:
                description: Conditions the latest available observations of a resource's
                  current state.
                items:
                  description: |-
                    Condition defines a readiness condition for a Knative resource.
                    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time the condition transitioned from one status to another.
                        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                        differences (all other things held constant).
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: |-
                  ObservedGeneration is the 'Generation' of the Service that
                  was last processed by the controller.
                format: int64
                type: integer
              podName:
                description: PodName is the name of the pod responsible for executing
                  this task's steps.
                type: string
              provenance:
                description: Provenance contains some key authenticated metadata about
                  how a software artifact was built (what sources, what inputs/outputs,
                  etc.).
                properties:
                  featureFlags:
                    description: FeatureFlags identifies the feature flags that were
                      used during the task/pipeline run
                    properties:
                      awaitSidecarReadiness:
                        type: boolean
                      coschedule:
                        type: string
                      disableCredsInit:
                        type: boolean
                      disableInlineSpec:
                        type: string
                      enableAPIFields:
                        type: string
                      enableArtifacts:
                        type: boolean
                      enableCELInWhenExpression:
                        type: boolean
                      enableConciseResolverSyntax:
                        type: boolean
                      enableKeepPodOnCancel:
                        type: boolean
                      enableKubernetesSidecar:
                        type: boolean
                      enableParamEnum:
                        type: boolean
                      enableProvenanceInStatus:
                        type: boolean
                      enableStepActions:
                        description: EnableStepActions is a no-op flag since StepActions
                          are stable
                        type: boolean
                      enforceNonfalsifiability:
                        type: string
                      maxResultSize:
                        type: integer
                      requireGitSSHSecretKnownHosts:
                        type: boolean
                      resultExtractionMethod:
                        type: string
                      runningInEnvWithInjectedSidecars:
                        type: boolean
                      sendCloudEventsForRuns:
                        type: boolean
                      setSecurityContext:
                        type: boolean
                      setSecurityContextReadOnlyRootFilesystem:
                        type: boolean
                      verificationNoMatchPolicy:
                        description: |-
                          VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
                          VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
                          ignore: skip trusted resources verification when no matching verification policies found
                          warn: skip trusted resources verification when no matching verification policies found and log a warning
                          fail: fail the taskrun or pipelines run if no matching verification policies found
                        type: string
                    type: object
                  refSource:
                    description: RefSource identifies the source where a remote task/pipeline
                      came from.
                    properties:
                      digest:
                        additionalProperties:
                          type: string
                        description: |-
                          Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                          Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                        type: object
                      entryPoint:
                        description: |-
                          EntryPoint identifies the entry point into the build. This is often a path to a
                          build definition file and/or a target label within that file.
                          Example: "task/git-clone/0.8/git-clone.yaml"
                        type: string
                      uri:
                        description: |-
                          URI indicates the identity of the source of the build definition.
                          Example: "https://github.com/tektoncd/catalog"
                        type: string
                    type: object
                type: object
              results:
                description: Results are the list of results written out by the task's
                  containers
                items:
                  description: TaskRunResult used to describe the results of a task
                  properties:
                    name:
                      description: Name the given name
                      type: string
                    type:
                      description: |-
                        Type is the user-specified type of the result. The possible type
                        is currently "string" and will support "array" in following work.
                      type: string
                    value:
                      description: Value the given value of the result
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  - value
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              retriesStatus:
                description: |-
                  RetriesStatus contains the history of TaskRunStatus in case of a retry in order to keep record of failures.
                  All TaskRunStatus stored in RetriesStatus will have no date within the RetriesStatus as is redundant.
                x-kubernetes-preserve-unknown-fields: true
              sidecars:
                description: |-
                  The list has one entry per sidecar in the manifest. Each entry is
                  represents the imageid of the corresponding sidecar.
                items:
                  description: SidecarState reports the results of running a sidecar
                    in a Task.
                  properties:
                    container:
                      type: string
                    imageID:
                      type: string
                    name:
                      type: string
                    running:
                      description: Details about a running container
                      properties:
                        startedAt:
                          description: Time at which the container was last (re-)started
                          format: date-time
                          type: string
                      type: object
                    terminated:
                      description: Details about a terminated container
                      properties:
                        containerID:
                          description: Container's ID in the format '<type>://<container_id>'
                          type: string
                        exitCode:
                          description: Exit status from the last termination of the
                            container
                          format: int32
                          type: integer
                        finishedAt:
                          description: Time at which the container last terminated
                          format: date-time
                          type: string
                        message:
                          description: Message regarding the last termination of the
                            container
                          type: string
                        reason:
                          description: (brief) reason from the last termination of
                            the container
                          type: string
                        signal:
                          description: Signal from the last termination of the container
                          format: int32
                          type: integer
                        startedAt:
                          description: Time at which previous execution of the container
                            started
                          format: date-time
                          type: string
                      required:
                      - exitCode
                      type: object
                    waiting:
                      description: Details about a waiting container
                      properties:
                        message:
                          description: Message regarding why the container is not
                            yet running.
                          type: string
                        reason:
                          description: (brief) reason the container is not yet running.
                          type: string
                      type: object
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              spanContext:
                additionalProperties:
                  type: string
                description: SpanContext contains tracing span context fields
                type: object
              startTime:
                description: StartTime is the time the build is actually started.
                format: date-time
                type: string
              steps:
                description: Steps describes the state of each build step container.
                items:
                  description: StepState reports the results of running a step in
                    a Task.
                  properties:
                    container:
                      type: string
                    imageID:
                      type: string
                    inputs:
                      items:
                        description: |-
                          Artifact represents an artifact within a system, potentially containing multiple values
                          associated with it.
                        properties:
                          buildOutput:
                            description: Indicate if the artifact is a build output
                              or a by-product
                            type: boolean
                          name:
                            description: The artifact's identifying category name
                            type: string
                          values:
                            description: A collection of values related to the artifact
                            items:
                              description: ArtifactValue represents a specific value
                                or data element within an Artifact.
                              properties:
                                digest:
                                  additionalProperties:
                                    type: string
                                  type: object
                                uri:
                                  type: string
                              type: object
                            type: array
                        type: object
                      type: array
                    name:
                      type: string
                    outputs:
                      items:
                        description: |-
                          Artifact represents an artifact within a system, potentially containing multiple values
                          associated with it.
                        properties:
                          buildOutput:
                            description: Indicate if the artifact is a build output
                              or a by-product
                            type: boolean
                          name:
                            description: The artifact's identifying category name
                            type: string
                          values:
                            description: A collection of values related to the artifact
                            items:
                              description: ArtifactValue represents a specific value
                                or data element within an Artifact.
                              properties:
                                digest:
                                  additionalProperties:
                                    type: string
                                  type: object
                                uri:
                                  type: string
                              type: object
                            type: array
                        type: object
                      type: array
                    provenance:
                      description: |-
                        Provenance contains metadata about resources used in the TaskRun/PipelineRun
                        such as the source from where a remote build definition was fetched.
                        This field aims to carry minimum amoumt of metadata in *Run status so that
                        Tekton Chains can capture them in the provenance.
                      properties:
                        featureFlags:
                          description: FeatureFlags identifies the feature flags that
                            were used during the task/pipeline run
                          properties:
                            awaitSidecarReadiness:
                              type: boolean
                            coschedule:
                              type: string
                            disableCredsInit:
                              type: boolean
                            disableInlineSpec:
                              type: string
                            enableAPIFields:
                              type: string
                            enableArtifacts:
                              type: boolean
                            enableCELInWhenExpression:
                              type: boolean
                            enableConciseResolverSyntax:
                              type: boolean
                            enableKeepPodOnCancel:
                              type: boolean
                            enableKubernetesSidecar:
                              type: boolean
                            enableParamEnum:
                              type: boolean
                            enableProvenanceInStatus:
                              type: boolean
                            enableStepActions:
                              description: EnableStepActions is a no-op flag since
                                StepActions are stable
                              type: boolean
                            enforceNonfalsifiability:
                              type: string
                            maxResultSize:
                              type: integer
                            requireGitSSHSecretKnownHosts:
                              type: boolean
                            resultExtractionMethod:
                              type: string
                            runningInEnvWithInjectedSidecars:
                              type: boolean
                            sendCloudEventsForRuns:
                              type: boolean
                            setSecurityContext:
                              type: boolean
                            setSecurityContextReadOnlyRootFilesystem:
                              type: boolean
                            verificationNoMatchPolicy:
                              description: |-
                                VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
                                VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
                                ignore: skip trusted resources verification when no matching verification policies found
                                warn: skip trusted resources verification when no matching verification policies found and log a warning
                                fail: fail the taskrun or pipelines run if no matching verification policies found
                              type: string
                          type: object
                        refSource:
                          description: RefSource identifies the source where a remote
                            task/pipeline came from.
                          properties:
                            digest:
                              additionalProperties:
                                type: string
                              description: |-
                                Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                                Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                              type: object
                            entryPoint:
                              description: |-
                                EntryPoint identifies the entry point into the build. This is often a path to a
                                build definition file and/or a target label within that file.
                                Example: "task/git-clone/0.8/git-clone.yaml"
                              type: string
                            uri:
                              description: |-
                                URI indicates the identity of the source of the build definition.
                                Example: "https://github.com/tektoncd/catalog"
                              type: string
                          type: object
                      type: object
                    results:
                      items:
                        description: TaskRunResult used to describe the results of
                          a task
                        properties:
                          name:
                            description: Name the given name
                            type: string
                          type:
                            description: |-
                              Type is the user-specified type of the result. The possible type
                              is currently "string" and will support "array" in following work.
                            type: string
                          value:
                            description: Value the given value of the result
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    running:
                      description: Details about a running container
                      properties:
                        startedAt:
                          description: Time at which the container was last (re-)started
                          format: date-time
                          type: string
                      type: object
                    terminated:
                      description: Details about a terminated container
                      properties:
                        containerID:
                          description: Container's ID in the format '<type>://<container_id>'
                          type: string
                        exitCode:
                          description: Exit status from the last termination of the
                            container
                          format: int32
                          type: integer
                        finishedAt:
                          description: Time at which the container last terminated
                          format: date-time
                          type: string
                        message:
                          description: Message regarding the last termination of the
                            container
                          type: string
                        reason:
                          description: (brief) reason from the last termination of
                            the container
                          type: string
                        signal:
                          description: Signal from the last termination of the container
                          format: int32
                          type: integer
                        startedAt:
                          description: Time at which previous execution of the container
                            started
                          format: date-time
                          type: string
                      required:
                      - exitCode
                      type: object
                    terminationReason:
                      type: string
                    waiting:
                      description: Details about a waiting container
                      properties:
                        message:
                          description: Message regarding why the container is not
                            yet running.
                          type: string
                        reason:
                          description: (brief) reason the container is not yet running.
                          type: string
                      type: object
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              taskSpec:
                description: TaskSpec contains the Spec from the dereferenced Task
                  definition used to instantiate this TaskRun.
                properties:
                  description:
                    description: |-
                      Description is a user-facing description of the task that may be
                      used to populate a UI.
                    type: string
                  displayName:
                    description: |-
                      DisplayName is a user-facing name of the task that may be
                      used to populate a UI.
                    type: string
                  params:
                    description: |-
                      Params is a list of input parameters required to run the task. Params
                      must be supplied as inputs in TaskRuns unless they declare a default
                      value.
                    items:
                      description: |-
                        ParamSpec defines arbitrary parameters needed beyond typed inputs (such as
                        resources). Parameter values are provided by users as inputs on a TaskRun
                        or PipelineRun.
                      properties:
                        default:
                          description: |-
                            Default is the value a parameter takes if no input value is supplied. If
                            default is set, a Task may be executed without a supplied value for the
                            parameter.
                          x-kubernetes-preserve-unknown-fields: true
                        description:
                          description: |-
                            Description is a user-facing description of the parameter that may be
                            used to populate a UI.
                          type: string
                        enum:
                          description: |-
                            Enum declares a set of allowed param input values for tasks/pipelines that can be validated.
                            If Enum is not set, no input validation is performed for the param.
                          items:
                            type: string
                          type: array
                        name:
                          description: Name declares the name by which a parameter
                            is referenced.
                          type: string
                        properties:
                          additionalProperties:
                            description: PropertySpec defines the struct for object
                              keys
                            properties:
                              type:
                                description: |-
                                  ParamType indicates the type of an input parameter;
                                  Used to distinguish between a single string and an array of strings.
                                type: string
                            type: object
                          description: Properties is the JSON Schema properties to
                            support key-value pairs parameter.
                          type: object
                        type:
                          description: |-
                            Type is the user-specified type of the parameter. The possible types
                            are currently "string", "array" and "object", and "string" is the default.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  results:
                    description: Results are values that this Task can output
                    items:
                      description: TaskResult used to describe the results of a task
                      properties:
                        description:
                          description: Description is a human-readable description
                            of the result
                          type: string
                        name:
                          description: Name the given name
                          type: string
                        properties:
                          additionalProperties:
                            description: PropertySpec defines the struct for object
                              keys
                            properties:
                              type:
                                description: |-
                                  ParamType indicates the type of an input parameter;
                                  Used to distinguish between a single string and an array of strings.
                                type: string
                            type: object
                          description: Properties is the JSON Schema properties to
                            support key-value pairs results.
                          type: object
                        type:
                          description: |-
                            Type is the user-specified type of the result. The possible type
                            is currently "string" and will support "array" in following work.
                          type: string
                        value:
                          description: Value the expression used to retrieve the value
                            of the result from an underlying Step.
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  sidecars:
                    description: |-
                      Sidecars are run alongside the Task's step containers. They begin before
                      the steps start and end after the steps complete.
                    items:
                      description: Sidecar has nearly the same data structure as Step
                        but does not have the ability to timeout.
                      properties:
                        args:
                          description: |-
                            Arguments to the entrypoint.
                            The image's CMD is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the Sidecar's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        command:
                          description: |-
                            Entrypoint array. Not executed within a shell.
                            The image's ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the Sidecar's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        computeResources:
                          description: |-
                            ComputeResources required by this Sidecar.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.

                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.

                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                        env:
                          description: |-
                            List of environment variables to set in the Sidecar.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        envFrom:
                          description: |-
                            List of sources to populate environment variables in the Sidecar.
                            The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                            will be reported as an event when the container is starting. When a key exists in multiple
                            sources, the value associated with the last source will take precedence.
                            Values defined by an Env with a duplicate key will take precedence.
                            Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        image:
                          description: |-
                            Image reference name.
                            More info: https://kubernetes.io/docs/concepts/containers/images
                          type: string
                        imagePullPolicy:
                          description: |-
                            Image pull policy.
                            One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                          type: string
                        lifecycle:
                          description: |-
                            Actions that the management system should take in response to Sidecar lifecycle events.
                            Cannot be updated.
                          properties:
                            postStart:
                              description: |-
                                PostStart is called immediately after a container is created. If the handler fails,
                                the container is terminated and restarted according to its restart policy.
                                Other management of the container blocks until the hook completes.
                                More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                              properties:
                                exec:
                                  description: Exec specifies a command to execute
                                    in the container.
                                  properties:
                                    command:
                                      description: |-
                                        Command is the command line to execute inside the container, the working directory for the
                                        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                        a shell, you need to explicitly call out to that shell.
                                        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies an HTTP GET request
                                    to perform.
                                  properties:
                                    host:
                                      description: |-
                                        Host name to connect to, defaults to the pod IP. You probably want to set
                                        "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: |-
                                              The header field name.
                                              This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        Name or number of the port to access on the container.
                                        Number must be in the range 1 to 65535.
                                        Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: |-
                                        Scheme to use for connecting to the host.
                                        Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                sleep:
                                  description: Sleep represents a duration that the
                                    container should sleep.
                                  properties:
                                    seconds:
                                      description: Seconds is the number of seconds
                                        to sleep.
                                      format: int64
                                      type: integer
                                  required:
                                  - seconds
                                  type: object
                                tcpSocket:
                                  description: |-
                                    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                    for backward compatibility. There is no validation of this field and
                                    lifecycle hooks will fail at runtime when it is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        Number or name of the port to access on the container.
                                        Number must be in the range 1 to 65535.
                                        Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: |-
                                PreStop is called immediately before a container is terminated due to an
                                API request or management event such as liveness/startup probe failure,
                                preemption, resource contention, etc. The handler is not called if the
                                container crashes or exits. The Pod's termination grace period countdown begins before the
                                PreStop hook is executed. Regardless of the outcome of the handler, the
                                container will eventually terminate within the Pod's termination grace
                                period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                or until the termination grace period is reached.
                                More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                              properties:
                                exec:
                                  description: Exec specifies a command to execute
                                    in the container.
                                  properties:
                                    command:
                                      description: |-
                                        Command is the command line to execute inside the container, the working directory for the
                                        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                        a shell, you need to explicitly call out to that shell.
                                        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies an HTTP GET request
                                    to perform.
                                  properties:
                                    host:
                                      description: |-
                                        Host name to connect to, defaults to the pod IP. You probably want to set
                                        "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: |-
                                              The header field name.
                                              This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        Name or number of the port to access on the container.
                                        Number must be in the range 1 to 65535.
                                        Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: |-
                                        Scheme to use for connecting to the host.
                                        Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                sleep:
                                  description: Sleep represents a duration that the
                                    container should sleep.
                                  properties:
                                    seconds:
                                      description: Seconds is the number of seconds
                                        to sleep.
                                      format: int64
                                      type: integer
                                  required:
                                  - seconds
                                  type: object
                                tcpSocket:
                                  description: |-
                                    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                    for backward compatibility. There is no validation of this field and
                                    lifecycle hooks will fail at runtime when it is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        Number or name of the port to access on the container.
                                        Number must be in the range 1 to 65535.
                                        Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: |-
                            Periodic probe of Sidecar liveness.
                            Container will be restarted if the probe fails.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          properties:
                            exec:
                              description: Exec specifies a command to execute in
                                the container.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            failureThreshold:
                              description: |-
                                Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies a GRPC HealthCheckRequest.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  default: ""
                                  description: |-
                                    Service is the name of the service to place in the gRPC HealthCheckRequest
                                    (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                    If this is not specified, the default behavior is defined by gRPC.
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies an HTTP GET request to
                                perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Name or number of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: |-
                                Number of seconds after the container has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                            periodSeconds:
                              description: |-
                                How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: |-
                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies a connection to a TCP
                                port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: |-
                                Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                The grace period is the duration in seconds after the processes running in the pod are sent
                                a termination signal and the time when the processes are forcibly halted with a kill signal.
                                Set this value longer than the expected cleanup time for your process.
                                If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                value overrides the value provided by the pod spec.
                                Value must be non-negative integer. The value zero indicates stop immediately via
                                the kill signal (no opportunity to shut down).
                                This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: |-
                                Number of seconds after which the probe times out.
                                Defaults to 1 second. Minimum value is 1.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: |-
                            Name of the Sidecar specified as a DNS_LABEL.
                            Each Sidecar in a Task must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        ports:
                          description: |-
                            List of ports to expose from the Sidecar. Exposing a port here gives
                            the system additional information about the network connections a
                            container uses, but is primarily informational. Not specifying a port here
                            DOES NOT prevent that port from being exposed. Any port which is
                            listening on the default "0.0.0.0" address inside a container will be
                            accessible from the network.
                            Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: |-
                                  Number of port to expose on the pod's IP address.
                                  This must be a valid port number, 0 < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: |-
                                  Number of port to expose on the host.
                                  If specified, this must be a valid port number, 0 < x < 65536.
                                  If HostNetwork is specified, this must match ContainerPort.
                                  Most containers do not need this.
                                format: int32
                                type: integer
                              name:
                                description: |-
                                  If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                  named port in a pod must have a unique name. Name for the port that can be
                                  referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol for port. Must be UDP, TCP, or SCTP.
                                  Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: |-
                            Periodic probe of Sidecar service readiness.
                            Container will be removed from service endpoints if the probe fails.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          properties:
                            exec:
                              description: Exec specifies a command to execute in
                                the container.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            failureThreshold:
                              description: |-
                                Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies a GRPC HealthCheckRequest.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  default: ""
                                  description: |-
                                    Service is the name of the service to place in the gRPC HealthCheckRequest
                                    (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                    If this is not specified, the default behavior is defined by gRPC.
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies an HTTP GET request to
                                perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Name or number of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: |-
                                Number of seconds after the container has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                            periodSeconds:
                              description: |-
                                How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: |-
                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies a connection to a TCP
                                port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: |-
                                Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                The grace period is the duration in seconds after the processes running in the pod are sent
                                a termination signal and the time when the processes are forcibly halted with a kill signal.
                                Set this value longer than the expected cleanup time for your process.
                                If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                value overrides the value provided by the pod spec.
                                Value must be non-negative integer. The value zero indicates stop immediately via
                                the kill signal (no opportunity to shut down).
                                This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: |-
                                Number of seconds after which the probe times out.
                                Defaults to 1 second. Minimum value is 1.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                          type: object
                        restartPolicy:
                          description: |-
                            RestartPolicy refers to kubernetes RestartPolicy. It can only be set for an
                            initContainer and must have it's policy set to "Always". It is currently
                            left optional to help support Kubernetes versions prior to 1.29 when this feature
                            was introduced.
                          type: string
                        script:
                          description: |-
                            Script is the contents of an executable file to execute.

                            If Script is not empty, the Step cannot have an Command or Args.
                          type: string
                        securityContext:
                          description: |-
                            SecurityContext defines the security options the Sidecar should be run with.
                            If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                            More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                          properties:
                            allowPrivilegeEscalation:
                              description: |-
                                AllowPrivilegeEscalation controls whether a process can gain more
                                privileges than its parent process. This bool directly controls if
                                the no_new_privs flag will be set on the container process.
                                AllowPrivilegeEscalation is true always when the container is:
                                1) run as Privileged
                                2) has CAP_SYS_ADMIN
                                Note that this field cannot be set when spec.os.name is windows.
                              type: boolean
                            appArmorProfile:
                              description: |-
                                appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                overrides the pod's appArmorProfile.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile loaded on the node that should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must match the loaded name of the profile.
                                    Must be set if and only if type is "Localhost".
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of AppArmor profile will be applied.
                                    Valid options are:
                                      Localhost - a profile pre-loaded on the node.
                                      RuntimeDefault - the container runtime's default profile.
                                      Unconfined - no AppArmor enforcement.
                                  type: string
                              required:
                              - type
                              type: object
                            capabilities:
                              description: |-
                                The capabilities to add/drop when running containers.
                                Defaults to the default set of capabilities granted by the container runtime.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            privileged:
                              description: |-
                                Run container in privileged mode.
                                Processes in privileged containers are essentially equivalent to root on the host.
                                Defaults to false.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: |-
                                procMount denotes the type of proc mount to use for the containers.
                                The default value is Default which uses the container runtime defaults for
                                readonly paths and masked paths.
                                This requires the ProcMountType feature flag to be enabled.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: |-
                                Whether this container has a read-only root filesystem.
                                Default is false.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: |-
                                The GID to run the entrypoint of the container process.
                                Uses runtime default if unset.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: |-
                                Indicates that the container must run as a non-root user.
                                If true, the Kubelet will validate the image at runtime to ensure that it
                                does not run as UID 0 (root) and fail to start the container if it does.
                                If unset or false, no such validation will be performed.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: |-
                                The UID to run the entrypoint of the container process.
                                Defaults to user specified in image metadata if unspecified.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: |-
                                The SELinux context to be applied to the container.
                                If unspecified, the container runtime will allocate a random SELinux context for each
                                container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: |-
                                The seccomp options to use by this container. If seccomp options are
                                provided at both the pod & container level, the container options
                                override the pod options.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile defined in a file on the node should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be set for any other type.
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of seccomp profile will be applied.
                                    Valid options are:

                                    Localhost - a profile defined in a file on the node should be used.
                                    RuntimeDefault - the container runtime default profile should be used.
                                    Unconfined - no profile should be applied.
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: |-
                                The Windows specific settings applied to all containers.
                                If unspecified, the options from the PodSecurityContext will be used.
                                If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: |-
                                    GMSACredentialSpec is where the GMSA admission webhook
                                    (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                    GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: |-
                                    HostProcess determines if a container should be run as a 'Host Process' container.
                                    All of a Pod's containers must have the same effective HostProcess value
                                    (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                    In addition, if HostProcess is true then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: |-
                                    The UserName in Windows to run the entrypoint of the container process.
                                    Defaults to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: |-
                            StartupProbe indicates that the Pod the Sidecar is running in has successfully initialized.
                            If specified, no other probes are executed until this completes successfully.
                            If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                            This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                            when it might take a long time to load data or warm a cache, than during steady-state operation.
                            This cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          properties:
                            exec:
                              description: Exec specifies a command to execute in
                                the container.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            failureThreshold:
                              description: |-
                                Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies a GRPC HealthCheckRequest.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  default: ""
                                  description: |-
                                    Service is the name of the service to place in the gRPC HealthCheckRequest
                                    (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                    If this is not specified, the default behavior is defined by gRPC.
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies an HTTP GET request to
                                perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Name or number of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: |-
                                Number of seconds after the container has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                            periodSeconds:
                              description: |-
                                How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: |-
                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies a connection to a TCP
                                port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: |-
                                Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                The grace period is the duration in seconds after the processes running in the pod are sent
                                a termination signal and the time when the processes are forcibly halted with a kill signal.
                                Set this value longer than the expected cleanup time for your process.
                                If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                value overrides the value provided by the pod spec.
                                Value must be non-negative integer. The value zero indicates stop immediately via
                                the kill signal (no opportunity to shut down).
                                This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: |-
                                Number of seconds after which the probe times out.
                                Defaults to 1 second. Minimum value is 1.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: |-
                            Whether this Sidecar should allocate a buffer for stdin in the container runtime. If this
                            is not set, reads from stdin in the Sidecar will always result in EOF.
                            Default is false.
                          type: boolean
                        stdinOnce:
                          description: |-
                            Whether the container runtime should close the stdin channel after it has been opened by
                            a single attach. When stdin is true the stdin stream will remain open across multiple attach
                            sessions. If stdinOnce is set to true, stdin is opened on Sidecar start, is empty until the
                            first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                            at which time stdin is closed and remains closed until the Sidecar is restarted. If this
                            flag is false, a container processes that reads from stdin will never receive an EOF.
                            Default is false
                          type: boolean
                        terminationMessagePath:
                          description: |-
                            Optional: Path at which the file to which the Sidecar's termination message
                            will be written is mounted into the Sidecar's filesystem.
                            Message written is intended to be brief final status, such as an assertion failure message.
                            Will be truncated by the node if greater than 4096 bytes. The total message length across
                            all containers will be limited to 12kb.
                            Defaults to /dev/termination-log.
                            Cannot be updated.
                          type: string
                        terminationMessagePolicy:
                          description: |-
                            Indicate how the termination message should be populated. File will use the contents of
                            terminationMessagePath to populate the Sidecar status message on both success and failure.
                            FallbackToLogsOnError will use the last chunk of Sidecar log output if the termination
                            message file is empty and the Sidecar exited with an error.
                            The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                            Defaults to File.
                            Cannot be updated.
                          type: string
                        tty:
                          description: |-
                            Whether this Sidecar should allocate a TTY for itself, also requires 'stdin' to be true.
                            Default is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the Sidecar.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        volumeMounts:
                          description: |-
                            Volumes to mount into the Sidecar's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: |-
                                  Path within the container at which the volume should be mounted.  Must
                                  not contain ':'.
                                type: string
                              mountPropagation:
                                description: |-
                                  mountPropagation determines how mounts are propagated from the host
                                  to container and the other way around.
                                  When not set, MountPropagationNone is used.
                                  This field is beta in 1.10.
                                  When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                  (which defaults to None).
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: |-
                                  Mounted read-only if true, read-write otherwise (false or unspecified).
                                  Defaults to false.
                                type: boolean
                              recursiveReadOnly:
                                description: |-
                                  RecursiveReadOnly specifies whether read-only mounts should be handled
                                  recursively.

                                  If ReadOnly is false, this field has no meaning and must be unspecified.

                                  If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                  recursively read-only.  If this field is set to IfPossible, the mount is made
                                  recursively read-only, if it is supported by the container runtime.  If this
                                  field is set to Enabled, the mount is made recursively read-only if it is
                                  supported by the container runtime, otherwise the pod will not be started and
                                  an error will be generated to indicate the reason.

                                  If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                  None (or be unspecified, which defaults to None).

                                  If this field is not specified, it is treated as an equivalent of Disabled.
                                type: string
                              subPath:
                                description: |-
                                  Path within the volume from which the container's volume should be mounted.
                                  Defaults to "" (volume's root).
                                type: string
                              subPathExpr:
                                description: |-
                                  Expanded path within the volume from which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                  Defaults to "" (volume's root).
                                  SubPathExpr and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        workingDir:
                          description: |-
                            Sidecar's working directory.
                            If not specified, the container runtime's default will be used, which
                            might be configured in the container image.
                            Cannot be updated.
                          type: string
                        workspaces:
                          description: |-
                            This is an alpha field. You must set the "enable-api-fields" feature flag to "alpha"
                            for this field to be supported.

                            Workspaces is a list of workspaces from the Task that this Sidecar wants
                            exclusive access to. Adding a workspace to this list means that any
                            other Step or Sidecar that does not also request this Workspace will
                            not have access to it.
                          items:
                            description: |-
                              WorkspaceUsage is used by a Step or Sidecar to declare that it wants isolated access
                              to a Workspace defined in a Task.
                            properties:
                              mountPath:
                                description: |-
                                  MountPath is the path that the workspace should be mounted to inside the Step or Sidecar,
                                  overriding any MountPath specified in the Task's WorkspaceDeclaration.
                                type: string
                              name:
                                description: Name is the name of the workspace this
                                  Step or Sidecar wants access to.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  stepTemplate:
                    description: |-
                      StepTemplate can be used as the basis for all step containers within the
                      Task, so that the steps inherit settings on the base container.
                    properties:
                      args:
                        description: |-
                          Arguments to the entrypoint.
                          The image's CMD is used if this is not provided.
                          Variable references $(VAR_NAME) are expanded using the Step's environment. If a variable
                          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                          of whether the variable exists or not. Cannot be updated.
                          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      command:
                        description: |-
                          Entrypoint array. Not executed within a shell.
                          The image's ENTRYPOINT is used if this is not provided.
                          Variable references $(VAR_NAME) are expanded using the Step's environment. If a variable
                          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                          of whether the variable exists or not. Cannot be updated.
                          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      computeResources:
                        description: |-
                          ComputeResources required by this Step.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      env:
                        description: |-
                          List of environment variables to set in the Step.
                          Cannot be updated.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: |-
                                Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in the container and
                                any service environment variables. If a variable cannot be resolved,
                                the reference in the input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless of whether the variable
                                exists or not.
                                Defaults to "".
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: |-
                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      envFrom:
                        description: |-
                          List of sources to populate environment variables in the Step.
                          The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                          will be reported as an event when the Step is starting. When a key exists in multiple
                          sources, the value associated with the last source will take precedence.
                          Values defined by an Env with a duplicate key will take precedence.
                          Cannot be updated.
                        items:
                          description: EnvFromSource represents the source of a set
                            of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must
                                    be defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                            prefix:
                              description: An optional identifier to prepend to each
                                key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be
                                    defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      image:
                        description: |-
                          Image reference name.
                          More info: https://kubernetes.io/docs/concepts/containers/images
                        type: string
                      imagePullPolicy:
                        description: |-
                          Image pull policy.
                          One of Always, Never, IfNotPresent.
                          Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                        type: string
                      securityContext:
                        description: |-
                          SecurityContext defines the security options the Step should be run with.
                          If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                        properties:
                          allowPrivilegeEscalation:
                            description: |-
                              AllowPrivilegeEscalation controls whether a process can gain more
                              privileges than its parent process. This bool directly controls if
                              the no_new_privs flag will be set on the container process.
                              AllowPrivilegeEscalation is true always when the container is:
                              1) run as Privileged
                              2) has CAP_SYS_ADMIN
                              Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          appArmorProfile:
                            description: |-
                              appArmorProfile is the AppArmor options to use by this container. If set, this profile
                              overrides the pod's appArmorProfile.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: |-
                                  localhostProfile indicates a profile loaded on the node that should be used.
                                  The profile must be preconfigured on the node to work.
                                  Must match the loaded name of the profile.
                                  Must be set if and only if type is "Localhost".
                                type: string
                              type:
                                description: |-
                                  type indicates which kind of AppArmor profile will be applied.
                                  Valid options are:
                                    Localhost - a profile pre-loaded on the node.
                                    RuntimeDefault - the container runtime's default profile.
                                    Unconfined - no AppArmor enforcement.
                                type: string
                            required:
                            - type
                            type: object
                          capabilities:
                            description: |-
                              The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the container runtime.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          privileged:
                            description: |-
                              Run container in privileged mode.
                              Processes in privileged containers are essentially equivalent to root on the host.
                              Defaults to false.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: |-
                              procMount denotes the type of proc mount to use for the containers.
                              The default value is Default which uses the container runtime defaults for
                              readonly paths and masked paths.
                              This requires the ProcMountType feature flag to be enabled.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: |-
                              Whether this container has a read-only root filesystem.
                              Default is false.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: |-
                              The GID to run the entrypoint of the container process.
                              Uses runtime default if unset.
                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: |-
                              Indicates that the container must run as a non-root user.
                              If true, the Kubelet will validate the image at runtime to ensure that it
                              does not run as UID 0 (root) and fail to start the container if it does.
                              If unset or false, no such validation will be performed.
                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: |-
                              The UID to run the entrypoint of the container process.
                              Defaults to user specified in image metadata if unspecified.
                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: |-
                              The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random SELinux context for each
                              container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: |-
                              The seccomp options to use by this container. If seccomp options are
                              provided at both the pod & container level, the container options
                              override the pod options.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: |-
                                  localhostProfile indicates a profile defined in a file on the node should be used.
                                  The profile must be preconfigured on the node to work.
                                  Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                  Must be set if type is "Localhost". Must NOT be set for any other type.
                                type: string
                              type:
                                description: |-
                                  type indicates which kind of seccomp profile will be applied.
                                  Valid options are:

                                  Localhost - a profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile should be used.
                                  Unconfined - no profile should be applied.
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: |-
                              The Windows specific settings applied to all containers.
                              If unspecified, the options from the PodSecurityContext will be used.
                              If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is linux.
                            properties:
                              gmsaCredentialSpec:
                                description: |-
                                  GMSACredentialSpec is where the GMSA admission webhook
                                  (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                  GMSA credential spec named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: |-
                                  HostProcess determines if a container should be run as a 'Host Process' container.
                                  All of a Pod's containers must have the same effective HostProcess value
                                  (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                  In addition, if HostProcess is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: |-
                                  The UserName in Windows to run the entrypoint of the container process.
                                  Defaults to the user specified in image metadata if unspecified.
                                  May also be set in PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: string
                            type: object
                        type: object
                      volumeDevices:
                        description: volumeDevices is the list of block devices to
                          be used by the Step.
                        items:
                          description: volumeDevice describes a mapping of a raw block
                            device within a container.
                          properties:
                            devicePath:
                              description: devicePath is the path inside of the container
                                that the device will be mapped to.
                              type: string
                            name:
                              description: name must match the name of a persistentVolumeClaim
                                in the pod
                              type: string
                          required:
                          - devicePath
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      volumeMounts:
                        description: |-
                          Volumes to mount into the Step's filesystem.
                          Cannot be updated.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: |-
                                Path within the container at which the volume should be mounted.  Must
                                not contain ':'.
                              type: string
                            mountPropagation:
                              description: |-
                                mountPropagation determines how mounts are propagated from the host
                                to container and the other way around.
                                When not set, MountPropagationNone is used.
                                This field is beta in 1.10.
                                When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                (which defaults to None).
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: |-
                                Mounted read-only if true, read-write otherwise (false or unspecified).
                                Defaults to false.
                              type: boolean
                            recursiveReadOnly:
                              description: |-
                                RecursiveReadOnly specifies whether read-only mounts should be handled
                                recursively.

                                If ReadOnly is false, this field has no meaning and must be unspecified.

                                If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                recursively read-only.  If this field is set to IfPossible, the mount is made
                                recursively read-only, if it is supported by the container runtime.  If this
                                field is set to Enabled, the mount is made recursively read-only if it is
                                supported by the container runtime, otherwise the pod will not be started and
                                an error will be generated to indicate the reason.

                                If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                None (or be unspecified, which defaults to None).

                                If this field is not specified, it is treated as an equivalent of Disabled.
                              type: string
                            subPath:
                              description: |-
                                Path within the volume from which the container's volume should be mounted.
                                Defaults to "" (volume's root).
                              type: string
                            subPathExpr:
                              description: |-
                                Expanded path within the volume from which the container's volume should be mounted.
                                Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root).
                                SubPathExpr and SubPath are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      workingDir:
                        description: |-
                          Step's working directory.
                          If not specified, the container runtime's default will be used, which
                          might be configured in the container image.
                          Cannot be updated.
                        type: string
                    type: object
                  steps:
                    description: |-
                      Steps are the steps of the build; each step is run sequentially with the
                      source mounted into /workspace.
                    items:
                      description: Step runs a subcomponent of a Task
                      properties:
                        args:
                          description: |-
                            Arguments to the entrypoint.
                            The image's CMD is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        command:
                          description: |-
                            Entrypoint array. Not executed within a shell.
                            The image's ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        computeResources:
                          description: |-
                            ComputeResources required by this Step.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.

                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.

                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                        env:
                          description: |-
                            List of environment variables to set in the Step.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        envFrom:
                          description: |-
                            List of sources to populate environment variables in the Step.
                            The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                            will be reported as an event when the Step is starting. When a key exists in multiple
                            sources, the value associated with the last source will take precedence.
                            Values defined by an Env with a duplicate key will take precedence.
                            Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        image:
                          description: |-
                            Docker image name.
                            More info: https://kubernetes.io/docs/concepts/containers/images
                          type: string
                        imagePullPolicy:
                          description: |-
                            Image pull policy.
                            One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                          type: string
                        name:
                          description: |-
                            Name of the Step specified as a DNS_LABEL.
                            Each Step in a Task must have a unique name.
                          type: string
                        onError:
                          description: |-
                            OnError defines the exiting behavior of a container on error
                            can be set to [ continue | stopAndFail ]
                          type: string
                        params:
                          description: Params declares parameters passed to this step
                            action.
                          items:
                            description: Param declares an ParamValues to use for
                              the parameter called name.
                            properties:
                              name:
                                type: string
                              value:
                                x-kubernetes-preserve-unknown-fields: true
                            required:
                            - name
                            - value
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        ref:
                          description: Contains the reference to an existing StepAction.
                          properties:
                            name:
                              description: Name of the referenced step
                              type: string
                            params:
                              description: |-
                                Params contains the parameters used to identify the
                                referenced Tekton resource. Example entries might include
                                "repo" or "path" but the set of params ultimately depends on
                                the chosen resolver.
                              items:
                                description: Param declares an ParamValues to use
                                  for the parameter called name.
                                properties:
                                  name:
                                    type: string
                                  value:
                                    x-kubernetes-preserve-unknown-fields: true
                                required:
                                - name
                                - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            resolver:
                              description: |-
                                Resolver is the name of the resolver that should perform
                                resolution of the referenced Tekton resource, such as "git".
                              type: string
                          type: object
                        results:
                          description: |-
                            Results declares StepResults produced by the Step.

                            It can be used in an inlined Step when used to store Results to $(step.results.resultName.path).
                            It cannot be used when referencing StepActions using [v1.Step.Ref].
                            The Results declared by the StepActions will be stored here instead.
                          items:
                            description: StepResult used to describe the Results of
                              a Step.
                            properties:
                              description:
                                description: Description is a human-readable description
                                  of the result
                                type: string
                              name:
                                description: Name the given name
                                type: string
                              properties:
                                additionalProperties:
                                  description: PropertySpec defines the struct for
                                    object keys
                                  properties:
                                    type:
                                      description: |-
                                        ParamType indicates the type of an input parameter;
                                        Used to distinguish between a single string and an array of strings.
                                      type: string
                                  type: object
                                description: Properties is the JSON Schema properties
                                  to support key-value pairs results.
                                type: object
                              type:
                                description: The possible types are 'string', 'array',
                                  and 'object', with 'string' as the default.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        script:
                          description: |-
                            Script is the contents of an executable file to execute.

                            If Script is not empty, the Step cannot have an Command and the Args will be passed to the Script.
                          type: string
                        securityContext:
                          description: |-
                            SecurityContext defines the security options the Step should be run with.
                            If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                            More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                          properties:
                            allowPrivilegeEscalation:
                              description: |-
                                AllowPrivilegeEscalation controls whether a process can gain more
                                privileges than its parent process. This bool directly controls if
                                the no_new_privs flag will be set on the container process.
                                AllowPrivilegeEscalation is true always when the container is:
                                1) run as Privileged
                                2) has CAP_SYS_ADMIN
                                Note that this field cannot be set when spec.os.name is windows.
                              type: boolean
                            appArmorProfile:
                              description: |-
                                appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                overrides the pod's appArmorProfile.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile loaded on the node that should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must match the loaded name of the profile.
                                    Must be set if and only if type is "Localhost".
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of AppArmor profile will be applied.
                                    Valid options are:
                                      Localhost - a profile pre-loaded on the node.
                                      RuntimeDefault - the container runtime's default profile.
                                      Unconfined - no AppArmor enforcement.
                                  type: string
                              required:
                              - type
                              type: object
                            capabilities:
                              description: |-
                                The capabilities to add/drop when running containers.
                                Defaults to the default set of capabilities granted by the container runtime.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            privileged:
                              description: |-
                                Run container in privileged mode.
                                Processes in privileged containers are essentially equivalent to root on the host.
                                Defaults to false.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: |-
                                procMount denotes the type of proc mount to use for the containers.
                                The default value is Default which uses the container runtime defaults for
                                readonly paths and masked paths.
                                This requires the ProcMountType feature flag to be enabled.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: |-
                                Whether this container has a read-only root filesystem.
                                Default is false.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: |-
                                The GID to run the entrypoint of the container process.
                                Uses runtime default if unset.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: |-
                                Indicates that the container must run as a non-root user.
                                If true, the Kubelet will validate the image at runtime to ensure that it
                                does not run as UID 0 (root) and fail to start the container if it does.
                                If unset or false, no such validation will be performed.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: |-
                                The UID to run the entrypoint of the container process.
                                Defaults to user specified in image metadata if unspecified.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: |-
                                The SELinux context to be applied to the container.
                                If unspecified, the container runtime will allocate a random SELinux context for each
                                container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: |-
                                The seccomp options to use by this container. If seccomp options are
                                provided at both the pod & container level, the container options
                                override the pod options.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile defined in a file on the node should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be set for any other type.
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of seccomp profile will be applied.
                                    Valid options are:

                                    Localhost - a profile defined in a file on the node should be used.
                                    RuntimeDefault - the container runtime default profile should be used.
                                    Unconfined - no profile should be applied.
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: |-
                                The Windows specific settings applied to all containers.
                                If unspecified, the options from the PodSecurityContext will be used.
                                If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: |-
                                    GMSACredentialSpec is where the GMSA admission webhook
                                    (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                    GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: |-
                                    HostProcess determines if a container should be run as a 'Host Process' container.
                                    All of a Pod's containers must have the same effective HostProcess value
                                    (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                    In addition, if HostProcess is true then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: |-
                                    The UserName in Windows to run the entrypoint of the container process.
                                    Defaults to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        stderrConfig:
                          description: Stores configuration for the stderr stream
                            of the step.
                          properties:
                            path:
                              description: Path to duplicate stdout stream to on container's
                                local filesystem.
                              type: string
                          type: object
                        stdoutConfig:
                          description: Stores configuration for the stdout stream
                            of the step.
                          properties:
                            path:
                              description: Path to duplicate stdout stream to on container's
                                local filesystem.
                              type: string
                          type: object
                        timeout:
                          description: |-
                            Timeout is the time after which the step times out. Defaults to never.
                            Refer to Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration
                          type: string
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the Step.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        volumeMounts:
                          description: |-
                            Volumes to mount into the Step's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: |-
                                  Path within the container at which the volume should be mounted.  Must
                                  not contain ':'.
                                type: string
                              mountPropagation:
                                description: |-
                                  mountPropagation determines how mounts are propagated from the host
                                  to container and the other way around.
                                  When not set, MountPropagationNone is used.
                                  This field is beta in 1.10.
                                  When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                  (which defaults to None).
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: |-
                                  Mounted read-only if true, read-write otherwise (false or unspecified).
                                  Defaults to false.
                                type: boolean
                              recursiveReadOnly:
                                description: |-
                                  RecursiveReadOnly specifies whether read-only mounts should be handled
                                  recursively.

                                  If ReadOnly is false, this field has no meaning and must be unspecified.

                                  If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                  recursively read-only.  If this field is set to IfPossible, the mount is made
                                  recursively read-only, if it is supported by the container runtime.  If this
                                  field is set to Enabled, the mount is made recursively read-only if it is
                                  supported by the container runtime, otherwise the pod will not be started and
                                  an error will be generated to indicate the reason.

                                  If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                  None (or be unspecified, which defaults to None).

                                  If this field is not specified, it is treated as an equivalent of Disabled.
                                type: string
                              subPath:
                                description: |-
                                  Path within the volume from which the container's volume should be mounted.
                                  Defaults to "" (volume's root).
                                type: string
                              subPathExpr:
                                description: |-
                                  Expanded path within the volume from which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                  Defaults to "" (volume's root).
                                  SubPathExpr and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        when:
                          description: When is a list of when expressions that need
                            to be true for the task to run
                          items:
                            description: |-
                              WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run
                              to determine whether the Task should be executed or skipped
                            properties:
                              cel:
                                description: |-
                                  CEL is a string of Common Language Expression, which can be used to conditionally execute
                                  the task based on the result of the expression evaluation
                                  More info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md
                                type: string
                              input:
                                description: Input is the string for guard checking
                                  which can be a static input or an output from a
                                  parent Task
                                type: string
                              operator:
                                description: Operator that represents an Input's relationship
                                  to the values
                                type: string
                              values:
                                description: |-
                                  Values is an array of strings, which is compared against the input, for guard checking
                                  It must be non-empty
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          type: array
                        workingDir:
                          description: |-
                            Step's working directory.
                            If not specified, the container runtime's default will be used, which
                            might be configured in the container image.
                            Cannot be updated.
                          type: string
                        workspaces:
                          description: |-
                            This is an alpha field. You must set the "enable-api-fields" feature flag to "alpha"
                            for this field to be supported.

                            Workspaces is a list of workspaces from the Task that this Step wants
                            exclusive access to. Adding a workspace to this list means that any
                            other Step or Sidecar that does not also request this Workspace will
                            not have access to it.
                          items:
                            description: |-
                              WorkspaceUsage is used by a Step or Sidecar to declare that it wants isolated access
                              to a Workspace defined in a Task.
                            properties:
                              mountPath:
                                description: |-
                                  MountPath is the path that the workspace should be mounted to inside the Step or Sidecar,
                                  overriding any MountPath specified in the Task's WorkspaceDeclaration.
                                type: string
                              name:
                                description: Name is the name of the workspace this
                                  Step or Sidecar wants access to.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  volumes:
                    description: |-
                      Volumes is a collection of volumes that are available to mount into the
                      steps of the build.
                      See Pod.spec.volumes (API version: v1)
                    x-kubernetes-preserve-unknown-fields: true
                  workspaces:
                    description: Workspaces are the volumes that this Task requires.
                    items:
                      description: WorkspaceDeclaration is a declaration of a volume
                        that a Task requires.
                      properties:
                        description:
                          description: Description is an optional human readable description
                            of this volume.
                          type: string
                        mountPath:
                          description: MountPath overrides the directory that the
                            volume will be made available at.
                          type: string
                        name:
                          description: Name is the name by which you can bind the
                            volume at runtime.
                          type: string
                        optional:
                          description: |-
                            Optional marks a Workspace as not being required in TaskRuns. By default
                            this field is false and so declared workspaces are required.
                          type: boolean
                        readOnly:
                          description: |-
                            ReadOnly dictates whether a mounted volume is writable. By default this
                            field is false and so mounted volumes are writable.
                          type: boolean
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
            required:
            - podName
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - tekton
    - tekton-pipelines
    kind: TaskRun
    listKind: TaskRunList
    plural: taskruns
    shortNames:
    - tr
    - trs
    singular: taskrun
  conditions:
  - lastTransitionTime: "2025-05-20T13:06:37Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-05-20T13:06:37Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
