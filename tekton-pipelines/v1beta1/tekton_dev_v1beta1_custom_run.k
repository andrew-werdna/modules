"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema CustomRun:
    r"""
    CustomRun represents a single execution of a Custom Task.

    Attributes
    ----------
    apiVersion : str, default is "tekton.dev/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CustomRun", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : TektonDevV1beta1CustomRunSpec, default is Undefined, optional
        spec
    status : TektonDevV1beta1CustomRunStatus, default is Undefined, optional
        status
    """


    apiVersion: "tekton.dev/v1beta1" = "tekton.dev/v1beta1"

    kind: "CustomRun" = "CustomRun"

    metadata?: v1.ObjectMeta

    spec?: TektonDevV1beta1CustomRunSpec

    status?: TektonDevV1beta1CustomRunStatus


schema TektonDevV1beta1CustomRunSpec:
    r"""
    CustomRunSpec defines the desired state of CustomRun

    Attributes
    ----------
    customRef : TektonDevV1beta1CustomRunSpecCustomRef, default is Undefined, optional
        custom ref
    customSpec : TektonDevV1beta1CustomRunSpecCustomSpec, default is Undefined, optional
        custom spec
    params : [TektonDevV1beta1CustomRunSpecParamsItems0], default is Undefined, optional
        Params is a list of Param
    retries : int, default is Undefined, optional
        Used for propagating retries count to custom tasks
    serviceAccountName : str, default is Undefined, optional
        service account name
    status : str, default is Undefined, optional
        Used for cancelling a customrun (and maybe more later on)
    statusMessage : str, default is Undefined, optional
        Status message for cancellation.
    timeout : str, default is Undefined, optional
        Time after which the custom-task times out.
        Refer Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration
    workspaces : [TektonDevV1beta1CustomRunSpecWorkspacesItems0], default is Undefined, optional
        Workspaces is a list of WorkspaceBindings from volumes to workspaces.
    """


    customRef?: TektonDevV1beta1CustomRunSpecCustomRef

    customSpec?: TektonDevV1beta1CustomRunSpecCustomSpec

    params?: [TektonDevV1beta1CustomRunSpecParamsItems0]

    retries?: int

    serviceAccountName?: str

    status?: str

    statusMessage?: str

    timeout?: str

    workspaces?: [TektonDevV1beta1CustomRunSpecWorkspacesItems0]


schema TektonDevV1beta1CustomRunSpecCustomRef:
    r"""
    TaskRef can be used to refer to a specific instance of a task.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent
        Note: A Task with non-empty APIVersion and Kind is considered a Custom Task
    bundle : str, default is Undefined, optional
        Bundle url reference to a Tekton Bundle.

        Deprecated: Please use ResolverRef with the bundles resolver instead.
        The field is staying there for go client backward compatibility, but is not used/allowed anymore.
    kind : str, default is Undefined, optional
        TaskKind indicates the Kind of the Task:
        1. Namespaced Task when Kind is set to "Task". If Kind is "", it defaults to "Task".
        2. Custom Task when Kind is non-empty and APIVersion is non-empty
    name : str, default is Undefined, optional
        Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
    params : [TektonDevV1beta1CustomRunSpecCustomRefParamsItems0], default is Undefined, optional
        Params contains the parameters used to identify the
        referenced Tekton resource. Example entries might include
        "repo" or "path" but the set of params ultimately depends on
        the chosen resolver.
    resolver : str, default is Undefined, optional
        Resolver is the name of the resolver that should perform
        resolution of the referenced Tekton resource, such as "git".
    """


    apiVersion?: str

    bundle?: str

    kind?: str

    name?: str

    params?: [TektonDevV1beta1CustomRunSpecCustomRefParamsItems0]

    resolver?: str


schema TektonDevV1beta1CustomRunSpecCustomRefParamsItems0:
    r"""
    Param declares an ParamValues to use for the parameter called name.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    value : any, default is Undefined, required
        value
    """


    name: str

    value: any


schema TektonDevV1beta1CustomRunSpecCustomSpec:
    r"""
    Spec is a specification of a custom task

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        api version
    kind : str, default is Undefined, optional
        kind
    metadata : TektonDevV1beta1CustomRunSpecCustomSpecMetadata, default is Undefined, optional
        metadata
    spec : any, default is Undefined, optional
        Spec is a specification of a custom task
    """


    apiVersion?: str

    kind?: str

    metadata?: TektonDevV1beta1CustomRunSpecCustomSpecMetadata

    spec?: any


schema TektonDevV1beta1CustomRunSpecCustomSpecMetadata:
    r"""
    PipelineTaskMetadata contains the labels or annotations for an EmbeddedTask

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    labels : {str:str}, default is Undefined, optional
        labels
    """


    annotations?: {str:str}

    labels?: {str:str}


schema TektonDevV1beta1CustomRunSpecParamsItems0:
    r"""
    Param declares an ParamValues to use for the parameter called name.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    value : any, default is Undefined, required
        value
    """


    name: str

    value: any


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0:
    r"""
    WorkspaceBinding maps a Task's declared workspace to a Volume.

    Attributes
    ----------
    configMap : TektonDevV1beta1CustomRunSpecWorkspacesItems0ConfigMap, default is Undefined, optional
        config map
    csi : TektonDevV1beta1CustomRunSpecWorkspacesItems0Csi, default is Undefined, optional
        csi
    emptyDir : TektonDevV1beta1CustomRunSpecWorkspacesItems0EmptyDir, default is Undefined, optional
        empty dir
    name : str, default is Undefined, required
        Name is the name of the workspace populated by the volume.
    persistentVolumeClaim : TektonDevV1beta1CustomRunSpecWorkspacesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    projected : TektonDevV1beta1CustomRunSpecWorkspacesItems0Projected, default is Undefined, optional
        projected
    secret : TektonDevV1beta1CustomRunSpecWorkspacesItems0Secret, default is Undefined, optional
        secret
    subPath : str, default is Undefined, optional
        SubPath is optionally a directory on the volume which should be used
        for this binding (i.e. the volume will be mounted at this sub directory).
    volumeClaimTemplate : any, default is Undefined, optional
        VolumeClaimTemplate is a template for a claim that will be created in the same namespace.
        The PipelineRun controller is responsible for creating a unique claim for each instance of PipelineRun.
        See PersistentVolumeClaim (API version: v1)
    """


    configMap?: TektonDevV1beta1CustomRunSpecWorkspacesItems0ConfigMap

    csi?: TektonDevV1beta1CustomRunSpecWorkspacesItems0Csi

    emptyDir?: TektonDevV1beta1CustomRunSpecWorkspacesItems0EmptyDir

    name: str

    persistentVolumeClaim?: TektonDevV1beta1CustomRunSpecWorkspacesItems0PersistentVolumeClaim

    projected?: TektonDevV1beta1CustomRunSpecWorkspacesItems0Projected

    secret?: TektonDevV1beta1CustomRunSpecWorkspacesItems0Secret

    subPath?: str

    volumeClaimTemplate?: any


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ConfigMap:
    r"""
    ConfigMap represents a configMap that should populate this workspace.

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        Defaults to 0644.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    items : [TektonDevV1beta1CustomRunSpecWorkspacesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        ConfigMap will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the ConfigMap,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    defaultMode?: int

    items?: [TektonDevV1beta1CustomRunSpecWorkspacesItems0ConfigMapItemsItems0]

    name?: str = ""

    optional?: bool


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0Csi:
    r"""
    CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the CSI driver that handles this volume.
        Consult with your admin for the correct name as registered in the cluster.
    fsType : str, default is Undefined, optional
        fsType to mount. Ex. "ext4", "xfs", "ntfs".
        If not provided, the empty value is passed to the associated CSI driver
        which will determine the default filesystem to apply.
    nodePublishSecretRef : TektonDevV1beta1CustomRunSpecWorkspacesItems0CsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        readOnly specifies a read-only configuration for the volume.
        Defaults to false (read/write).
    volumeAttributes : {str:str}, default is Undefined, optional
        volumeAttributes stores driver-specific properties that are passed to the CSI
        driver. Consult your driver's documentation for supported values.
    """


    driver: str

    fsType?: str

    nodePublishSecretRef?: TektonDevV1beta1CustomRunSpecWorkspacesItems0CsiNodePublishSecretRef

    readOnly?: bool

    volumeAttributes?: {str:str}


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0CsiNodePublishSecretRef:
    r"""
    nodePublishSecretRef is a reference to the secret object containing
    sensitive information to pass to the CSI driver to complete the CSI
    NodePublishVolume and NodeUnpublishVolume calls.
    This field is optional, and  may be empty if no secret is required. If the
    secret object contains more than one secret, all secret references are passed.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """


    name?: str = ""


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0EmptyDir:
    r"""
    EmptyDir represents a temporary directory that shares a Task's lifetime.
    More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    Either this OR PersistentVolumeClaim can be used.

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory.
        The default is "" which means to use the node's default medium.
        Must be an empty string (default) or Memory.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume.
        The size limit is also applicable for memory medium.
        The maximum usage on memory medium EmptyDir would be the minimum value between
        the SizeLimit specified here and the sum of memory limits of all containers in a pod.
        The default is nil which means that the limit is undefined.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        _regex_match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0PersistentVolumeClaim:
    r"""
    PersistentVolumeClaimVolumeSource represents a reference to a
    PersistentVolumeClaim in the same namespace. Either this OR EmptyDir can be used.

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        readOnly Will force the ReadOnly setting in VolumeMounts.
        Default false.
    """


    claimName: str

    readOnly?: bool


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0Projected:
    r"""
    Projected represents a projected volume that should populate this workspace.

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode are the mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    sources : [TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0], default is Undefined, optional
        sources is the list of volume projections. Each entry in this list
        handles one source.
    """


    defaultMode?: int

    sources?: [TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0]


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0:
    r"""
    Projection that may be projected along with other supported volume types.
    Exactly one of these fields must be set.

    Attributes
    ----------
    clusterTrustBundle : TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundle, default is Undefined, optional
        cluster trust bundle
    configMap : TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    secret : TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """


    clusterTrustBundle?: TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundle

    configMap?: TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMap

    downwardAPI?: TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPI

    secret?: TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0Secret

    serviceAccountToken?: TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ServiceAccountToken


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundle:
    r"""
    ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
    of ClusterTrustBundle objects in an auto-updating file.

    Alpha, gated by the ClusterTrustBundleProjection feature gate.

    ClusterTrustBundle objects can either be selected by name, or by the
    combination of signer name and a label selector.

    Kubelet performs aggressive normalization of the PEM contents written
    into the pod filesystem.  Esoteric PEM features such as inter-block
    comments and block headers are stripped.  Certificates are deduplicated.
    The ordering of certificates within the file is arbitrary, and Kubelet
    may change the order over time.

    Attributes
    ----------
    labelSelector : TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        Select a single ClusterTrustBundle by object name.  Mutually-exclusive
        with signerName and labelSelector.
    optional : bool, default is Undefined, optional
        If true, don't block pod startup if the referenced ClusterTrustBundle(s)
        aren't available.  If using name, then the named ClusterTrustBundle is
        allowed not to exist.  If using signerName, then the combination of
        signerName and labelSelector is allowed to match zero
        ClusterTrustBundles.
    path : str, default is Undefined, required
        Relative path from the volume root to write the bundle.
    signerName : str, default is Undefined, optional
        Select all ClusterTrustBundles that match this signer name.
        Mutually-exclusive with name.  The contents of all selected
        ClusterTrustBundles will be unified and deduplicated.
    """


    labelSelector?: TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector

    name?: str

    optional?: bool

    path: str

    signerName?: str


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector:
    r"""
    Select all ClusterTrustBundles that match this label selector.  Only has
    effect if signerName is set.  Mutually-exclusive with name.  If unset,
    interpreted as "match nothing".  If set but empty, interpreted as "match
    everything".

    Attributes
    ----------
    matchExpressions : [TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMap:
    r"""
    configMap information about the configMap data to project

    Attributes
    ----------
    items : [TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        ConfigMap will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the ConfigMap,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    items?: [TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMapItemsItems0]

    name?: str = ""

    optional?: bool


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPI:
    r"""
    downwardAPI information about the downwardAPI data to project

    Attributes
    ----------
    items : [TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """


    items?: [TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    r"""
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value
        between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    r"""
    Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0Secret:
    r"""
    secret information about the secret data to project

    Attributes
    ----------
    items : [TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        Secret will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the Secret,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its key must be defined
    """


    items?: [TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0SecretItemsItems0]

    name?: str = ""

    optional?: bool


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0ProjectedSourcesItems0ServiceAccountToken:
    r"""
    serviceAccountToken is information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        audience is the intended audience of the token. A recipient of a token
        must identify itself with an identifier specified in the audience of the
        token, and otherwise should reject the token. The audience defaults to the
        identifier of the apiserver.
    expirationSeconds : int, default is Undefined, optional
        expirationSeconds is the requested duration of validity of the service
        account token. As the token approaches expiration, the kubelet volume
        plugin will proactively rotate the service account token. The kubelet will
        start trying to rotate the token if the token is older than 80 percent of
        its time to live or if the token is older than 24 hours.Defaults to 1 hour
        and must be at least 10 minutes.
    path : str, default is Undefined, required
        path is the path relative to the mount point of the file to project the
        token into.
    """


    audience?: str

    expirationSeconds?: int

    path: str


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0Secret:
    r"""
    Secret represents a secret that should populate this workspace.

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is Optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values
        for mode bits. Defaults to 0644.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    items : [TektonDevV1beta1CustomRunSpecWorkspacesItems0SecretItemsItems0], default is Undefined, optional
        items If unspecified, each key-value pair in the Data field of the referenced
        Secret will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the Secret,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        secretName is the name of the secret in the pod's namespace to use.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """


    defaultMode?: int

    items?: [TektonDevV1beta1CustomRunSpecWorkspacesItems0SecretItemsItems0]

    optional?: bool

    secretName?: str


schema TektonDevV1beta1CustomRunSpecWorkspacesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema TektonDevV1beta1CustomRunStatus:
    r"""
    CustomRunStatus defines the observed state of CustomRun

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some
        additional State as well as convey more information to the user. This is
        roughly akin to Annotations on any k8s resource, just the reconciler conveying
        richer information outwards.
    completionTime : str, default is Undefined, optional
        CompletionTime is the time the build completed.
    conditions : [TektonDevV1beta1CustomRunStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    extraFields : any, default is Undefined, optional
        ExtraFields holds arbitrary fields provided by the custom task
        controller.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that
        was last processed by the controller.
    results : [TektonDevV1beta1CustomRunStatusResultsItems0], default is Undefined, optional
        Results reports any output result values to be consumed by later
        tasks in a pipeline.
    retriesStatus : any, default is Undefined, optional
        RetriesStatus contains the history of CustomRunStatus, in case of a retry.
        See CustomRun.status (API version: tekton.dev/v1beta1)
    startTime : str, default is Undefined, optional
        StartTime is the time the build is actually started.
    """


    annotations?: {str:str}

    completionTime?: str

    conditions?: [TektonDevV1beta1CustomRunStatusConditionsItems0]

    extraFields?: any

    observedGeneration?: int

    results?: [TektonDevV1beta1CustomRunStatusResultsItems0]

    retriesStatus?: any

    startTime?: str


schema TektonDevV1beta1CustomRunStatusConditionsItems0:
    r"""
    Condition defines a readiness condition for a Knative resource.
    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another.
        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
        differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition.
        When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema TektonDevV1beta1CustomRunStatusResultsItems0:
    r"""
    CustomRunResult used to describe the results of a task

    Attributes
    ----------
    name : str, default is Undefined, required
        Name the given name
    value : str, default is Undefined, required
        Value the given value of the result
    """


    name: str

    value: str


