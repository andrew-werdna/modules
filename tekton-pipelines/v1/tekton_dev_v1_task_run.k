"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema TaskRun:
    r"""
    TaskRun represents a single execution of a Task. TaskRuns are how the steps
    specified in a Task are executed; they specify the parameters and resources
    used to run the steps in a Task.

    Attributes
    ----------
    apiVersion : str, default is "tekton.dev/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TaskRun", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : TektonDevV1TaskRunSpec, default is Undefined, optional
        spec
    status : TektonDevV1TaskRunStatus, default is Undefined, optional
        status
    """


    apiVersion: "tekton.dev/v1" = "tekton.dev/v1"

    kind: "TaskRun" = "TaskRun"

    metadata?: v1.ObjectMeta

    spec?: TektonDevV1TaskRunSpec

    status?: TektonDevV1TaskRunStatus


schema TektonDevV1TaskRunSpec:
    r"""
    TaskRunSpec defines the desired state of TaskRun

    Attributes
    ----------
    computeResources : TektonDevV1TaskRunSpecComputeResources, default is Undefined, optional
        compute resources
    debug : TektonDevV1TaskRunSpecDebug, default is Undefined, optional
        debug
    params : [TektonDevV1TaskRunSpecParamsItems0], default is Undefined, optional
        Params is a list of Param
    podTemplate : TektonDevV1TaskRunSpecPodTemplate, default is Undefined, optional
        pod template
    retries : int, default is Undefined, optional
        Retries represents how many times this TaskRun should be retried in the event of task failure.
    serviceAccountName : str, default is Undefined, optional
        service account name
    sidecarSpecs : [TektonDevV1TaskRunSpecSidecarSpecsItems0], default is Undefined, optional
        Specs to apply to Sidecars in this TaskRun.
        If a field is specified in both a Sidecar and a SidecarSpec,
        the value from the SidecarSpec will be used.
        This field is only supported when the alpha feature gate is enabled.
    status : str, default is Undefined, optional
        Used for cancelling a TaskRun (and maybe more later on)
    statusMessage : str, default is Undefined, optional
        Status message for cancellation.
    stepSpecs : [TektonDevV1TaskRunSpecStepSpecsItems0], default is Undefined, optional
        Specs to apply to Steps in this TaskRun.
        If a field is specified in both a Step and a StepSpec,
        the value from the StepSpec will be used.
        This field is only supported when the alpha feature gate is enabled.
    taskRef : TektonDevV1TaskRunSpecTaskRef, default is Undefined, optional
        task ref
    taskSpec : any, default is Undefined, optional
        Specifying TaskSpec can be disabled by setting
        `disable-inline-spec` feature flag.
        See Task.spec (API version: tekton.dev/v1)
    timeout : str, default is Undefined, optional
        Time after which one retry attempt times out. Defaults to 1 hour.
        Refer Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration
    workspaces : [TektonDevV1TaskRunSpecWorkspacesItems0], default is Undefined, optional
        Workspaces is a list of WorkspaceBindings from volumes to workspaces.
    """


    computeResources?: TektonDevV1TaskRunSpecComputeResources

    debug?: TektonDevV1TaskRunSpecDebug

    params?: [TektonDevV1TaskRunSpecParamsItems0]

    podTemplate?: TektonDevV1TaskRunSpecPodTemplate

    retries?: int

    serviceAccountName?: str

    sidecarSpecs?: [TektonDevV1TaskRunSpecSidecarSpecsItems0]

    status?: str

    statusMessage?: str

    stepSpecs?: [TektonDevV1TaskRunSpecStepSpecsItems0]

    taskRef?: TektonDevV1TaskRunSpecTaskRef

    taskSpec?: any

    timeout?: str

    workspaces?: [TektonDevV1TaskRunSpecWorkspacesItems0]


schema TektonDevV1TaskRunSpecComputeResources:
    r"""
    Compute resources to use for this TaskRun

    Attributes
    ----------
    claims : [TektonDevV1TaskRunSpecComputeResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [TektonDevV1TaskRunSpecComputeResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema TektonDevV1TaskRunSpecComputeResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """


    name: str

    request?: str


schema TektonDevV1TaskRunSpecDebug:
    r"""
    TaskRunDebug defines the breakpoint config for a particular TaskRun

    Attributes
    ----------
    breakpoints : TektonDevV1TaskRunSpecDebugBreakpoints, default is Undefined, optional
        breakpoints
    """


    breakpoints?: TektonDevV1TaskRunSpecDebugBreakpoints


schema TektonDevV1TaskRunSpecDebugBreakpoints:
    r"""
    TaskBreakpoints defines the breakpoint config for a particular Task

    Attributes
    ----------
    beforeSteps : [str], default is Undefined, optional
        before steps
    onFailure : str, default is Undefined, optional
        if enabled, pause TaskRun on failure of a step
        failed step will not exit
    """


    beforeSteps?: [str]

    onFailure?: str


schema TektonDevV1TaskRunSpecParamsItems0:
    r"""
    Param declares an ParamValues to use for the parameter called name.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    value : any, default is Undefined, required
        value
    """


    name: str

    value: any


schema TektonDevV1TaskRunSpecPodTemplate:
    r"""
    PodTemplate holds pod specific configuration

    Attributes
    ----------
    affinity : any, default is Undefined, optional
        If specified, the pod's scheduling constraints.
        See Pod.spec.affinity (API version: v1)
    automountServiceAccountToken : bool, default is Undefined, optional
        AutomountServiceAccountToken indicates whether pods running as this
        service account should have an API token automatically mounted.
    dnsConfig : TektonDevV1TaskRunSpecPodTemplateDNSConfig, default is Undefined, optional
        dns config
    dnsPolicy : str, default is Undefined, optional
        Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are
        'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig
        will be merged with the policy selected with DNSPolicy.
    enableServiceLinks : bool, default is Undefined, optional
        EnableServiceLinks indicates whether information about services should be injected into pod's
        environment variables, matching the syntax of Docker links.
        Optional: Defaults to true.
    env : [TektonDevV1TaskRunSpecPodTemplateEnvItems0], default is Undefined, optional
        List of environment variables that can be provided to the containers belonging to the pod.
    hostAliases : [TektonDevV1TaskRunSpecPodTemplateHostAliasesItems0], default is Undefined, optional
        HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
        file if specified. This is only valid for non-hostNetwork pods.
    hostNetwork : bool, default is Undefined, optional
        HostNetwork specifies whether the pod may use the node network namespace
    imagePullSecrets : [TektonDevV1TaskRunSpecPodTemplateImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets gives the name of the secret used by the pod to pull the image if specified
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector is a selector which must be true for the pod to fit on a node.
        Selector which must match a node's labels for the pod to be scheduled on that node.
        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    priorityClassName : str, default is Undefined, optional
        If specified, indicates the pod's priority. "system-node-critical" and
        "system-cluster-critical" are two special keywords which indicate the
        highest priorities with the former being the highest priority. Any other
        name must be defined by creating a PriorityClass object with that name.
        If not specified, the pod priority will be default or zero if there is no
        default.
    runtimeClassName : str, default is Undefined, optional
        RuntimeClassName refers to a RuntimeClass object in the node.k8s.io
        group, which should be used to run this pod. If no RuntimeClass resource
        matches the named class, the pod will not be run. If unset or empty, the
        "legacy" RuntimeClass will be used, which is an implicit class with an
        empty definition that uses the default runtime handler.
        More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
        This is a beta feature as of Kubernetes v1.14.
    schedulerName : str, default is Undefined, optional
        SchedulerName specifies the scheduler to be used to dispatch the Pod
    securityContext : any, default is Undefined, optional
        SecurityContext holds pod-level security attributes and common container settings.
        Optional: Defaults to empty.  See type description for default values of each field.
        See Pod.spec.securityContext (API version: v1)
    tolerations : [TektonDevV1TaskRunSpecPodTemplateTolerationsItems0], default is Undefined, optional
        If specified, the pod's tolerations.
    topologySpreadConstraints : [TektonDevV1TaskRunSpecPodTemplateTopologySpreadConstraintsItems0], default is Undefined, optional
        TopologySpreadConstraints controls how Pods are spread across your cluster among
        failure-domains such as regions, zones, nodes, and other user-defined topology domains.
    volumes : any, default is Undefined, optional
        List of volumes that can be mounted by containers belonging to the pod.
        More info: https://kubernetes.io/docs/concepts/storage/volumes
        See Pod.spec.volumes (API version: v1)
    """


    affinity?: any

    automountServiceAccountToken?: bool

    dnsConfig?: TektonDevV1TaskRunSpecPodTemplateDNSConfig

    dnsPolicy?: str

    enableServiceLinks?: bool

    env?: [TektonDevV1TaskRunSpecPodTemplateEnvItems0]

    hostAliases?: [TektonDevV1TaskRunSpecPodTemplateHostAliasesItems0]

    hostNetwork?: bool

    imagePullSecrets?: [TektonDevV1TaskRunSpecPodTemplateImagePullSecretsItems0]

    nodeSelector?: {str:str}

    priorityClassName?: str

    runtimeClassName?: str

    schedulerName?: str

    securityContext?: any

    tolerations?: [TektonDevV1TaskRunSpecPodTemplateTolerationsItems0]

    topologySpreadConstraints?: [TektonDevV1TaskRunSpecPodTemplateTopologySpreadConstraintsItems0]

    volumes?: any


schema TektonDevV1TaskRunSpecPodTemplateDNSConfig:
    r"""
    Specifies the DNS parameters of a pod.
    Parameters specified here will be merged to the generated DNS
    configuration based on DNSPolicy.

    Attributes
    ----------
    nameservers : [str], default is Undefined, optional
        A list of DNS name server IP addresses.
        This will be appended to the base nameservers generated from DNSPolicy.
        Duplicated nameservers will be removed.
    options : [TektonDevV1TaskRunSpecPodTemplateDNSConfigOptionsItems0], default is Undefined, optional
        A list of DNS resolver options.
        This will be merged with the base options generated from DNSPolicy.
        Duplicated entries will be removed. Resolution options given in Options
        will override those that appear in the base DNSPolicy.
    searches : [str], default is Undefined, optional
        A list of DNS search domains for host-name lookup.
        This will be appended to the base search paths generated from DNSPolicy.
        Duplicated search paths will be removed.
    """


    nameservers?: [str]

    options?: [TektonDevV1TaskRunSpecPodTemplateDNSConfigOptionsItems0]

    searches?: [str]


schema TektonDevV1TaskRunSpecPodTemplateDNSConfigOptionsItems0:
    r"""
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is this DNS resolver option's name.
        Required.
    value : str, default is Undefined, optional
        Value is this DNS resolver option's value.
    """


    name?: str

    value?: str


schema TektonDevV1TaskRunSpecPodTemplateEnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFrom


schema TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromFieldRef

    resourceFieldRef?: TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromSecretKeyRef


schema TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema TektonDevV1TaskRunSpecPodTemplateEnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunSpecPodTemplateHostAliasesItems0:
    r"""
    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
    pod's hosts file.

    Attributes
    ----------
    hostnames : [str], default is Undefined, optional
        Hostnames for the above IP address.
    ip : str, default is Undefined, required
        IP address of the host file entry.
    """


    hostnames?: [str]

    ip: str


schema TektonDevV1TaskRunSpecPodTemplateImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the
    referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """


    name?: str = ""


schema TektonDevV1TaskRunSpecPodTemplateTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches
    the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects.
        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys.
        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value.
        Valid operators are Exists and Equal. Defaults to Equal.
        Exists is equivalent to wildcard for value, so that a pod can
        tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be
        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
        it is not set, which means tolerate the taint forever (do not evict). Zero and
        negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to.
        If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema TektonDevV1TaskRunSpecPodTemplateTopologySpreadConstraintsItems0:
    r"""
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : TektonDevV1TaskRunSpecPodTemplateTopologySpreadConstraintsItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select the pods over which
        spreading will be calculated. The keys are used to lookup values from the
        incoming pod labels, those key-value labels are ANDed with labelSelector
        to select the group of existing pods over which spreading will be calculated
        for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
        MatchLabelKeys cannot be set when LabelSelector isn't set.
        Keys that don't exist in the incoming pod labels will
        be ignored. A null or empty list means only match against labelSelector.

        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
    maxSkew : int, default is Undefined, required
        MaxSkew describes the degree to which pods may be unevenly distributed.
        When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
        between the number of matching pods in the target topology and the global minimum.
        The global minimum is the minimum number of matching pods in an eligible domain
        or zero if the number of eligible domains is less than MinDomains.
        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
        labelSelector spread as 2/2/1:
        In this case, the global minimum is 1.
        | zone1 | zone2 | zone3 |
        |  P P  |  P P  |   P   |
        - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
        scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
        violate MaxSkew(1).
        - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
        When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
        to topologies that satisfy it.
        It's a required field. Default value is 1 and 0 is not allowed.
    minDomains : int, default is Undefined, optional
        MinDomains indicates a minimum number of eligible domains.
        When the number of eligible domains with matching topology keys is less than minDomains,
        Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
        And when the number of eligible domains with matching topology keys equals or greater than minDomains,
        this value has no effect on scheduling.
        As a result, when the number of eligible domains is less than minDomains,
        scheduler won't schedule more than maxSkew Pods to those domains.
        If value is nil, the constraint behaves as if MinDomains is equal to 1.
        Valid values are integers greater than 0.
        When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
        labelSelector spread as 2/2/2:
        | zone1 | zone2 | zone3 |
        |  P P  |  P P  |  P P  |
        The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
        In this situation, new pod with the same labelSelector cannot be scheduled,
        because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
        it will violate MaxSkew.
    nodeAffinityPolicy : str, default is Undefined, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
        when calculating pod topology spread skew. Options are:
        - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
        - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

        If this value is nil, the behavior is equivalent to the Honor policy.
        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    nodeTaintsPolicy : str, default is Undefined, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating
        pod topology spread skew. Options are:
        - Honor: nodes without taints, along with tainted nodes for which the incoming pod
        has a toleration, are included.
        - Ignore: node taints are ignored. All nodes are included.

        If this value is nil, the behavior is equivalent to the Ignore policy.
        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    topologyKey : str, default is Undefined, required
        TopologyKey is the key of node labels. Nodes that have a label with this key
        and identical values are considered to be in the same topology.
        We consider each <key, value> as a "bucket", and try to put balanced number
        of pods into each bucket.
        We define a domain as a particular instance of a topology.
        Also, we define an eligible domain as a domain whose nodes meet the requirements of
        nodeAffinityPolicy and nodeTaintsPolicy.
        e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
        And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
        It's a required field.
    whenUnsatisfiable : str, default is Undefined, required
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
        the spread constraint.
        - DoNotSchedule (default) tells the scheduler not to schedule it.
        - ScheduleAnyway tells the scheduler to schedule the pod in any location,
          but giving higher precedence to topologies that would help reduce the
          skew.
        A constraint is considered "Unsatisfiable" for an incoming pod
        if and only if every possible node assignment for that pod would violate
        "MaxSkew" on some topology.
        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
        labelSelector spread as 3/1/1:
        | zone1 | zone2 | zone3 |
        | P P P |   P   |   P   |
        If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
        to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
        MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
        won't make it *more* imbalanced.
        It's a required field.
    """


    labelSelector?: TektonDevV1TaskRunSpecPodTemplateTopologySpreadConstraintsItems0LabelSelector

    matchLabelKeys?: [str]

    maxSkew: int

    minDomains?: int

    nodeAffinityPolicy?: str

    nodeTaintsPolicy?: str

    topologyKey: str

    whenUnsatisfiable: str


schema TektonDevV1TaskRunSpecPodTemplateTopologySpreadConstraintsItems0LabelSelector:
    r"""
    LabelSelector is used to find matching pods.
    Pods that match this label selector are counted to determine the number of pods
    in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [TektonDevV1TaskRunSpecPodTemplateTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [TektonDevV1TaskRunSpecPodTemplateTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema TektonDevV1TaskRunSpecPodTemplateTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema TektonDevV1TaskRunSpecSidecarSpecsItems0:
    r"""
    TaskRunSidecarSpec is used to override the values of a Sidecar in the corresponding Task.

    Attributes
    ----------
    computeResources : TektonDevV1TaskRunSpecSidecarSpecsItems0ComputeResources, default is Undefined, required
        compute resources
    name : str, default is Undefined, required
        The name of the Sidecar to override.
    """


    computeResources: TektonDevV1TaskRunSpecSidecarSpecsItems0ComputeResources

    name: str


schema TektonDevV1TaskRunSpecSidecarSpecsItems0ComputeResources:
    r"""
    The resource requirements to apply to the Sidecar.

    Attributes
    ----------
    claims : [TektonDevV1TaskRunSpecSidecarSpecsItems0ComputeResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [TektonDevV1TaskRunSpecSidecarSpecsItems0ComputeResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema TektonDevV1TaskRunSpecSidecarSpecsItems0ComputeResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """


    name: str

    request?: str


schema TektonDevV1TaskRunSpecStepSpecsItems0:
    r"""
    TaskRunStepSpec is used to override the values of a Step in the corresponding Task.

    Attributes
    ----------
    computeResources : TektonDevV1TaskRunSpecStepSpecsItems0ComputeResources, default is Undefined, required
        compute resources
    name : str, default is Undefined, required
        The name of the Step to override.
    """


    computeResources: TektonDevV1TaskRunSpecStepSpecsItems0ComputeResources

    name: str


schema TektonDevV1TaskRunSpecStepSpecsItems0ComputeResources:
    r"""
    The resource requirements to apply to the Step.

    Attributes
    ----------
    claims : [TektonDevV1TaskRunSpecStepSpecsItems0ComputeResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [TektonDevV1TaskRunSpecStepSpecsItems0ComputeResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema TektonDevV1TaskRunSpecStepSpecsItems0ComputeResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """


    name: str

    request?: str


schema TektonDevV1TaskRunSpecTaskRef:
    r"""
    no more than one of the TaskRef and TaskSpec may be specified.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent
        Note: A Task with non-empty APIVersion and Kind is considered a Custom Task
    kind : str, default is Undefined, optional
        TaskKind indicates the Kind of the Task:
        1. Namespaced Task when Kind is set to "Task". If Kind is "", it defaults to "Task".
        2. Custom Task when Kind is non-empty and APIVersion is non-empty
    name : str, default is Undefined, optional
        Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
    params : [TektonDevV1TaskRunSpecTaskRefParamsItems0], default is Undefined, optional
        Params contains the parameters used to identify the
        referenced Tekton resource. Example entries might include
        "repo" or "path" but the set of params ultimately depends on
        the chosen resolver.
    resolver : str, default is Undefined, optional
        Resolver is the name of the resolver that should perform
        resolution of the referenced Tekton resource, such as "git".
    """


    apiVersion?: str

    kind?: str

    name?: str

    params?: [TektonDevV1TaskRunSpecTaskRefParamsItems0]

    resolver?: str


schema TektonDevV1TaskRunSpecTaskRefParamsItems0:
    r"""
    Param declares an ParamValues to use for the parameter called name.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    value : any, default is Undefined, required
        value
    """


    name: str

    value: any


schema TektonDevV1TaskRunSpecWorkspacesItems0:
    r"""
    WorkspaceBinding maps a Task's declared workspace to a Volume.

    Attributes
    ----------
    configMap : TektonDevV1TaskRunSpecWorkspacesItems0ConfigMap, default is Undefined, optional
        config map
    csi : TektonDevV1TaskRunSpecWorkspacesItems0Csi, default is Undefined, optional
        csi
    emptyDir : TektonDevV1TaskRunSpecWorkspacesItems0EmptyDir, default is Undefined, optional
        empty dir
    name : str, default is Undefined, required
        Name is the name of the workspace populated by the volume.
    persistentVolumeClaim : TektonDevV1TaskRunSpecWorkspacesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    projected : TektonDevV1TaskRunSpecWorkspacesItems0Projected, default is Undefined, optional
        projected
    secret : TektonDevV1TaskRunSpecWorkspacesItems0Secret, default is Undefined, optional
        secret
    subPath : str, default is Undefined, optional
        SubPath is optionally a directory on the volume which should be used
        for this binding (i.e. the volume will be mounted at this sub directory).
    volumeClaimTemplate : any, default is Undefined, optional
        VolumeClaimTemplate is a template for a claim that will be created in the same namespace.
        The PipelineRun controller is responsible for creating a unique claim for each instance of PipelineRun.
        See PersistentVolumeClaim (API version: v1)
    """


    configMap?: TektonDevV1TaskRunSpecWorkspacesItems0ConfigMap

    csi?: TektonDevV1TaskRunSpecWorkspacesItems0Csi

    emptyDir?: TektonDevV1TaskRunSpecWorkspacesItems0EmptyDir

    name: str

    persistentVolumeClaim?: TektonDevV1TaskRunSpecWorkspacesItems0PersistentVolumeClaim

    projected?: TektonDevV1TaskRunSpecWorkspacesItems0Projected

    secret?: TektonDevV1TaskRunSpecWorkspacesItems0Secret

    subPath?: str

    volumeClaimTemplate?: any


schema TektonDevV1TaskRunSpecWorkspacesItems0ConfigMap:
    r"""
    ConfigMap represents a configMap that should populate this workspace.

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        Defaults to 0644.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    items : [TektonDevV1TaskRunSpecWorkspacesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        ConfigMap will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the ConfigMap,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    defaultMode?: int

    items?: [TektonDevV1TaskRunSpecWorkspacesItems0ConfigMapItemsItems0]

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunSpecWorkspacesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema TektonDevV1TaskRunSpecWorkspacesItems0Csi:
    r"""
    CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the CSI driver that handles this volume.
        Consult with your admin for the correct name as registered in the cluster.
    fsType : str, default is Undefined, optional
        fsType to mount. Ex. "ext4", "xfs", "ntfs".
        If not provided, the empty value is passed to the associated CSI driver
        which will determine the default filesystem to apply.
    nodePublishSecretRef : TektonDevV1TaskRunSpecWorkspacesItems0CsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        readOnly specifies a read-only configuration for the volume.
        Defaults to false (read/write).
    volumeAttributes : {str:str}, default is Undefined, optional
        volumeAttributes stores driver-specific properties that are passed to the CSI
        driver. Consult your driver's documentation for supported values.
    """


    driver: str

    fsType?: str

    nodePublishSecretRef?: TektonDevV1TaskRunSpecWorkspacesItems0CsiNodePublishSecretRef

    readOnly?: bool

    volumeAttributes?: {str:str}


schema TektonDevV1TaskRunSpecWorkspacesItems0CsiNodePublishSecretRef:
    r"""
    nodePublishSecretRef is a reference to the secret object containing
    sensitive information to pass to the CSI driver to complete the CSI
    NodePublishVolume and NodeUnpublishVolume calls.
    This field is optional, and  may be empty if no secret is required. If the
    secret object contains more than one secret, all secret references are passed.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """


    name?: str = ""


schema TektonDevV1TaskRunSpecWorkspacesItems0EmptyDir:
    r"""
    EmptyDir represents a temporary directory that shares a Task's lifetime.
    More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    Either this OR PersistentVolumeClaim can be used.

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory.
        The default is "" which means to use the node's default medium.
        Must be an empty string (default) or Memory.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume.
        The size limit is also applicable for memory medium.
        The maximum usage on memory medium EmptyDir would be the minimum value between
        the SizeLimit specified here and the sum of memory limits of all containers in a pod.
        The default is nil which means that the limit is undefined.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        _regex_match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema TektonDevV1TaskRunSpecWorkspacesItems0PersistentVolumeClaim:
    r"""
    PersistentVolumeClaimVolumeSource represents a reference to a
    PersistentVolumeClaim in the same namespace. Either this OR EmptyDir can be used.

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        readOnly Will force the ReadOnly setting in VolumeMounts.
        Default false.
    """


    claimName: str

    readOnly?: bool


schema TektonDevV1TaskRunSpecWorkspacesItems0Projected:
    r"""
    Projected represents a projected volume that should populate this workspace.

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode are the mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    sources : [TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0], default is Undefined, optional
        sources is the list of volume projections. Each entry in this list
        handles one source.
    """


    defaultMode?: int

    sources?: [TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0]


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0:
    r"""
    Projection that may be projected along with other supported volume types.
    Exactly one of these fields must be set.

    Attributes
    ----------
    clusterTrustBundle : TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundle, default is Undefined, optional
        cluster trust bundle
    configMap : TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    secret : TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """


    clusterTrustBundle?: TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundle

    configMap?: TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMap

    downwardAPI?: TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPI

    secret?: TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0Secret

    serviceAccountToken?: TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ServiceAccountToken


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundle:
    r"""
    ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
    of ClusterTrustBundle objects in an auto-updating file.

    Alpha, gated by the ClusterTrustBundleProjection feature gate.

    ClusterTrustBundle objects can either be selected by name, or by the
    combination of signer name and a label selector.

    Kubelet performs aggressive normalization of the PEM contents written
    into the pod filesystem.  Esoteric PEM features such as inter-block
    comments and block headers are stripped.  Certificates are deduplicated.
    The ordering of certificates within the file is arbitrary, and Kubelet
    may change the order over time.

    Attributes
    ----------
    labelSelector : TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        Select a single ClusterTrustBundle by object name.  Mutually-exclusive
        with signerName and labelSelector.
    optional : bool, default is Undefined, optional
        If true, don't block pod startup if the referenced ClusterTrustBundle(s)
        aren't available.  If using name, then the named ClusterTrustBundle is
        allowed not to exist.  If using signerName, then the combination of
        signerName and labelSelector is allowed to match zero
        ClusterTrustBundles.
    path : str, default is Undefined, required
        Relative path from the volume root to write the bundle.
    signerName : str, default is Undefined, optional
        Select all ClusterTrustBundles that match this signer name.
        Mutually-exclusive with name.  The contents of all selected
        ClusterTrustBundles will be unified and deduplicated.
    """


    labelSelector?: TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector

    name?: str

    optional?: bool

    path: str

    signerName?: str


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector:
    r"""
    Select all ClusterTrustBundles that match this label selector.  Only has
    effect if signerName is set.  Mutually-exclusive with name.  If unset,
    interpreted as "match nothing".  If set but empty, interpreted as "match
    everything".

    Attributes
    ----------
    matchExpressions : [TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMap:
    r"""
    configMap information about the configMap data to project

    Attributes
    ----------
    items : [TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        ConfigMap will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the ConfigMap,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    items?: [TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMapItemsItems0]

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPI:
    r"""
    downwardAPI information about the downwardAPI data to project

    Attributes
    ----------
    items : [TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """


    items?: [TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    r"""
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value
        between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    r"""
    Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0Secret:
    r"""
    secret information about the secret data to project

    Attributes
    ----------
    items : [TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        Secret will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the Secret,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its key must be defined
    """


    items?: [TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0SecretItemsItems0]

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema TektonDevV1TaskRunSpecWorkspacesItems0ProjectedSourcesItems0ServiceAccountToken:
    r"""
    serviceAccountToken is information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        audience is the intended audience of the token. A recipient of a token
        must identify itself with an identifier specified in the audience of the
        token, and otherwise should reject the token. The audience defaults to the
        identifier of the apiserver.
    expirationSeconds : int, default is Undefined, optional
        expirationSeconds is the requested duration of validity of the service
        account token. As the token approaches expiration, the kubelet volume
        plugin will proactively rotate the service account token. The kubelet will
        start trying to rotate the token if the token is older than 80 percent of
        its time to live or if the token is older than 24 hours.Defaults to 1 hour
        and must be at least 10 minutes.
    path : str, default is Undefined, required
        path is the path relative to the mount point of the file to project the
        token into.
    """


    audience?: str

    expirationSeconds?: int

    path: str


schema TektonDevV1TaskRunSpecWorkspacesItems0Secret:
    r"""
    Secret represents a secret that should populate this workspace.

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is Optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values
        for mode bits. Defaults to 0644.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    items : [TektonDevV1TaskRunSpecWorkspacesItems0SecretItemsItems0], default is Undefined, optional
        items If unspecified, each key-value pair in the Data field of the referenced
        Secret will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the Secret,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        secretName is the name of the secret in the pod's namespace to use.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """


    defaultMode?: int

    items?: [TektonDevV1TaskRunSpecWorkspacesItems0SecretItemsItems0]

    optional?: bool

    secretName?: str


schema TektonDevV1TaskRunSpecWorkspacesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema TektonDevV1TaskRunStatus:
    r"""
    TaskRunStatus defines the observed state of TaskRun

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some
        additional State as well as convey more information to the user. This is
        roughly akin to Annotations on any k8s resource, just the reconciler conveying
        richer information outwards.
    artifacts : TektonDevV1TaskRunStatusArtifacts, default is Undefined, optional
        artifacts
    completionTime : str, default is Undefined, optional
        CompletionTime is the time the build completed.
    conditions : [TektonDevV1TaskRunStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that
        was last processed by the controller.
    podName : str, default is Undefined, required
        PodName is the name of the pod responsible for executing this task's steps.
    provenance : TektonDevV1TaskRunStatusProvenance, default is Undefined, optional
        provenance
    results : [TektonDevV1TaskRunStatusResultsItems0], default is Undefined, optional
        Results are the list of results written out by the task's containers
    retriesStatus : any, default is Undefined, optional
        RetriesStatus contains the history of TaskRunStatus in case of a retry in order to keep record of failures.
        All TaskRunStatus stored in RetriesStatus will have no date within the RetriesStatus as is redundant.
    sidecars : [TektonDevV1TaskRunStatusSidecarsItems0], default is Undefined, optional
        The list has one entry per sidecar in the manifest. Each entry is
        represents the imageid of the corresponding sidecar.
    spanContext : {str:str}, default is Undefined, optional
        SpanContext contains tracing span context fields
    startTime : str, default is Undefined, optional
        StartTime is the time the build is actually started.
    steps : [TektonDevV1TaskRunStatusStepsItems0], default is Undefined, optional
        Steps describes the state of each build step container.
    taskSpec : TektonDevV1TaskRunStatusTaskSpec, default is Undefined, optional
        task spec
    """


    annotations?: {str:str}

    artifacts?: TektonDevV1TaskRunStatusArtifacts

    completionTime?: str

    conditions?: [TektonDevV1TaskRunStatusConditionsItems0]

    observedGeneration?: int

    podName: str

    provenance?: TektonDevV1TaskRunStatusProvenance

    results?: [TektonDevV1TaskRunStatusResultsItems0]

    retriesStatus?: any

    sidecars?: [TektonDevV1TaskRunStatusSidecarsItems0]

    spanContext?: {str:str}

    startTime?: str

    steps?: [TektonDevV1TaskRunStatusStepsItems0]

    taskSpec?: TektonDevV1TaskRunStatusTaskSpec


schema TektonDevV1TaskRunStatusArtifacts:
    r"""
    Artifacts are the list of artifacts written out by the task's containers

    Attributes
    ----------
    inputs : [TektonDevV1TaskRunStatusArtifactsInputsItems0], default is Undefined, optional
        inputs
    outputs : [TektonDevV1TaskRunStatusArtifactsOutputsItems0], default is Undefined, optional
        outputs
    """


    inputs?: [TektonDevV1TaskRunStatusArtifactsInputsItems0]

    outputs?: [TektonDevV1TaskRunStatusArtifactsOutputsItems0]


schema TektonDevV1TaskRunStatusArtifactsInputsItems0:
    r"""
    Artifact represents an artifact within a system, potentially containing multiple values
    associated with it.

    Attributes
    ----------
    buildOutput : bool, default is Undefined, optional
        Indicate if the artifact is a build output or a by-product
    name : str, default is Undefined, optional
        The artifact's identifying category name
    values : [TektonDevV1TaskRunStatusArtifactsInputsItems0ValuesItems0], default is Undefined, optional
        A collection of values related to the artifact
    """


    buildOutput?: bool

    name?: str

    values?: [TektonDevV1TaskRunStatusArtifactsInputsItems0ValuesItems0]


schema TektonDevV1TaskRunStatusArtifactsInputsItems0ValuesItems0:
    r"""
    ArtifactValue represents a specific value or data element within an Artifact.

    Attributes
    ----------
    digest : {str:str}, default is Undefined, optional
        digest
    uri : str, default is Undefined, optional
        uri
    """


    digest?: {str:str}

    uri?: str


schema TektonDevV1TaskRunStatusArtifactsOutputsItems0:
    r"""
    Artifact represents an artifact within a system, potentially containing multiple values
    associated with it.

    Attributes
    ----------
    buildOutput : bool, default is Undefined, optional
        Indicate if the artifact is a build output or a by-product
    name : str, default is Undefined, optional
        The artifact's identifying category name
    values : [TektonDevV1TaskRunStatusArtifactsOutputsItems0ValuesItems0], default is Undefined, optional
        A collection of values related to the artifact
    """


    buildOutput?: bool

    name?: str

    values?: [TektonDevV1TaskRunStatusArtifactsOutputsItems0ValuesItems0]


schema TektonDevV1TaskRunStatusArtifactsOutputsItems0ValuesItems0:
    r"""
    ArtifactValue represents a specific value or data element within an Artifact.

    Attributes
    ----------
    digest : {str:str}, default is Undefined, optional
        digest
    uri : str, default is Undefined, optional
        uri
    """


    digest?: {str:str}

    uri?: str


schema TektonDevV1TaskRunStatusConditionsItems0:
    r"""
    Condition defines a readiness condition for a Knative resource.
    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another.
        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
        differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition.
        When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema TektonDevV1TaskRunStatusProvenance:
    r"""
    Provenance contains some key authenticated metadata about how a software artifact was built (what sources, what inputs/outputs, etc.).

    Attributes
    ----------
    featureFlags : TektonDevV1TaskRunStatusProvenanceFeatureFlags, default is Undefined, optional
        feature flags
    refSource : TektonDevV1TaskRunStatusProvenanceRefSource, default is Undefined, optional
        ref source
    """


    featureFlags?: TektonDevV1TaskRunStatusProvenanceFeatureFlags

    refSource?: TektonDevV1TaskRunStatusProvenanceRefSource


schema TektonDevV1TaskRunStatusProvenanceFeatureFlags:
    r"""
    FeatureFlags identifies the feature flags that were used during the task/pipeline run

    Attributes
    ----------
    awaitSidecarReadiness : bool, default is Undefined, optional
        await sidecar readiness
    coschedule : str, default is Undefined, optional
        coschedule
    disableCredsInit : bool, default is Undefined, optional
        disable creds init
    disableInlineSpec : str, default is Undefined, optional
        disable inline spec
    enableAPIFields : str, default is Undefined, optional
        enable API fields
    enableArtifacts : bool, default is Undefined, optional
        enable artifacts
    enableCELInWhenExpression : bool, default is Undefined, optional
        enable c e l in when expression
    enableConciseResolverSyntax : bool, default is Undefined, optional
        enable concise resolver syntax
    enableKeepPodOnCancel : bool, default is Undefined, optional
        enable keep pod on cancel
    enableKubernetesSidecar : bool, default is Undefined, optional
        enable kubernetes sidecar
    enableParamEnum : bool, default is Undefined, optional
        enable param enum
    enableProvenanceInStatus : bool, default is Undefined, optional
        enable provenance in status
    enableStepActions : bool, default is Undefined, optional
        EnableStepActions is a no-op flag since StepActions are stable
    enforceNonfalsifiability : str, default is Undefined, optional
        enforce nonfalsifiability
    maxResultSize : int, default is Undefined, optional
        max result size
    requireGitSSHSecretKnownHosts : bool, default is Undefined, optional
        require git SSH secret known hosts
    resultExtractionMethod : str, default is Undefined, optional
        result extraction method
    runningInEnvWithInjectedSidecars : bool, default is Undefined, optional
        running in env with injected sidecars
    sendCloudEventsForRuns : bool, default is Undefined, optional
        send cloud events for runs
    setSecurityContext : bool, default is Undefined, optional
        set security context
    setSecurityContextReadOnlyRootFilesystem : bool, default is Undefined, optional
        set security context read only root filesystem
    verificationNoMatchPolicy : str, default is Undefined, optional
        VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
        VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
        ignore: skip trusted resources verification when no matching verification policies found
        warn: skip trusted resources verification when no matching verification policies found and log a warning
        fail: fail the taskrun or pipelines run if no matching verification policies found
    """


    awaitSidecarReadiness?: bool

    coschedule?: str

    disableCredsInit?: bool

    disableInlineSpec?: str

    enableAPIFields?: str

    enableArtifacts?: bool

    enableCELInWhenExpression?: bool

    enableConciseResolverSyntax?: bool

    enableKeepPodOnCancel?: bool

    enableKubernetesSidecar?: bool

    enableParamEnum?: bool

    enableProvenanceInStatus?: bool

    enableStepActions?: bool

    enforceNonfalsifiability?: str

    maxResultSize?: int

    requireGitSSHSecretKnownHosts?: bool

    resultExtractionMethod?: str

    runningInEnvWithInjectedSidecars?: bool

    sendCloudEventsForRuns?: bool

    setSecurityContext?: bool

    setSecurityContextReadOnlyRootFilesystem?: bool

    verificationNoMatchPolicy?: str


schema TektonDevV1TaskRunStatusProvenanceRefSource:
    r"""
    RefSource identifies the source where a remote task/pipeline came from.

    Attributes
    ----------
    digest : {str:str}, default is Undefined, optional
        Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
        Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
    entryPoint : str, default is Undefined, optional
        EntryPoint identifies the entry point into the build. This is often a path to a
        build definition file and/or a target label within that file.
        Example: "task/git-clone/0.8/git-clone.yaml"
    uri : str, default is Undefined, optional
        URI indicates the identity of the source of the build definition.
        Example: "https://github.com/tektoncd/catalog"
    """


    digest?: {str:str}

    entryPoint?: str

    uri?: str


schema TektonDevV1TaskRunStatusResultsItems0:
    r"""
    TaskRunResult used to describe the results of a task

    Attributes
    ----------
    name : str, default is Undefined, required
        Name the given name
    $type : str, default is Undefined, optional
        Type is the user-specified type of the result. The possible type
        is currently "string" and will support "array" in following work.
    value : any, default is Undefined, required
        Value the given value of the result
    """


    name: str

    $type?: str

    value: any


schema TektonDevV1TaskRunStatusSidecarsItems0:
    r"""
    SidecarState reports the results of running a sidecar in a Task.

    Attributes
    ----------
    container : str, default is Undefined, optional
        container
    imageID : str, default is Undefined, optional
        image ID
    name : str, default is Undefined, optional
        name
    running : TektonDevV1TaskRunStatusSidecarsItems0Running, default is Undefined, optional
        running
    terminated : TektonDevV1TaskRunStatusSidecarsItems0Terminated, default is Undefined, optional
        terminated
    waiting : TektonDevV1TaskRunStatusSidecarsItems0Waiting, default is Undefined, optional
        waiting
    """


    container?: str

    imageID?: str

    name?: str

    running?: TektonDevV1TaskRunStatusSidecarsItems0Running

    terminated?: TektonDevV1TaskRunStatusSidecarsItems0Terminated

    waiting?: TektonDevV1TaskRunStatusSidecarsItems0Waiting


schema TektonDevV1TaskRunStatusSidecarsItems0Running:
    r"""
    Details about a running container

    Attributes
    ----------
    startedAt : str, default is Undefined, optional
        Time at which the container was last (re-)started
    """


    startedAt?: str


schema TektonDevV1TaskRunStatusSidecarsItems0Terminated:
    r"""
    Details about a terminated container

    Attributes
    ----------
    containerID : str, default is Undefined, optional
        Container's ID in the format '<type>://<container_id>'
    exitCode : int, default is Undefined, required
        Exit status from the last termination of the container
    finishedAt : str, default is Undefined, optional
        Time at which the container last terminated
    message : str, default is Undefined, optional
        Message regarding the last termination of the container
    reason : str, default is Undefined, optional
        (brief) reason from the last termination of the container
    signal : int, default is Undefined, optional
        Signal from the last termination of the container
    startedAt : str, default is Undefined, optional
        Time at which previous execution of the container started
    """


    containerID?: str

    exitCode: int

    finishedAt?: str

    message?: str

    reason?: str

    signal?: int

    startedAt?: str


schema TektonDevV1TaskRunStatusSidecarsItems0Waiting:
    r"""
    Details about a waiting container

    Attributes
    ----------
    message : str, default is Undefined, optional
        Message regarding why the container is not yet running.
    reason : str, default is Undefined, optional
        (brief) reason the container is not yet running.
    """


    message?: str

    reason?: str


schema TektonDevV1TaskRunStatusStepsItems0:
    r"""
    StepState reports the results of running a step in a Task.

    Attributes
    ----------
    container : str, default is Undefined, optional
        container
    imageID : str, default is Undefined, optional
        image ID
    inputs : [TektonDevV1TaskRunStatusStepsItems0InputsItems0], default is Undefined, optional
        inputs
    name : str, default is Undefined, optional
        name
    outputs : [TektonDevV1TaskRunStatusStepsItems0OutputsItems0], default is Undefined, optional
        outputs
    provenance : TektonDevV1TaskRunStatusStepsItems0Provenance, default is Undefined, optional
        provenance
    results : [TektonDevV1TaskRunStatusStepsItems0ResultsItems0], default is Undefined, optional
        results
    running : TektonDevV1TaskRunStatusStepsItems0Running, default is Undefined, optional
        running
    terminated : TektonDevV1TaskRunStatusStepsItems0Terminated, default is Undefined, optional
        terminated
    terminationReason : str, default is Undefined, optional
        termination reason
    waiting : TektonDevV1TaskRunStatusStepsItems0Waiting, default is Undefined, optional
        waiting
    """


    container?: str

    imageID?: str

    inputs?: [TektonDevV1TaskRunStatusStepsItems0InputsItems0]

    name?: str

    outputs?: [TektonDevV1TaskRunStatusStepsItems0OutputsItems0]

    provenance?: TektonDevV1TaskRunStatusStepsItems0Provenance

    results?: [TektonDevV1TaskRunStatusStepsItems0ResultsItems0]

    running?: TektonDevV1TaskRunStatusStepsItems0Running

    terminated?: TektonDevV1TaskRunStatusStepsItems0Terminated

    terminationReason?: str

    waiting?: TektonDevV1TaskRunStatusStepsItems0Waiting


schema TektonDevV1TaskRunStatusStepsItems0InputsItems0:
    r"""
    Artifact represents an artifact within a system, potentially containing multiple values
    associated with it.

    Attributes
    ----------
    buildOutput : bool, default is Undefined, optional
        Indicate if the artifact is a build output or a by-product
    name : str, default is Undefined, optional
        The artifact's identifying category name
    values : [TektonDevV1TaskRunStatusStepsItems0InputsItems0ValuesItems0], default is Undefined, optional
        A collection of values related to the artifact
    """


    buildOutput?: bool

    name?: str

    values?: [TektonDevV1TaskRunStatusStepsItems0InputsItems0ValuesItems0]


schema TektonDevV1TaskRunStatusStepsItems0InputsItems0ValuesItems0:
    r"""
    ArtifactValue represents a specific value or data element within an Artifact.

    Attributes
    ----------
    digest : {str:str}, default is Undefined, optional
        digest
    uri : str, default is Undefined, optional
        uri
    """


    digest?: {str:str}

    uri?: str


schema TektonDevV1TaskRunStatusStepsItems0OutputsItems0:
    r"""
    Artifact represents an artifact within a system, potentially containing multiple values
    associated with it.

    Attributes
    ----------
    buildOutput : bool, default is Undefined, optional
        Indicate if the artifact is a build output or a by-product
    name : str, default is Undefined, optional
        The artifact's identifying category name
    values : [TektonDevV1TaskRunStatusStepsItems0OutputsItems0ValuesItems0], default is Undefined, optional
        A collection of values related to the artifact
    """


    buildOutput?: bool

    name?: str

    values?: [TektonDevV1TaskRunStatusStepsItems0OutputsItems0ValuesItems0]


schema TektonDevV1TaskRunStatusStepsItems0OutputsItems0ValuesItems0:
    r"""
    ArtifactValue represents a specific value or data element within an Artifact.

    Attributes
    ----------
    digest : {str:str}, default is Undefined, optional
        digest
    uri : str, default is Undefined, optional
        uri
    """


    digest?: {str:str}

    uri?: str


schema TektonDevV1TaskRunStatusStepsItems0Provenance:
    r"""
    Provenance contains metadata about resources used in the TaskRun/PipelineRun
    such as the source from where a remote build definition was fetched.
    This field aims to carry minimum amoumt of metadata in *Run status so that
    Tekton Chains can capture them in the provenance.

    Attributes
    ----------
    featureFlags : TektonDevV1TaskRunStatusStepsItems0ProvenanceFeatureFlags, default is Undefined, optional
        feature flags
    refSource : TektonDevV1TaskRunStatusStepsItems0ProvenanceRefSource, default is Undefined, optional
        ref source
    """


    featureFlags?: TektonDevV1TaskRunStatusStepsItems0ProvenanceFeatureFlags

    refSource?: TektonDevV1TaskRunStatusStepsItems0ProvenanceRefSource


schema TektonDevV1TaskRunStatusStepsItems0ProvenanceFeatureFlags:
    r"""
    FeatureFlags identifies the feature flags that were used during the task/pipeline run

    Attributes
    ----------
    awaitSidecarReadiness : bool, default is Undefined, optional
        await sidecar readiness
    coschedule : str, default is Undefined, optional
        coschedule
    disableCredsInit : bool, default is Undefined, optional
        disable creds init
    disableInlineSpec : str, default is Undefined, optional
        disable inline spec
    enableAPIFields : str, default is Undefined, optional
        enable API fields
    enableArtifacts : bool, default is Undefined, optional
        enable artifacts
    enableCELInWhenExpression : bool, default is Undefined, optional
        enable c e l in when expression
    enableConciseResolverSyntax : bool, default is Undefined, optional
        enable concise resolver syntax
    enableKeepPodOnCancel : bool, default is Undefined, optional
        enable keep pod on cancel
    enableKubernetesSidecar : bool, default is Undefined, optional
        enable kubernetes sidecar
    enableParamEnum : bool, default is Undefined, optional
        enable param enum
    enableProvenanceInStatus : bool, default is Undefined, optional
        enable provenance in status
    enableStepActions : bool, default is Undefined, optional
        EnableStepActions is a no-op flag since StepActions are stable
    enforceNonfalsifiability : str, default is Undefined, optional
        enforce nonfalsifiability
    maxResultSize : int, default is Undefined, optional
        max result size
    requireGitSSHSecretKnownHosts : bool, default is Undefined, optional
        require git SSH secret known hosts
    resultExtractionMethod : str, default is Undefined, optional
        result extraction method
    runningInEnvWithInjectedSidecars : bool, default is Undefined, optional
        running in env with injected sidecars
    sendCloudEventsForRuns : bool, default is Undefined, optional
        send cloud events for runs
    setSecurityContext : bool, default is Undefined, optional
        set security context
    setSecurityContextReadOnlyRootFilesystem : bool, default is Undefined, optional
        set security context read only root filesystem
    verificationNoMatchPolicy : str, default is Undefined, optional
        VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
        VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
        ignore: skip trusted resources verification when no matching verification policies found
        warn: skip trusted resources verification when no matching verification policies found and log a warning
        fail: fail the taskrun or pipelines run if no matching verification policies found
    """


    awaitSidecarReadiness?: bool

    coschedule?: str

    disableCredsInit?: bool

    disableInlineSpec?: str

    enableAPIFields?: str

    enableArtifacts?: bool

    enableCELInWhenExpression?: bool

    enableConciseResolverSyntax?: bool

    enableKeepPodOnCancel?: bool

    enableKubernetesSidecar?: bool

    enableParamEnum?: bool

    enableProvenanceInStatus?: bool

    enableStepActions?: bool

    enforceNonfalsifiability?: str

    maxResultSize?: int

    requireGitSSHSecretKnownHosts?: bool

    resultExtractionMethod?: str

    runningInEnvWithInjectedSidecars?: bool

    sendCloudEventsForRuns?: bool

    setSecurityContext?: bool

    setSecurityContextReadOnlyRootFilesystem?: bool

    verificationNoMatchPolicy?: str


schema TektonDevV1TaskRunStatusStepsItems0ProvenanceRefSource:
    r"""
    RefSource identifies the source where a remote task/pipeline came from.

    Attributes
    ----------
    digest : {str:str}, default is Undefined, optional
        Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
        Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
    entryPoint : str, default is Undefined, optional
        EntryPoint identifies the entry point into the build. This is often a path to a
        build definition file and/or a target label within that file.
        Example: "task/git-clone/0.8/git-clone.yaml"
    uri : str, default is Undefined, optional
        URI indicates the identity of the source of the build definition.
        Example: "https://github.com/tektoncd/catalog"
    """


    digest?: {str:str}

    entryPoint?: str

    uri?: str


schema TektonDevV1TaskRunStatusStepsItems0ResultsItems0:
    r"""
    TaskRunResult used to describe the results of a task

    Attributes
    ----------
    name : str, default is Undefined, required
        Name the given name
    $type : str, default is Undefined, optional
        Type is the user-specified type of the result. The possible type
        is currently "string" and will support "array" in following work.
    value : any, default is Undefined, required
        Value the given value of the result
    """


    name: str

    $type?: str

    value: any


schema TektonDevV1TaskRunStatusStepsItems0Running:
    r"""
    Details about a running container

    Attributes
    ----------
    startedAt : str, default is Undefined, optional
        Time at which the container was last (re-)started
    """


    startedAt?: str


schema TektonDevV1TaskRunStatusStepsItems0Terminated:
    r"""
    Details about a terminated container

    Attributes
    ----------
    containerID : str, default is Undefined, optional
        Container's ID in the format '<type>://<container_id>'
    exitCode : int, default is Undefined, required
        Exit status from the last termination of the container
    finishedAt : str, default is Undefined, optional
        Time at which the container last terminated
    message : str, default is Undefined, optional
        Message regarding the last termination of the container
    reason : str, default is Undefined, optional
        (brief) reason from the last termination of the container
    signal : int, default is Undefined, optional
        Signal from the last termination of the container
    startedAt : str, default is Undefined, optional
        Time at which previous execution of the container started
    """


    containerID?: str

    exitCode: int

    finishedAt?: str

    message?: str

    reason?: str

    signal?: int

    startedAt?: str


schema TektonDevV1TaskRunStatusStepsItems0Waiting:
    r"""
    Details about a waiting container

    Attributes
    ----------
    message : str, default is Undefined, optional
        Message regarding why the container is not yet running.
    reason : str, default is Undefined, optional
        (brief) reason the container is not yet running.
    """


    message?: str

    reason?: str


schema TektonDevV1TaskRunStatusTaskSpec:
    r"""
    TaskSpec contains the Spec from the dereferenced Task definition used to instantiate this TaskRun.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description is a user-facing description of the task that may be
        used to populate a UI.
    displayName : str, default is Undefined, optional
        DisplayName is a user-facing name of the task that may be
        used to populate a UI.
    params : [TektonDevV1TaskRunStatusTaskSpecParamsItems0], default is Undefined, optional
        Params is a list of input parameters required to run the task. Params
        must be supplied as inputs in TaskRuns unless they declare a default
        value.
    results : [TektonDevV1TaskRunStatusTaskSpecResultsItems0], default is Undefined, optional
        Results are values that this Task can output
    sidecars : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0], default is Undefined, optional
        Sidecars are run alongside the Task's step containers. They begin before
        the steps start and end after the steps complete.
    stepTemplate : TektonDevV1TaskRunStatusTaskSpecStepTemplate, default is Undefined, optional
        step template
    steps : [TektonDevV1TaskRunStatusTaskSpecStepsItems0], default is Undefined, optional
        Steps are the steps of the build; each step is run sequentially with the
        source mounted into /workspace.
    volumes : any, default is Undefined, optional
        Volumes is a collection of volumes that are available to mount into the
        steps of the build.
        See Pod.spec.volumes (API version: v1)
    workspaces : [TektonDevV1TaskRunStatusTaskSpecWorkspacesItems0], default is Undefined, optional
        Workspaces are the volumes that this Task requires.
    """


    description?: str

    displayName?: str

    params?: [TektonDevV1TaskRunStatusTaskSpecParamsItems0]

    results?: [TektonDevV1TaskRunStatusTaskSpecResultsItems0]

    sidecars?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0]

    stepTemplate?: TektonDevV1TaskRunStatusTaskSpecStepTemplate

    steps?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0]

    volumes?: any

    workspaces?: [TektonDevV1TaskRunStatusTaskSpecWorkspacesItems0]


schema TektonDevV1TaskRunStatusTaskSpecParamsItems0:
    r"""
    ParamSpec defines arbitrary parameters needed beyond typed inputs (such as
    resources). Parameter values are provided by users as inputs on a TaskRun
    or PipelineRun.

    Attributes
    ----------
    default : any, default is Undefined, optional
        Default is the value a parameter takes if no input value is supplied. If
        default is set, a Task may be executed without a supplied value for the
        parameter.
    description : str, default is Undefined, optional
        Description is a user-facing description of the parameter that may be
        used to populate a UI.
    enum : [str], default is Undefined, optional
        Enum declares a set of allowed param input values for tasks/pipelines that can be validated.
        If Enum is not set, no input validation is performed for the param.
    name : str, default is Undefined, required
        Name declares the name by which a parameter is referenced.
    properties : {str:TektonDevV1TaskRunStatusTaskSpecParamsItems0PropertiesAnon}, default is Undefined, optional
        Properties is the JSON Schema properties to support key-value pairs parameter.
    $type : str, default is Undefined, optional
        Type is the user-specified type of the parameter. The possible types
        are currently "string", "array" and "object", and "string" is the default.
    """


    default?: any

    description?: str

    enum?: [str]

    name: str

    properties?: {str:TektonDevV1TaskRunStatusTaskSpecParamsItems0PropertiesAnon}

    $type?: str


schema TektonDevV1TaskRunStatusTaskSpecParamsItems0PropertiesAnon:
    r"""
    PropertySpec defines the struct for object keys

    Attributes
    ----------
    $type : str, default is Undefined, optional
        ParamType indicates the type of an input parameter;
        Used to distinguish between a single string and an array of strings.
    """


    $type?: str


schema TektonDevV1TaskRunStatusTaskSpecResultsItems0:
    r"""
    TaskResult used to describe the results of a task

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description is a human-readable description of the result
    name : str, default is Undefined, required
        Name the given name
    properties : {str:TektonDevV1TaskRunStatusTaskSpecResultsItems0PropertiesAnon}, default is Undefined, optional
        Properties is the JSON Schema properties to support key-value pairs results.
    $type : str, default is Undefined, optional
        Type is the user-specified type of the result. The possible type
        is currently "string" and will support "array" in following work.
    value : any, default is Undefined, optional
        Value the expression used to retrieve the value of the result from an underlying Step.
    """


    description?: str

    name: str

    properties?: {str:TektonDevV1TaskRunStatusTaskSpecResultsItems0PropertiesAnon}

    $type?: str

    value?: any


schema TektonDevV1TaskRunStatusTaskSpecResultsItems0PropertiesAnon:
    r"""
    PropertySpec defines the struct for object keys

    Attributes
    ----------
    $type : str, default is Undefined, optional
        ParamType indicates the type of an input parameter;
        Used to distinguish between a single string and an array of strings.
    """


    $type?: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0:
    r"""
    Sidecar has nearly the same data structure as Step but does not have the ability to timeout.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint.
        The image's CMD is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the Sidecar's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell.
        The image's ENTRYPOINT is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the Sidecar's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    computeResources : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ComputeResources, default is Undefined, optional
        compute resources
    env : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the Sidecar.
        Cannot be updated.
    envFrom : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the Sidecar.
        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
        will be reported as an event when the container is starting. When a key exists in multiple
        sources, the value associated with the last source will take precedence.
        Values defined by an Env with a duplicate key will take precedence.
        Cannot be updated.
    image : str, default is Undefined, optional
        Image reference name.
        More info: https://kubernetes.io/docs/concepts/containers/images
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy.
        One of Always, Never, IfNotPresent.
        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
        Cannot be updated.
        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the Sidecar specified as a DNS_LABEL.
        Each Sidecar in a Task must have a unique name (DNS_LABEL).
        Cannot be updated.
    ports : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the Sidecar. Exposing a port here gives
        the system additional information about the network connections a
        container uses, but is primarily informational. Not specifying a port here
        DOES NOT prevent that port from being exposed. Any port which is
        listening on the default "0.0.0.0" address inside a container will be
        accessible from the network.
        Cannot be updated.
    readinessProbe : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    restartPolicy : str, default is Undefined, optional
        RestartPolicy refers to kubernetes RestartPolicy. It can only be set for an
        initContainer and must have it's policy set to "Always". It is currently
        left optional to help support Kubernetes versions prior to 1.29 when this feature
        was introduced.
    script : str, default is Undefined, optional
        Script is the contents of an executable file to execute.

        If Script is not empty, the Step cannot have an Command or Args.
    securityContext : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this Sidecar should allocate a buffer for stdin in the container runtime. If this
        is not set, reads from stdin in the Sidecar will always result in EOF.
        Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by
        a single attach. When stdin is true the stdin stream will remain open across multiple attach
        sessions. If stdinOnce is set to true, stdin is opened on Sidecar start, is empty until the
        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
        at which time stdin is closed and remains closed until the Sidecar is restarted. If this
        flag is false, a container processes that reads from stdin will never receive an EOF.
        Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the Sidecar's termination message
        will be written is mounted into the Sidecar's filesystem.
        Message written is intended to be brief final status, such as an assertion failure message.
        Will be truncated by the node if greater than 4096 bytes. The total message length across
        all containers will be limited to 12kb.
        Defaults to /dev/termination-log.
        Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of
        terminationMessagePath to populate the Sidecar status message on both success and failure.
        FallbackToLogsOnError will use the last chunk of Sidecar log output if the termination
        message file is empty and the Sidecar exited with an error.
        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
        Defaults to File.
        Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this Sidecar should allocate a TTY for itself, also requires 'stdin' to be true.
        Default is false.
    volumeDevices : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the Sidecar.
    volumeMounts : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0VolumeMountsItems0], default is Undefined, optional
        Volumes to mount into the Sidecar's filesystem.
        Cannot be updated.
    workingDir : str, default is Undefined, optional
        Sidecar's working directory.
        If not specified, the container runtime's default will be used, which
        might be configured in the container image.
        Cannot be updated.
    workspaces : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0WorkspacesItems0], default is Undefined, optional
        This is an alpha field. You must set the "enable-api-fields" feature flag to "alpha"
        for this field to be supported.

        Workspaces is a list of workspaces from the Task that this Sidecar wants
        exclusive access to. Adding a workspace to this list means that any
        other Step or Sidecar that does not also request this Workspace will
        not have access to it.
    """


    args?: [str]

    command?: [str]

    computeResources?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ComputeResources

    env?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0]

    envFrom?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0Lifecycle

    livenessProbe?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbe

    name: str

    ports?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0PortsItems0]

    readinessProbe?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbe

    restartPolicy?: str

    script?: str

    securityContext?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContext

    startupProbe?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0VolumeDevicesItems0]

    volumeMounts?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0VolumeMountsItems0]

    workingDir?: str

    workspaces?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0WorkspacesItems0]


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ComputeResources:
    r"""
    ComputeResources required by this Sidecar.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ComputeResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ComputeResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ComputeResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """


    name: str

    request?: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvFromItems0:
    r"""
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvFromItems0SecretRef


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvFromItems0ConfigMapRef:
    r"""
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvFromItems0SecretRef:
    r"""
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFrom


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromSecretKeyRef


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0EnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0Lifecycle:
    r"""
    Actions that the management system should take in response to Sidecar lifecycle events.
    Cannot be updated.

    Attributes
    ----------
    postStart : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStart

    preStop?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStop


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStart:
    r"""
    PostStart is called immediately after a container is created. If the handler fails,
    the container is terminated and restarted according to its restart policy.
    Other management of the container blocks until the hook completes.
    More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    sleep : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartSleep, default is Undefined, optional
        sleep
    tcpSocket : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartExec

    httpGet?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartHTTPGet

    sleep?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartSleep

    tcpSocket?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartTCPSocket


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartSleep:
    r"""
    Sleep represents a duration that the container should sleep.

    Attributes
    ----------
    seconds : int, default is Undefined, required
        Seconds is the number of seconds to sleep.
    """


    seconds: int


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePostStartTCPSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
    for backward compatibility. There is no validation of this field and
    lifecycle hooks will fail at runtime when it is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStop:
    r"""
    PreStop is called immediately before a container is terminated due to an
    API request or management event such as liveness/startup probe failure,
    preemption, resource contention, etc. The handler is not called if the
    container crashes or exits. The Pod's termination grace period countdown begins before the
    PreStop hook is executed. Regardless of the outcome of the handler, the
    container will eventually terminate within the Pod's termination grace
    period (unless delayed by finalizers). Other management of the container blocks until the hook completes
    or until the termination grace period is reached.
    More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    sleep : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopSleep, default is Undefined, optional
        sleep
    tcpSocket : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopExec

    httpGet?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopHTTPGet

    sleep?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopSleep

    tcpSocket?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopTCPSocket


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopSleep:
    r"""
    Sleep represents a duration that the container should sleep.

    Attributes
    ----------
    seconds : int, default is Undefined, required
        Seconds is the number of seconds to sleep.
    """


    seconds: int


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LifecyclePreStopTCPSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
    for backward compatibility. There is no validation of this field and
    lifecycle hooks will fail at runtime when it is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbe:
    r"""
    Periodic probe of Sidecar liveness.
    Container will be restarted if the probe fails.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeGrpc

    httpGet?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str = ""


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0LivenessProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0PortsItems0:
    r"""
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address.
        This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host.
        If specified, this must be a valid port number, 0 < x < 65536.
        If HostNetwork is specified, this must match ContainerPort.
        Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
        named port in a pod must have a unique name. Name for the port that can be
        referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP.
        Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbe:
    r"""
    Periodic probe of Sidecar service readiness.
    Container will be removed from service endpoints if the probe fails.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeGrpc

    httpGet?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str = ""


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0ReadinessProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContext:
    r"""
    SecurityContext defines the security options the Sidecar should be run with.
    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more
        privileges than its parent process. This bool directly controls if
        the no_new_privs flag will be set on the container process.
        AllowPrivilegeEscalation is true always when the container is:
        1) run as Privileged
        2) has CAP_SYS_ADMIN
        Note that this field cannot be set when spec.os.name is windows.
    appArmorProfile : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextAppArmorProfile, default is Undefined, optional
        app armor profile
    capabilities : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode.
        Processes in privileged containers are essentially equivalent to root on the host.
        Defaults to false.
        Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers.
        The default value is Default which uses the container runtime defaults for
        readonly paths and masked paths.
        This requires the ProcMountType feature flag to be enabled.
        Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem.
        Default is false.
        Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process.
        Uses runtime default if unset.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
        If true, the Kubelet will validate the image at runtime to ensure that it
        does not run as UID 0 (root) and fail to start the container if it does.
        If unset or false, no such validation will be performed.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process.
        Defaults to user specified in image metadata if unspecified.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    appArmorProfile?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextAppArmorProfile

    capabilities?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextSeLinuxOptions

    seccompProfile?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextSeccompProfile

    windowsOptions?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextWindowsOptions


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextAppArmorProfile:
    r"""
    appArmorProfile is the AppArmor options to use by this container. If set, this profile
    overrides the pod's appArmorProfile.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile loaded on the node that should be used.
        The profile must be preconfigured on the node to work.
        Must match the loaded name of the profile.
        Must be set if and only if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of AppArmor profile will be applied.
        Valid options are:
          Localhost - a profile pre-loaded on the node.
          RuntimeDefault - the container runtime's default profile.
          Unconfined - no AppArmor enforcement.
    """


    localhostProfile?: str

    $type: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextCapabilities:
    r"""
    The capabilities to add/drop when running containers.
    Defaults to the default set of capabilities granted by the container runtime.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to the container.
    If unspecified, the container runtime will allocate a random SELinux context for each
    container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
    PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextSeccompProfile:
    r"""
    The seccomp options to use by this container. If seccomp options are
    provided at both the pod & container level, the container options
    override the pod options.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used.
        The profile must be preconfigured on the node to work.
        Must be a descending path, relative to the kubelet's configured seccomp profile location.
        Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied.
        Valid options are:

        Localhost - a profile defined in a file on the node should be used.
        RuntimeDefault - the container runtime default profile should be used.
        Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0SecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers.
    If unspecified, the options from the PodSecurityContext will be used.
    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook
        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
        GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
        All of a Pod's containers must have the same effective HostProcess value
        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
        In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process.
        Defaults to the user specified in image metadata if unspecified.
        May also be set in PodSecurityContext. If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbe:
    r"""
    StartupProbe indicates that the Pod the Sidecar is running in has successfully initialized.
    If specified, no other probes are executed until this completes successfully.
    If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
    This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
    when it might take a long time to load data or warm a cache, than during steady-state operation.
    This cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeExec

    failureThreshold?: int

    grpc?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeGrpc

    httpGet?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str = ""


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0StartupProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0VolumeDevicesItems0:
    r"""
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0VolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must
        not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host
        to container and the other way around.
        When not set, MountPropagationNone is used.
        This field is beta in 1.10.
        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
        (which defaults to None).
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified).
        Defaults to false.
    recursiveReadOnly : str, default is Undefined, optional
        RecursiveReadOnly specifies whether read-only mounts should be handled
        recursively.

        If ReadOnly is false, this field has no meaning and must be unspecified.

        If ReadOnly is true, and this field is set to Disabled, the mount is not made
        recursively read-only.  If this field is set to IfPossible, the mount is made
        recursively read-only, if it is supported by the container runtime.  If this
        field is set to Enabled, the mount is made recursively read-only if it is
        supported by the container runtime, otherwise the pod will not be started and
        an error will be generated to indicate the reason.

        If this field is set to IfPossible or Enabled, MountPropagation must be set to
        None (or be unspecified, which defaults to None).

        If this field is not specified, it is treated as an equivalent of Disabled.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted.
        Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
        Defaults to "" (volume's root).
        SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    recursiveReadOnly?: str

    subPath?: str

    subPathExpr?: str


schema TektonDevV1TaskRunStatusTaskSpecSidecarsItems0WorkspacesItems0:
    r"""
    WorkspaceUsage is used by a Step or Sidecar to declare that it wants isolated access
    to a Workspace defined in a Task.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        MountPath is the path that the workspace should be mounted to inside the Step or Sidecar,
        overriding any MountPath specified in the Task's WorkspaceDeclaration.
    name : str, default is Undefined, required
        Name is the name of the workspace this Step or Sidecar wants access to.
    """


    mountPath: str

    name: str


schema TektonDevV1TaskRunStatusTaskSpecStepTemplate:
    r"""
    StepTemplate can be used as the basis for all step containers within the
    Task, so that the steps inherit settings on the base container.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint.
        The image's CMD is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the Step's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell.
        The image's ENTRYPOINT is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the Step's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    computeResources : TektonDevV1TaskRunStatusTaskSpecStepTemplateComputeResources, default is Undefined, optional
        compute resources
    env : [TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0], default is Undefined, optional
        List of environment variables to set in the Step.
        Cannot be updated.
    envFrom : [TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the Step.
        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
        will be reported as an event when the Step is starting. When a key exists in multiple
        sources, the value associated with the last source will take precedence.
        Values defined by an Env with a duplicate key will take precedence.
        Cannot be updated.
    image : str, default is Undefined, optional
        Image reference name.
        More info: https://kubernetes.io/docs/concepts/containers/images
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy.
        One of Always, Never, IfNotPresent.
        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
        Cannot be updated.
        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    securityContext : TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContext, default is Undefined, optional
        security context
    volumeDevices : [TektonDevV1TaskRunStatusTaskSpecStepTemplateVolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the Step.
    volumeMounts : [TektonDevV1TaskRunStatusTaskSpecStepTemplateVolumeMountsItems0], default is Undefined, optional
        Volumes to mount into the Step's filesystem.
        Cannot be updated.
    workingDir : str, default is Undefined, optional
        Step's working directory.
        If not specified, the container runtime's default will be used, which
        might be configured in the container image.
        Cannot be updated.
    """


    args?: [str]

    command?: [str]

    computeResources?: TektonDevV1TaskRunStatusTaskSpecStepTemplateComputeResources

    env?: [TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0]

    envFrom?: [TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvFromItems0]

    image?: str

    imagePullPolicy?: str

    securityContext?: TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContext

    volumeDevices?: [TektonDevV1TaskRunStatusTaskSpecStepTemplateVolumeDevicesItems0]

    volumeMounts?: [TektonDevV1TaskRunStatusTaskSpecStepTemplateVolumeMountsItems0]

    workingDir?: str


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateComputeResources:
    r"""
    ComputeResources required by this Step.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [TektonDevV1TaskRunStatusTaskSpecStepTemplateComputeResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [TektonDevV1TaskRunStatusTaskSpecStepTemplateComputeResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateComputeResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """


    name: str

    request?: str


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvFromItems0:
    r"""
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvFromItems0SecretRef


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvFromItems0ConfigMapRef:
    r"""
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvFromItems0SecretRef:
    r"""
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFrom


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromFieldRef

    resourceFieldRef?: TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromSecretKeyRef


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateEnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContext:
    r"""
    SecurityContext defines the security options the Step should be run with.
    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more
        privileges than its parent process. This bool directly controls if
        the no_new_privs flag will be set on the container process.
        AllowPrivilegeEscalation is true always when the container is:
        1) run as Privileged
        2) has CAP_SYS_ADMIN
        Note that this field cannot be set when spec.os.name is windows.
    appArmorProfile : TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextAppArmorProfile, default is Undefined, optional
        app armor profile
    capabilities : TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode.
        Processes in privileged containers are essentially equivalent to root on the host.
        Defaults to false.
        Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers.
        The default value is Default which uses the container runtime defaults for
        readonly paths and masked paths.
        This requires the ProcMountType feature flag to be enabled.
        Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem.
        Default is false.
        Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process.
        Uses runtime default if unset.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
        If true, the Kubelet will validate the image at runtime to ensure that it
        does not run as UID 0 (root) and fail to start the container if it does.
        If unset or false, no such validation will be performed.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process.
        Defaults to user specified in image metadata if unspecified.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    appArmorProfile?: TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextAppArmorProfile

    capabilities?: TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextSeLinuxOptions

    seccompProfile?: TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextSeccompProfile

    windowsOptions?: TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextWindowsOptions


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextAppArmorProfile:
    r"""
    appArmorProfile is the AppArmor options to use by this container. If set, this profile
    overrides the pod's appArmorProfile.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile loaded on the node that should be used.
        The profile must be preconfigured on the node to work.
        Must match the loaded name of the profile.
        Must be set if and only if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of AppArmor profile will be applied.
        Valid options are:
          Localhost - a profile pre-loaded on the node.
          RuntimeDefault - the container runtime's default profile.
          Unconfined - no AppArmor enforcement.
    """


    localhostProfile?: str

    $type: str


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextCapabilities:
    r"""
    The capabilities to add/drop when running containers.
    Defaults to the default set of capabilities granted by the container runtime.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to the container.
    If unspecified, the container runtime will allocate a random SELinux context for each
    container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
    PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextSeccompProfile:
    r"""
    The seccomp options to use by this container. If seccomp options are
    provided at both the pod & container level, the container options
    override the pod options.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used.
        The profile must be preconfigured on the node to work.
        Must be a descending path, relative to the kubelet's configured seccomp profile location.
        Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied.
        Valid options are:

        Localhost - a profile defined in a file on the node should be used.
        RuntimeDefault - the container runtime default profile should be used.
        Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateSecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers.
    If unspecified, the options from the PodSecurityContext will be used.
    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook
        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
        GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
        All of a Pod's containers must have the same effective HostProcess value
        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
        In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process.
        Defaults to the user specified in image metadata if unspecified.
        May also be set in PodSecurityContext. If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateVolumeDevicesItems0:
    r"""
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema TektonDevV1TaskRunStatusTaskSpecStepTemplateVolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must
        not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host
        to container and the other way around.
        When not set, MountPropagationNone is used.
        This field is beta in 1.10.
        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
        (which defaults to None).
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified).
        Defaults to false.
    recursiveReadOnly : str, default is Undefined, optional
        RecursiveReadOnly specifies whether read-only mounts should be handled
        recursively.

        If ReadOnly is false, this field has no meaning and must be unspecified.

        If ReadOnly is true, and this field is set to Disabled, the mount is not made
        recursively read-only.  If this field is set to IfPossible, the mount is made
        recursively read-only, if it is supported by the container runtime.  If this
        field is set to Enabled, the mount is made recursively read-only if it is
        supported by the container runtime, otherwise the pod will not be started and
        an error will be generated to indicate the reason.

        If this field is set to IfPossible or Enabled, MountPropagation must be set to
        None (or be unspecified, which defaults to None).

        If this field is not specified, it is treated as an equivalent of Disabled.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted.
        Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
        Defaults to "" (volume's root).
        SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    recursiveReadOnly?: str

    subPath?: str

    subPathExpr?: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0:
    r"""
    Step runs a subcomponent of a Task

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint.
        The image's CMD is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell.
        The image's ENTRYPOINT is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    computeResources : TektonDevV1TaskRunStatusTaskSpecStepsItems0ComputeResources, default is Undefined, optional
        compute resources
    env : [TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the Step.
        Cannot be updated.
    envFrom : [TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the Step.
        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
        will be reported as an event when the Step is starting. When a key exists in multiple
        sources, the value associated with the last source will take precedence.
        Values defined by an Env with a duplicate key will take precedence.
        Cannot be updated.
    image : str, default is Undefined, optional
        Docker image name.
        More info: https://kubernetes.io/docs/concepts/containers/images
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy.
        One of Always, Never, IfNotPresent.
        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
        Cannot be updated.
        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    name : str, default is Undefined, required
        Name of the Step specified as a DNS_LABEL.
        Each Step in a Task must have a unique name.
    onError : str, default is Undefined, optional
        OnError defines the exiting behavior of a container on error
        can be set to [ continue | stopAndFail ]
    params : [TektonDevV1TaskRunStatusTaskSpecStepsItems0ParamsItems0], default is Undefined, optional
        Params declares parameters passed to this step action.
    ref : TektonDevV1TaskRunStatusTaskSpecStepsItems0Ref, default is Undefined, optional
        ref
    results : [TektonDevV1TaskRunStatusTaskSpecStepsItems0ResultsItems0], default is Undefined, optional
        Results declares StepResults produced by the Step.

        It can be used in an inlined Step when used to store Results to $(step.results.resultName.path).
        It cannot be used when referencing StepActions using [v1.Step.Ref].
        The Results declared by the StepActions will be stored here instead.
    script : str, default is Undefined, optional
        Script is the contents of an executable file to execute.

        If Script is not empty, the Step cannot have an Command and the Args will be passed to the Script.
    securityContext : TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContext, default is Undefined, optional
        security context
    stderrConfig : TektonDevV1TaskRunStatusTaskSpecStepsItems0StderrConfig, default is Undefined, optional
        stderr config
    stdoutConfig : TektonDevV1TaskRunStatusTaskSpecStepsItems0StdoutConfig, default is Undefined, optional
        stdout config
    timeout : str, default is Undefined, optional
        Timeout is the time after which the step times out. Defaults to never.
        Refer to Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration
    volumeDevices : [TektonDevV1TaskRunStatusTaskSpecStepsItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the Step.
    volumeMounts : [TektonDevV1TaskRunStatusTaskSpecStepsItems0VolumeMountsItems0], default is Undefined, optional
        Volumes to mount into the Step's filesystem.
        Cannot be updated.
    when : [TektonDevV1TaskRunStatusTaskSpecStepsItems0WhenItems0], default is Undefined, optional
        When is a list of when expressions that need to be true for the task to run
    workingDir : str, default is Undefined, optional
        Step's working directory.
        If not specified, the container runtime's default will be used, which
        might be configured in the container image.
        Cannot be updated.
    workspaces : [TektonDevV1TaskRunStatusTaskSpecStepsItems0WorkspacesItems0], default is Undefined, optional
        This is an alpha field. You must set the "enable-api-fields" feature flag to "alpha"
        for this field to be supported.

        Workspaces is a list of workspaces from the Task that this Step wants
        exclusive access to. Adding a workspace to this list means that any
        other Step or Sidecar that does not also request this Workspace will
        not have access to it.
    """


    args?: [str]

    command?: [str]

    computeResources?: TektonDevV1TaskRunStatusTaskSpecStepsItems0ComputeResources

    env?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0]

    envFrom?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    name: str

    onError?: str

    params?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0ParamsItems0]

    ref?: TektonDevV1TaskRunStatusTaskSpecStepsItems0Ref

    results?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0ResultsItems0]

    script?: str

    securityContext?: TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContext

    stderrConfig?: TektonDevV1TaskRunStatusTaskSpecStepsItems0StderrConfig

    stdoutConfig?: TektonDevV1TaskRunStatusTaskSpecStepsItems0StdoutConfig

    timeout?: str

    volumeDevices?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0VolumeDevicesItems0]

    volumeMounts?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0VolumeMountsItems0]

    when?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0WhenItems0]

    workingDir?: str

    workspaces?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0WorkspacesItems0]


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0ComputeResources:
    r"""
    ComputeResources required by this Step.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [TektonDevV1TaskRunStatusTaskSpecStepsItems0ComputeResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0ComputeResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0ComputeResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """


    name: str

    request?: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvFromItems0:
    r"""
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvFromItems0SecretRef


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvFromItems0ConfigMapRef:
    r"""
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvFromItems0SecretRef:
    r"""
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFrom


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromSecretKeyRef


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0EnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0ParamsItems0:
    r"""
    Param declares an ParamValues to use for the parameter called name.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    value : any, default is Undefined, required
        value
    """


    name: str

    value: any


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0Ref:
    r"""
    Contains the reference to an existing StepAction.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referenced step
    params : [TektonDevV1TaskRunStatusTaskSpecStepsItems0RefParamsItems0], default is Undefined, optional
        Params contains the parameters used to identify the
        referenced Tekton resource. Example entries might include
        "repo" or "path" but the set of params ultimately depends on
        the chosen resolver.
    resolver : str, default is Undefined, optional
        Resolver is the name of the resolver that should perform
        resolution of the referenced Tekton resource, such as "git".
    """


    name?: str

    params?: [TektonDevV1TaskRunStatusTaskSpecStepsItems0RefParamsItems0]

    resolver?: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0RefParamsItems0:
    r"""
    Param declares an ParamValues to use for the parameter called name.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    value : any, default is Undefined, required
        value
    """


    name: str

    value: any


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0ResultsItems0:
    r"""
    StepResult used to describe the Results of a Step.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description is a human-readable description of the result
    name : str, default is Undefined, required
        Name the given name
    properties : {str:TektonDevV1TaskRunStatusTaskSpecStepsItems0ResultsItems0PropertiesAnon}, default is Undefined, optional
        Properties is the JSON Schema properties to support key-value pairs results.
    $type : str, default is Undefined, optional
        The possible types are 'string', 'array', and 'object', with 'string' as the default.
    """


    description?: str

    name: str

    properties?: {str:TektonDevV1TaskRunStatusTaskSpecStepsItems0ResultsItems0PropertiesAnon}

    $type?: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0ResultsItems0PropertiesAnon:
    r"""
    PropertySpec defines the struct for object keys

    Attributes
    ----------
    $type : str, default is Undefined, optional
        ParamType indicates the type of an input parameter;
        Used to distinguish between a single string and an array of strings.
    """


    $type?: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContext:
    r"""
    SecurityContext defines the security options the Step should be run with.
    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more
        privileges than its parent process. This bool directly controls if
        the no_new_privs flag will be set on the container process.
        AllowPrivilegeEscalation is true always when the container is:
        1) run as Privileged
        2) has CAP_SYS_ADMIN
        Note that this field cannot be set when spec.os.name is windows.
    appArmorProfile : TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextAppArmorProfile, default is Undefined, optional
        app armor profile
    capabilities : TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode.
        Processes in privileged containers are essentially equivalent to root on the host.
        Defaults to false.
        Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers.
        The default value is Default which uses the container runtime defaults for
        readonly paths and masked paths.
        This requires the ProcMountType feature flag to be enabled.
        Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem.
        Default is false.
        Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process.
        Uses runtime default if unset.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
        If true, the Kubelet will validate the image at runtime to ensure that it
        does not run as UID 0 (root) and fail to start the container if it does.
        If unset or false, no such validation will be performed.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process.
        Defaults to user specified in image metadata if unspecified.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    appArmorProfile?: TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextAppArmorProfile

    capabilities?: TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextSeLinuxOptions

    seccompProfile?: TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextSeccompProfile

    windowsOptions?: TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextWindowsOptions


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextAppArmorProfile:
    r"""
    appArmorProfile is the AppArmor options to use by this container. If set, this profile
    overrides the pod's appArmorProfile.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile loaded on the node that should be used.
        The profile must be preconfigured on the node to work.
        Must match the loaded name of the profile.
        Must be set if and only if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of AppArmor profile will be applied.
        Valid options are:
          Localhost - a profile pre-loaded on the node.
          RuntimeDefault - the container runtime's default profile.
          Unconfined - no AppArmor enforcement.
    """


    localhostProfile?: str

    $type: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextCapabilities:
    r"""
    The capabilities to add/drop when running containers.
    Defaults to the default set of capabilities granted by the container runtime.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to the container.
    If unspecified, the container runtime will allocate a random SELinux context for each
    container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
    PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextSeccompProfile:
    r"""
    The seccomp options to use by this container. If seccomp options are
    provided at both the pod & container level, the container options
    override the pod options.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used.
        The profile must be preconfigured on the node to work.
        Must be a descending path, relative to the kubelet's configured seccomp profile location.
        Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied.
        Valid options are:

        Localhost - a profile defined in a file on the node should be used.
        RuntimeDefault - the container runtime default profile should be used.
        Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0SecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers.
    If unspecified, the options from the PodSecurityContext will be used.
    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook
        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
        GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
        All of a Pod's containers must have the same effective HostProcess value
        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
        In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process.
        Defaults to the user specified in image metadata if unspecified.
        May also be set in PodSecurityContext. If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0StderrConfig:
    r"""
    Stores configuration for the stderr stream of the step.

    Attributes
    ----------
    path : str, default is Undefined, optional
        Path to duplicate stdout stream to on container's local filesystem.
    """


    path?: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0StdoutConfig:
    r"""
    Stores configuration for the stdout stream of the step.

    Attributes
    ----------
    path : str, default is Undefined, optional
        Path to duplicate stdout stream to on container's local filesystem.
    """


    path?: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0VolumeDevicesItems0:
    r"""
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0VolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must
        not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host
        to container and the other way around.
        When not set, MountPropagationNone is used.
        This field is beta in 1.10.
        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
        (which defaults to None).
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified).
        Defaults to false.
    recursiveReadOnly : str, default is Undefined, optional
        RecursiveReadOnly specifies whether read-only mounts should be handled
        recursively.

        If ReadOnly is false, this field has no meaning and must be unspecified.

        If ReadOnly is true, and this field is set to Disabled, the mount is not made
        recursively read-only.  If this field is set to IfPossible, the mount is made
        recursively read-only, if it is supported by the container runtime.  If this
        field is set to Enabled, the mount is made recursively read-only if it is
        supported by the container runtime, otherwise the pod will not be started and
        an error will be generated to indicate the reason.

        If this field is set to IfPossible or Enabled, MountPropagation must be set to
        None (or be unspecified, which defaults to None).

        If this field is not specified, it is treated as an equivalent of Disabled.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted.
        Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
        Defaults to "" (volume's root).
        SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    recursiveReadOnly?: str

    subPath?: str

    subPathExpr?: str


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0WhenItems0:
    r"""
    WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run
    to determine whether the Task should be executed or skipped

    Attributes
    ----------
    cel : str, default is Undefined, optional
        CEL is a string of Common Language Expression, which can be used to conditionally execute
        the task based on the result of the expression evaluation
        More info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md
    input : str, default is Undefined, optional
        Input is the string for guard checking which can be a static input or an output from a parent Task
    operator : str, default is Undefined, optional
        Operator that represents an Input's relationship to the values
    values : [str], default is Undefined, optional
        Values is an array of strings, which is compared against the input, for guard checking
        It must be non-empty
    """


    cel?: str

    input?: str

    operator?: str

    values?: [str]


schema TektonDevV1TaskRunStatusTaskSpecStepsItems0WorkspacesItems0:
    r"""
    WorkspaceUsage is used by a Step or Sidecar to declare that it wants isolated access
    to a Workspace defined in a Task.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        MountPath is the path that the workspace should be mounted to inside the Step or Sidecar,
        overriding any MountPath specified in the Task's WorkspaceDeclaration.
    name : str, default is Undefined, required
        Name is the name of the workspace this Step or Sidecar wants access to.
    """


    mountPath: str

    name: str


schema TektonDevV1TaskRunStatusTaskSpecWorkspacesItems0:
    r"""
    WorkspaceDeclaration is a declaration of a volume that a Task requires.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description is an optional human readable description of this volume.
    mountPath : str, default is Undefined, optional
        MountPath overrides the directory that the volume will be made available at.
    name : str, default is Undefined, required
        Name is the name by which you can bind the volume at runtime.
    optional : bool, default is Undefined, optional
        Optional marks a Workspace as not being required in TaskRuns. By default
        this field is false and so declared workspaces are required.
    readOnly : bool, default is Undefined, optional
        ReadOnly dictates whether a mounted volume is writable. By default this
        field is false and so mounted volumes are writable.
    """


    description?: str

    mountPath?: str

    name: str

    optional?: bool

    readOnly?: bool


