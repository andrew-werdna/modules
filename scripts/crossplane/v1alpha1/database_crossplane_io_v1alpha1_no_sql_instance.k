"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NoSQLInstance:
    r"""
    A NoSQLInstance is a portable resource claim that may be satisfied by binding to a NoSQL managed resource such as an AWS DynamoDB or an Azure CosmosDB instance.

    Attributes
    ----------
    apiVersion : str, default is "database.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NoSQLInstance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpec, default is Undefined, optional
        spec
    status : DatabaseCrossplaneIoV1alpha1NoSQLInstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "database.crossplane.io/v1alpha1" = "database.crossplane.io/v1alpha1"

    kind: "NoSQLInstance" = "NoSQLInstance"

    metadata?: v1.ObjectMeta

    spec?: DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpec

    status?: DatabaseCrossplaneIoV1alpha1NoSQLInstanceStatus


schema DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpec:
    r"""
    NoSQLInstanceSpec specifies the desired state of a NoSQLInstance.

    Attributes
    ----------
    classRef : DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecClassRef, default is Undefined, optional
        class ref
    classSelector : DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecClassSelector, default is Undefined, optional
        class selector
    resourceRef : DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecResourceRef, default is Undefined, optional
        resource ref
    writeConnectionSecretToRef : DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    classRef?: DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecClassRef

    classSelector?: DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecClassSelector

    resourceRef?: DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecResourceRef

    writeConnectionSecretToRef?: DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecWriteConnectionSecretToRef


schema DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecClassRef:
    r"""
    A ClassReference specifies a resource class that will be used to dynamically provision a managed resource when the resource claim is created.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecClassSelector:
    r"""
    A ClassSelector specifies labels that will be used to select a resource class for this claim. If multiple classes match the labels one will be chosen at random.

    Attributes
    ----------
    matchExpressions : [DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecClassSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecClassSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecClassSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecResourceRef:
    r"""
    A ResourceReference specifies an existing managed resource, in any namespace, to which this resource claim should attempt to bind. Omit the resource reference to enable dynamic provisioning using a resource class; the resource reference will be automatically populated by Crossplane.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema DatabaseCrossplaneIoV1alpha1NoSQLInstanceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the name of a Secret, in the same namespace as this resource claim, to which any connection details for this resource claim should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource bound to this resource claim.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    """


    name: str


schema DatabaseCrossplaneIoV1alpha1NoSQLInstanceStatus:
    r"""
    A ResourceClaimStatus represents the observed status of a resource claim.

    Attributes
    ----------
    bindingPhase : str, default is Undefined, optional
        Phase represents the binding phase of a managed resource or claim. Unbindable resources cannot be bound, typically because they are currently unavailable, or still being created. Unbound resource are available for binding, and Bound resources have successfully bound to another resource.
    conditions : [DatabaseCrossplaneIoV1alpha1NoSQLInstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    bindingPhase?: "Unbindable" | "Unbound" | "Bound" | "Released"

    conditions?: [DatabaseCrossplaneIoV1alpha1NoSQLInstanceStatusConditionsItems0]


schema DatabaseCrossplaneIoV1alpha1NoSQLInstanceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


