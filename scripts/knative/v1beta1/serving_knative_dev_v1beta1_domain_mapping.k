"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DomainMapping:
    r"""
    DomainMapping is a mapping from a custom hostname to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is "serving.knative.dev/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DomainMapping", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ServingKnativeDevV1beta1DomainMappingSpec, default is Undefined, optional
        spec
    status : ServingKnativeDevV1beta1DomainMappingStatus, default is Undefined, optional
        status
    """


    apiVersion: "serving.knative.dev/v1beta1" = "serving.knative.dev/v1beta1"

    kind: "DomainMapping" = "DomainMapping"

    metadata?: v1.ObjectMeta

    spec?: ServingKnativeDevV1beta1DomainMappingSpec

    status?: ServingKnativeDevV1beta1DomainMappingStatus


schema ServingKnativeDevV1beta1DomainMappingSpec:
    r"""
    Spec is the desired state of the DomainMapping.
    More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    ref : ServingKnativeDevV1beta1DomainMappingSpecRef, default is Undefined, required
        ref
    tls : ServingKnativeDevV1beta1DomainMappingSpecTLS, default is Undefined, optional
        tls
    """


    ref: ServingKnativeDevV1beta1DomainMappingSpecRef

    tls?: ServingKnativeDevV1beta1DomainMappingSpecTLS


schema ServingKnativeDevV1beta1DomainMappingSpecRef:
    r"""
    Ref specifies the target of the Domain Mapping.

    The object identified by the Ref must be an Addressable with a URL of the
    form `{name}.{namespace}.{domain}` where `{domain}` is the cluster domain,
    and `{name}` and `{namespace}` are the name and namespace of a Kubernetes
    Service.

    This contract is satisfied by Knative types such as Knative Services and
    Knative Routes, and by Kubernetes Services.

    Attributes
    ----------
    address : str, default is Undefined, optional
        Address points to a specific Address Name.
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    group : str, default is Undefined, optional
        Group of the API, without the version of the group. This can be used as an alternative to the APIVersion, and then resolved using ResolveGroup.
        Note: This API is EXPERIMENTAL and might break anytime. For more details: https://github.com/knative/eventing/issues/5086
    kind : str, default is Undefined, required
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, required
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
        This is optional field, it gets defaulted to the object holding it if left out.
    """


    address?: str

    apiVersion?: str

    group?: str

    kind: str

    name: str

    namespace?: str


schema ServingKnativeDevV1beta1DomainMappingSpecTLS:
    r"""
    TLS allows the DomainMapping to terminate TLS traffic with an existing secret.

    Attributes
    ----------
    secretName : str, default is Undefined, required
        SecretName is the name of the existing secret used to terminate TLS traffic.
    """


    secretName: str


schema ServingKnativeDevV1beta1DomainMappingStatus:
    r"""
    Status is the current state of the DomainMapping.
    More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    address : ServingKnativeDevV1beta1DomainMappingStatusAddress, default is Undefined, optional
        address
    annotations : {str:str}, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some
        additional State as well as convey more information to the user. This is
        roughly akin to Annotations on any k8s resource, just the reconciler conveying
        richer information outwards.
    conditions : [ServingKnativeDevV1beta1DomainMappingStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that
        was last processed by the controller.
    url : str, default is Undefined, optional
        URL is the URL of this DomainMapping.
    """


    address?: ServingKnativeDevV1beta1DomainMappingStatusAddress

    annotations?: {str:str}

    conditions?: [ServingKnativeDevV1beta1DomainMappingStatusConditionsItems0]

    observedGeneration?: int

    url?: str


schema ServingKnativeDevV1beta1DomainMappingStatusAddress:
    r"""
    Address holds the information needed for a DomainMapping to be the target of an event.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        CACerts is the Certification Authority (CA) certificates in PEM format
        according to https://www.rfc-editor.org/rfc/rfc7468.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience for this address.
    name : str, default is Undefined, optional
        Name is the name of the address.
    url : str, default is Undefined, optional
        url
    """


    CACerts?: str

    audience?: str

    name?: str

    url?: str


schema ServingKnativeDevV1beta1DomainMappingStatusConditionsItems0:
    r"""
    Condition defines a readiness condition for a Knative resource.
    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another.
        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
        differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition.
        When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


