"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema Service:
    r"""
    Service acts as a top-level container that manages a Route and Configuration
    which implement a network service. Service exists to provide a singular
    abstraction which can be access controlled, reasoned about, and which
    encapsulates software lifecycle decisions such as rollout policy and
    team resource ownership. Service acts only as an orchestrator of the
    underlying Routes and Configurations (much as a kubernetes Deployment
    orchestrates ReplicaSets), and its usage is optional but recommended.

    The Service's controller will track the statuses of its owned Configuration
    and Route, reflecting their statuses and conditions as its own.

    See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#service

    Attributes
    ----------
    apiVersion : str, default is "serving.knative.dev/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Service", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ServingKnativeDevV1ServiceSpec, default is Undefined, optional
        spec
    status : ServingKnativeDevV1ServiceStatus, default is Undefined, optional
        status
    """


    apiVersion: "serving.knative.dev/v1" = "serving.knative.dev/v1"

    kind: "Service" = "Service"

    metadata?: v1.ObjectMeta

    spec?: ServingKnativeDevV1ServiceSpec

    status?: ServingKnativeDevV1ServiceStatus


schema ServingKnativeDevV1ServiceSpec:
    r"""
    ServiceSpec represents the configuration for the Service object.
    A Service's specification is the union of the specifications for a Route
    and Configuration.  The Service restricts what can be expressed in these
    fields, e.g. the Route must reference the provided Configuration;
    however, these limitations also enable friendlier defaulting,
    e.g. Route never needs a Configuration name, and may be defaulted to
    the appropriate "run latest" spec.

    Attributes
    ----------
    template : ServingKnativeDevV1ServiceSpecTemplate, default is Undefined, optional
        template
    traffic : [ServingKnativeDevV1ServiceSpecTrafficItems0], default is Undefined, optional
        Traffic specifies how to distribute traffic over a collection of
        revisions and configurations.
    """


    template?: ServingKnativeDevV1ServiceSpecTemplate

    traffic?: [ServingKnativeDevV1ServiceSpecTrafficItems0]


schema ServingKnativeDevV1ServiceSpecTemplate:
    r"""
    Template holds the latest specification for the Revision to be stamped out.

    Attributes
    ----------
    metadata : ServingKnativeDevV1ServiceSpecTemplateMetadata, default is Undefined, optional
        metadata
    spec : ServingKnativeDevV1ServiceSpecTemplateSpec, default is Undefined, optional
        spec
    """


    metadata?: ServingKnativeDevV1ServiceSpecTemplateMetadata

    spec?: ServingKnativeDevV1ServiceSpecTemplateSpec


schema ServingKnativeDevV1ServiceSpecTemplateMetadata:
    r"""
    serving knative dev v1 service spec template metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    finalizers : [str], default is Undefined, optional
        finalizers
    labels : {str:str}, default is Undefined, optional
        labels
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    annotations?: {str:str}

    finalizers?: [str]

    labels?: {str:str}

    name?: str

    namespace?: str


schema ServingKnativeDevV1ServiceSpecTemplateSpec:
    r"""
    RevisionSpec holds the desired state of the Revision (from the client).

    Attributes
    ----------
    affinity : any, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-affinity
    automountServiceAccountToken : bool, default is Undefined, optional
        AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
    containerConcurrency : int, default is Undefined, optional
        ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
        requests per container of the Revision.  Defaults to `0` which means
        concurrency to the application is not limited, and the system decides the
        target concurrency for the autoscaler.
    containers : [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0], default is Undefined, required
        List of containers belonging to the pod.
        Containers cannot currently be added or removed.
        There must be at least one container in a Pod.
        Cannot be updated.
    dnsConfig : any, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-dnsconfig
    dnsPolicy : str, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-dnspolicy
    enableServiceLinks : bool, default is Undefined, optional
        EnableServiceLinks indicates whether information aboutservices should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Knative defaults this to false.
    hostAliases : [any], default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-hostaliases
    hostIPC : bool, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-hostipc
    hostNetwork : bool, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-hostnetwork
    hostPID : bool, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-hostpid
    idleTimeoutSeconds : int, default is Undefined, optional
        IdleTimeoutSeconds is the maximum duration in seconds a request will be allowed
        to stay open while not receiving any bytes from the user's application. If
        unspecified, a system default will be provided.
    imagePullSecrets : [ServingKnativeDevV1ServiceSpecTemplateSpecImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
        If specified, these secrets will be passed to individual puller implementations for them to use.
        More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
    initContainers : [any], default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-init-containers
    nodeSelector : {str:str}, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-nodeselector
    priorityClassName : str, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-priorityclassname
    responseStartTimeoutSeconds : int, default is Undefined, optional
        ResponseStartTimeoutSeconds is the maximum duration in seconds that the request
        routing layer will wait for a request delivered to a container to begin
        sending any network traffic.
    runtimeClassName : str, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-runtimeclassname
    schedulerName : str, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-schedulername
    securityContext : any, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-securitycontext
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the ServiceAccount to use to run this pod.
        More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
    shareProcessNamespace : bool, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-shareprocessnamespace
    timeoutSeconds : int, default is Undefined, optional
        TimeoutSeconds is the maximum duration in seconds that the request instance
        is allowed to respond to a request. If unspecified, a system default will
        be provided.
    tolerations : [any], default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-tolerations
    topologySpreadConstraints : [any], default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-topologyspreadconstraints
    volumes : [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0], default is Undefined, optional
        List of volumes that can be mounted by containers belonging to the pod.
        More info: https://kubernetes.io/docs/concepts/storage/volumes
    """


    affinity?: any

    automountServiceAccountToken?: bool

    containerConcurrency?: int

    containers: [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0]

    dnsConfig?: any

    dnsPolicy?: str

    enableServiceLinks?: bool

    hostAliases?: [any]

    hostIPC?: bool

    hostNetwork?: bool

    hostPID?: bool

    idleTimeoutSeconds?: int

    imagePullSecrets?: [ServingKnativeDevV1ServiceSpecTemplateSpecImagePullSecretsItems0]

    initContainers?: [any]

    nodeSelector?: {str:str}

    priorityClassName?: str

    responseStartTimeoutSeconds?: int

    runtimeClassName?: str

    schedulerName?: str

    securityContext?: any

    serviceAccountName?: str

    shareProcessNamespace?: bool

    timeoutSeconds?: int

    tolerations?: [any]

    topologySpreadConstraints?: [any]

    volumes?: [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0]


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0:
    r"""
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint.
        The container image's CMD is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell.
        The container image's ENTRYPOINT is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container.
        Cannot be updated.
    envFrom : [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container.
        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
        will be reported as an event when the container is starting. When a key exists in multiple
        sources, the value associated with the last source will take precedence.
        Values defined by an Env with a duplicate key will take precedence.
        Cannot be updated.
    image : str, default is Undefined, optional
        Container image name.
        More info: https://kubernetes.io/docs/concepts/containers/images
        This field is optional to allow higher level config management to default or override
        container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy.
        One of Always, Never, IfNotPresent.
        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
        Cannot be updated.
        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    livenessProbe : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, optional
        Name of the container specified as a DNS_LABEL.
        Each container in a pod must have a unique name (DNS_LABEL).
        Cannot be updated.
    ports : [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here
        DOES NOT prevent that port from being exposed. Any port which is
        listening on the default "0.0.0.0" address inside a container will be
        accessible from the network.
        Modifying this array with strategic merge patch may corrupt the data.
        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
        Cannot be updated.
    readinessProbe : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resources : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message
        will be written is mounted into the container's filesystem.
        Message written is intended to be brief final status, such as an assertion failure message.
        Will be truncated by the node if greater than 4096 bytes. The total message length across
        all containers will be limited to 12kb.
        Defaults to /dev/termination-log.
        Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of
        terminationMessagePath to populate the container status message on both success and failure.
        FallbackToLogsOnError will use the last chunk of container log output if the termination
        message file is empty and the container exited with an error.
        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
        Defaults to File.
        Cannot be updated.
    volumeMounts : [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem.
        Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory.
        If not specified, the container runtime's default will be used, which
        might be configured in the container image.
        Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0]

    envFrom?: [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    livenessProbe?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbe

    name?: str

    ports?: [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0PortsItems0]

    readinessProbe?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbe

    resources?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0Resources

    securityContext?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0SecurityContext

    startupProbe?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbe

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    volumeMounts?: [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0VolumeMountsItems0]

    workingDir?: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvFromItems0:
    r"""
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvFromItems0SecretRef


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvFromItems0ConfigMapRef:
    r"""
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str = ""

    optional?: bool


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvFromItems0SecretRef:
    r"""
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str = ""

    optional?: bool


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0ValueFrom


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : any, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-fieldref
    resourceFieldRef : any, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-fieldref
    secretKeyRef : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: any

    resourceFieldRef?: any

    secretKeyRef?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0ValueFromSecretKeyRef


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0EnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbe:
    r"""
    Periodic probe of container liveness.
    Container will be restarted if the probe fails.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeGrpc

    httpGet?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeTCPSocket

    timeoutSeconds?: int


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeGrpc:
    r"""
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, optional
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """


    port?: int

    service?: str = ""


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, optional
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port?: int | str

    scheme?: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0LivenessProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, optional
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """


    host?: str

    port?: int | str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0PortsItems0:
    r"""
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, optional
        Number of port to expose on the pod's IP address.
        This must be a valid port number, 0 < x < 65536.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
        named port in a pod must have a unique name. Name for the port that can be
        referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP.
        Defaults to "TCP".
    """


    containerPort?: int

    name?: str

    $protocol?: str = "TCP"


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbe:
    r"""
    Periodic probe of container service readiness.
    Container will be removed from service endpoints if the probe fails.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeGrpc

    httpGet?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeTCPSocket

    timeoutSeconds?: int


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeGrpc:
    r"""
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, optional
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """


    port?: int

    service?: str = ""


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, optional
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port?: int | str

    scheme?: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0ReadinessProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, optional
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """


    host?: str

    port?: int | str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0Resources:
    r"""
    Compute Resources required by this container.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0SecurityContext:
    r"""
    SecurityContext defines the security options the container should be run with.
    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more
        privileges than its parent process. This bool directly controls if
        the no_new_privs flag will be set on the container process.
        AllowPrivilegeEscalation is true always when the container is:
        1) run as Privileged
        2) has CAP_SYS_ADMIN
        Note that this field cannot be set when spec.os.name is windows.
    capabilities : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. This can only be set to explicitly to 'false'
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem.
        Default is false.
        Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process.
        Uses runtime default if unset.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
        If true, the Kubelet will validate the image at runtime to ensure that it
        does not run as UID 0 (root) and fail to start the container if it does.
        If unset or false, no such validation will be performed.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process.
        Defaults to user specified in image metadata if unspecified.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    seccompProfile : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    """


    allowPrivilegeEscalation?: bool

    capabilities?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0SecurityContextCapabilities

    privileged?: bool

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seccompProfile?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0SecurityContextSeccompProfile


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0SecurityContextCapabilities:
    r"""
    The capabilities to add/drop when running containers.
    Defaults to the default set of capabilities granted by the container runtime.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.containerspec-addcapabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0SecurityContextSeccompProfile:
    r"""
    The seccomp options to use by this container. If seccomp options are
    provided at both the pod & container level, the container options
    override the pod options.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used.
        The profile must be preconfigured on the node to work.
        Must be a descending path, relative to the kubelet's configured seccomp profile location.
        Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied.
        Valid options are:

        Localhost - a profile defined in a file on the node should be used.
        RuntimeDefault - the container runtime default profile should be used.
        Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbe:
    r"""
    StartupProbe indicates that the Pod has successfully initialized.
    If specified, no other probes are executed until this completes successfully.
    If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
    This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
    when it might take a long time to load data or warm a cache, than during steady-state operation.
    This cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeExec

    failureThreshold?: int

    grpc?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeGrpc

    httpGet?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeTCPSocket

    timeoutSeconds?: int


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeExec:
    r"""
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeGrpc:
    r"""
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, optional
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """


    port?: int

    service?: str = ""


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, optional
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port?: int | str

    scheme?: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0StartupProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, optional
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """


    host?: str

    port?: int | str


schema ServingKnativeDevV1ServiceSpecTemplateSpecContainersItems0VolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must
        not contain ':'.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified).
        Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted.
        Defaults to "" (volume's root).
    """


    mountPath: str

    name: str

    readOnly?: bool

    subPath?: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the
    referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """


    name?: str = ""


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0:
    r"""
    Volume represents a named volume in a pod that may be accessed by any container in the pod.

    Attributes
    ----------
    configMap : ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ConfigMap, default is Undefined, optional
        config map
    emptyDir : any, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-volumes-emptydir
    hostPath : any, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-volumes-hostpath
    name : str, default is Undefined, required
        name of the volume.
        Must be a DNS_LABEL and unique within the pod.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    persistentVolumeClaim : any, default is Undefined, optional
        This is accessible behind a feature flag - kubernetes.podspec-persistent-volume-claim
    projected : ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0Projected, default is Undefined, optional
        projected
    secret : ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0Secret, default is Undefined, optional
        secret
    """


    configMap?: ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ConfigMap

    emptyDir?: any

    hostPath?: any

    name: str

    persistentVolumeClaim?: any

    projected?: ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0Projected

    secret?: ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0Secret


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ConfigMap:
    r"""
    configMap represents a configMap that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        Defaults to 0644.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    items : [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        ConfigMap will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the ConfigMap,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    defaultMode?: int

    items?: [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ConfigMapItemsItems0]

    name?: str = ""

    optional?: bool


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0Projected:
    r"""
    projected items for all in one resources secrets, configmaps, and downward API

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode are the mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    sources : [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0], default is Undefined, optional
        sources is the list of volume projections. Each entry in this list
        handles one source.
    """


    defaultMode?: int

    sources?: [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0]


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0:
    r"""
    Projection that may be projected along with other supported volume types.
    Exactly one of these fields must be set.

    Attributes
    ----------
    configMap : ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    secret : ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """


    configMap?: ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMap

    downwardAPI?: ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPI

    secret?: ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0Secret

    serviceAccountToken?: ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMap:
    r"""
    configMap information about the configMap data to project

    Attributes
    ----------
    items : [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        ConfigMap will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the ConfigMap,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    items?: [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0]

    name?: str = ""

    optional?: bool


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPI:
    r"""
    downwardAPI information about the downwardAPI data to project

    Attributes
    ----------
    items : [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """


    items?: [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    r"""
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value
        between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    r"""
    Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0Secret:
    r"""
    secret information about the secret data to project

    Attributes
    ----------
    items : [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        Secret will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the Secret,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its key must be defined
    """


    items?: [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0]

    name?: str = ""

    optional?: bool


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken:
    r"""
    serviceAccountToken is information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        audience is the intended audience of the token. A recipient of a token
        must identify itself with an identifier specified in the audience of the
        token, and otherwise should reject the token. The audience defaults to the
        identifier of the apiserver.
    expirationSeconds : int, default is Undefined, optional
        expirationSeconds is the requested duration of validity of the service
        account token. As the token approaches expiration, the kubelet volume
        plugin will proactively rotate the service account token. The kubelet will
        start trying to rotate the token if the token is older than 80 percent of
        its time to live or if the token is older than 24 hours.Defaults to 1 hour
        and must be at least 10 minutes.
    path : str, default is Undefined, required
        path is the path relative to the mount point of the file to project the
        token into.
    """


    audience?: str

    expirationSeconds?: int

    path: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0Secret:
    r"""
    secret represents a secret that should populate this volume.
    More info: https://kubernetes.io/docs/concepts/storage/volumes#secret

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is Optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values
        for mode bits. Defaults to 0644.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    items : [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0SecretItemsItems0], default is Undefined, optional
        items If unspecified, each key-value pair in the Data field of the referenced
        Secret will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the Secret,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        secretName is the name of the secret in the pod's namespace to use.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """


    defaultMode?: int

    items?: [ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0SecretItemsItems0]

    optional?: bool

    secretName?: str


schema ServingKnativeDevV1ServiceSpecTemplateSpecVolumesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema ServingKnativeDevV1ServiceSpecTrafficItems0:
    r"""
    TrafficTarget holds a single entry of the routing table for a Route.

    Attributes
    ----------
    configurationName : str, default is Undefined, optional
        ConfigurationName of a configuration to whose latest revision we will send
        this portion of traffic. When the "status.latestReadyRevisionName" of the
        referenced configuration changes, we will automatically migrate traffic
        from the prior "latest ready" revision to the new one.  This field is never
        set in Route's status, only its spec.  This is mutually exclusive with
        RevisionName.
    latestRevision : bool, default is Undefined, optional
        LatestRevision may be optionally provided to indicate that the latest
        ready Revision of the Configuration should be used for this traffic
        target.  When provided LatestRevision must be true if RevisionName is
        empty; it must be false when RevisionName is non-empty.
    percent : int, default is Undefined, optional
        Percent indicates that percentage based routing should be used and
        the value indicates the percent of traffic that is be routed to this
        Revision or Configuration. `0` (zero) mean no traffic, `100` means all
        traffic.
        When percentage based routing is being used the follow rules apply:
        - the sum of all percent values must equal 100
        - when not specified, the implied value for `percent` is zero for
          that particular Revision or Configuration
    revisionName : str, default is Undefined, optional
        RevisionName of a specific revision to which to send this portion of
        traffic.  This is mutually exclusive with ConfigurationName.
    tag : str, default is Undefined, optional
        Tag is optionally used to expose a dedicated url for referencing
        this target exclusively.
    url : str, default is Undefined, optional
        URL displays the URL for accessing named traffic targets. URL is displayed in
        status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and
        a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)
    """


    configurationName?: str

    latestRevision?: bool

    percent?: int

    revisionName?: str

    tag?: str

    url?: str


schema ServingKnativeDevV1ServiceStatus:
    r"""
    ServiceStatus represents the Status stanza of the Service resource.

    Attributes
    ----------
    address : ServingKnativeDevV1ServiceStatusAddress, default is Undefined, optional
        address
    annotations : {str:str}, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some
        additional State as well as convey more information to the user. This is
        roughly akin to Annotations on any k8s resource, just the reconciler conveying
        richer information outwards.
    conditions : [ServingKnativeDevV1ServiceStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    latestCreatedRevisionName : str, default is Undefined, optional
        LatestCreatedRevisionName is the last revision that was created from this
        Configuration. It might not be ready yet, for that use LatestReadyRevisionName.
    latestReadyRevisionName : str, default is Undefined, optional
        LatestReadyRevisionName holds the name of the latest Revision stamped out
        from this Configuration that has had its "Ready" condition become "True".
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that
        was last processed by the controller.
    traffic : [ServingKnativeDevV1ServiceStatusTrafficItems0], default is Undefined, optional
        Traffic holds the configured traffic distribution.
        These entries will always contain RevisionName references.
        When ConfigurationName appears in the spec, this will hold the
        LatestReadyRevisionName that we last observed.
    url : str, default is Undefined, optional
        URL holds the url that will distribute traffic over the provided traffic targets.
        It generally has the form http[s]://{route-name}.{route-namespace}.{cluster-level-suffix}
    """


    address?: ServingKnativeDevV1ServiceStatusAddress

    annotations?: {str:str}

    conditions?: [ServingKnativeDevV1ServiceStatusConditionsItems0]

    latestCreatedRevisionName?: str

    latestReadyRevisionName?: str

    observedGeneration?: int

    traffic?: [ServingKnativeDevV1ServiceStatusTrafficItems0]

    url?: str


schema ServingKnativeDevV1ServiceStatusAddress:
    r"""
    Address holds the information needed for a Route to be the target of an event.

    Attributes
    ----------
    CACerts : str, default is Undefined, optional
        CACerts is the Certification Authority (CA) certificates in PEM format
        according to https://www.rfc-editor.org/rfc/rfc7468.
    audience : str, default is Undefined, optional
        Audience is the OIDC audience for this address.
    name : str, default is Undefined, optional
        Name is the name of the address.
    url : str, default is Undefined, optional
        url
    """


    CACerts?: str

    audience?: str

    name?: str

    url?: str


schema ServingKnativeDevV1ServiceStatusConditionsItems0:
    r"""
    Condition defines a readiness condition for a Knative resource.
    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another.
        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
        differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition.
        When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema ServingKnativeDevV1ServiceStatusTrafficItems0:
    r"""
    TrafficTarget holds a single entry of the routing table for a Route.

    Attributes
    ----------
    configurationName : str, default is Undefined, optional
        ConfigurationName of a configuration to whose latest revision we will send
        this portion of traffic. When the "status.latestReadyRevisionName" of the
        referenced configuration changes, we will automatically migrate traffic
        from the prior "latest ready" revision to the new one.  This field is never
        set in Route's status, only its spec.  This is mutually exclusive with
        RevisionName.
    latestRevision : bool, default is Undefined, optional
        LatestRevision may be optionally provided to indicate that the latest
        ready Revision of the Configuration should be used for this traffic
        target.  When provided LatestRevision must be true if RevisionName is
        empty; it must be false when RevisionName is non-empty.
    percent : int, default is Undefined, optional
        Percent indicates that percentage based routing should be used and
        the value indicates the percent of traffic that is be routed to this
        Revision or Configuration. `0` (zero) mean no traffic, `100` means all
        traffic.
        When percentage based routing is being used the follow rules apply:
        - the sum of all percent values must equal 100
        - when not specified, the implied value for `percent` is zero for
          that particular Revision or Configuration
    revisionName : str, default is Undefined, optional
        RevisionName of a specific revision to which to send this portion of
        traffic.  This is mutually exclusive with ConfigurationName.
    tag : str, default is Undefined, optional
        Tag is optionally used to expose a dedicated url for referencing
        this target exclusively.
    url : str, default is Undefined, optional
        URL displays the URL for accessing named traffic targets. URL is displayed in
        status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and
        a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)
    """


    configurationName?: str

    latestRevision?: bool

    percent?: int

    revisionName?: str

    tag?: str

    url?: str


