"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema AWSMachineTemplate:
    r"""
    AWSMachineTemplate is the schema for the Amazon EC2 Machine Templates API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AWSMachineTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta2" = "infrastructure.cluster.x-k8s.io/v1beta2"

    kind: "AWSMachineTemplate" = "AWSMachineTemplate"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpec

    status?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateStatus


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpec:
    r"""
    AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate.

    Attributes
    ----------
    template : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplate, default is Undefined, required
        template
    """


    template: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplate


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplate:
    r"""
    AWSMachineTemplateResource describes the data needed to create am AWSMachine from a template.

    Attributes
    ----------
    metadata : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateMetadata, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateMetadata

    spec: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpec


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateMetadata:
    r"""
    Standard object's metadata.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: http://kubernetes.io/docs/user-guide/labels
    """


    annotations?: {str:str}

    labels?: {str:str}


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpec:
    r"""
    Spec is the specification of the desired behavior of the machine.

    Attributes
    ----------
    additionalSecurityGroups : [InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0], default is Undefined, optional
        AdditionalSecurityGroups is an array of references to security groups that should be applied to the
        instance. These security groups would be set in addition to any security groups defined
        at the cluster level or in the actuator. It is possible to specify either IDs of Filters. Using Filters
        will cause additional requests to AWS API and if tags change the attached security groups might change too.
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
        AWS provider. If both the AWSCluster and the AWSMachine specify the same tag name with different values, the
        AWSMachine's value takes precedence.
    ami : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecAmi, default is Undefined, optional
        ami
    capacityReservationId : str, default is Undefined, optional
        CapacityReservationID specifies the target Capacity Reservation into which the instance should be launched.
    cloudInit : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecCloudInit, default is Undefined, optional
        cloud init
    elasticIpPool : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecElasticIPPool, default is Undefined, optional
        elastic Ip pool
    iamInstanceProfile : str, default is Undefined, optional
        IAMInstanceProfile is a name of an IAM instance profile to assign to the instance
    ignition : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecIgnition, default is Undefined, optional
        ignition
    imageLookupBaseOS : str, default is Undefined, optional
        ImageLookupBaseOS is the name of the base operating system to use for
        image lookup the AMI is not set.
    imageLookupFormat : str, default is Undefined, optional
        ImageLookupFormat is the AMI naming format to look up the image for this
        machine It will be ignored if an explicit AMI is set. Supports
        substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
        kubernetes version, respectively. The BaseOS will be the value in
        ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
        defined by the packages produced by kubernetes/release without v as a
        prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
        image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
        searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
        Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
        also: https://golang.org/pkg/text/template/
    imageLookupOrg : str, default is Undefined, optional
        ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
    instanceID : str, default is Undefined, optional
        InstanceID is the EC2 instance ID for this machine.
    instanceMetadataOptions : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecInstanceMetadataOptions, default is Undefined, optional
        instance metadata options
    instanceType : str, default is Undefined, required
        InstanceType is the type of instance to create. Example: m4.xlarge
    marketType : str, default is Undefined, optional
        MarketType specifies the type of market for the EC2 instance. Valid values include:
        "OnDemand" (default): The instance runs as a standard OnDemand instance.
        "Spot": The instance runs as a Spot instance. When SpotMarketOptions is provided, the marketType defaults to "Spot".
        "CapacityBlock": The instance utilizes pre-purchased compute capacity (capacity blocks) with AWS Capacity Reservations.
         If this value is selected, CapacityReservationID must be specified to identify the target reservation.
        If marketType is not specified and spotMarketOptions is provided, the marketType defaults to "Spot".
    networkInterfaceType : str, default is Undefined, optional
        NetworkInterfaceType is the interface type of the primary network Interface.
        If not specified, AWS applies a default value.
    networkInterfaces : [str], default is Undefined, optional
        NetworkInterfaces is a list of ENIs to associate with the instance.
        A maximum of 2 may be specified.
    nonRootVolumes : [InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecNonRootVolumesItems0], default is Undefined, optional
        Configuration options for the non root storage volumes.
    placementGroupName : str, default is Undefined, optional
        PlacementGroupName specifies the name of the placement group in which to launch the instance.
    placementGroupPartition : int, default is Undefined, optional
        PlacementGroupPartition is the partition number within the placement group in which to launch the instance.
        This value is only valid if the placement group, referred in `PlacementGroupName`, was created with
        strategy set to partition.
    privateDnsName : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecPrivateDNSName, default is Undefined, optional
        private Dns name
    providerID : str, default is Undefined, optional
        ProviderID is the unique identifier as specified by the cloud provider.
    publicIP : bool, default is Undefined, optional
        PublicIP specifies whether the instance should get a public IP.
        Precedence for this setting is as follows:
        1. This field if set
        2. Cluster/flavor setting
        3. Subnet default
    rootVolume : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecRootVolume, default is Undefined, optional
        root volume
    securityGroupOverrides : {str:str}, default is Undefined, optional
        SecurityGroupOverrides is an optional set of security groups to use for the node.
        This is optional - if not provided security groups from the cluster will be used.
    spotMarketOptions : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecSpotMarketOptions, default is Undefined, optional
        spot market options
    sshKeyName : str, default is Undefined, optional
        SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
    subnet : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecSubnet, default is Undefined, optional
        subnet
    tenancy : str, default is Undefined, optional
        Tenancy indicates if instance should run on shared or single-tenant hardware.
    uncompressedUserData : bool, default is Undefined, optional
        UncompressedUserData specify whether the user data is gzip-compressed before it is sent to ec2 instance.
        cloud-init has built-in support for gzip-compressed user data
        user data stored in aws secret manager is always gzip-compressed.
    """


    additionalSecurityGroups?: [InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0]

    additionalTags?: {str:str}

    ami?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecAmi

    capacityReservationId?: str

    cloudInit?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecCloudInit

    elasticIpPool?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecElasticIPPool

    iamInstanceProfile?: str

    ignition?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecIgnition

    imageLookupBaseOS?: str

    imageLookupFormat?: str

    imageLookupOrg?: str

    instanceID?: str

    instanceMetadataOptions?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecInstanceMetadataOptions

    instanceType: str

    marketType?: "OnDemand" | "Spot" | "CapacityBlock"

    networkInterfaceType?: "interface" | "efa"

    networkInterfaces?: [str]

    nonRootVolumes?: [InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecNonRootVolumesItems0]

    placementGroupName?: str

    placementGroupPartition?: int

    privateDnsName?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecPrivateDNSName

    providerID?: str

    publicIP?: bool

    rootVolume?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecRootVolume

    securityGroupOverrides?: {str:str}

    spotMarketOptions?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecSpotMarketOptions

    sshKeyName?: str

    subnet?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecSubnet

    tenancy?: "default" | "dedicated" | "host"

    uncompressedUserData?: bool


    check:
        len(instanceType) >= 2
        len(networkInterfaces) <= 2 if networkInterfaces
        placementGroupPartition <= 7 if placementGroupPartition not in [None, Undefined]
        placementGroupPartition >= 1 if placementGroupPartition not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0:
    r"""
    AWSResourceReference is a reference to a specific AWS resource by ID or filters.
    Only one of ID or Filters may be specified. Specifying more than one will result in
    a validation error.

    Attributes
    ----------
    filters : [InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0FiltersItems0], default is Undefined, optional
        Filters is a set of key/value pairs used to identify a resource
        They are applied according to the rules defined by the AWS API:
        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
    id : str, default is Undefined, optional
        ID of resource
    """


    filters?: [InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0FiltersItems0]

    id?: str


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0FiltersItems0:
    r"""
    Filter is a filter used to identify an AWS resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the filter. Filter names are case-sensitive.
    values : [str], default is Undefined, required
        Values includes one or more filter values. Filter values are case-sensitive.
    """


    name: str

    values: [str]


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecAmi:
    r"""
    AMI is the reference to the AMI from which to create the machine instance.

    Attributes
    ----------
    eksLookupType : str, default is Undefined, optional
        EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store
    id : str, default is Undefined, optional
        ID of resource
    """


    eksLookupType?: "AmazonLinux" | "AmazonLinuxGPU" | "AmazonLinux2023" | "AmazonLinux2023GPU"

    id?: str


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecCloudInit:
    r"""
    CloudInit defines options related to the bootstrapping systems where
    CloudInit is used.

    Attributes
    ----------
    insecureSkipSecretsManager : bool, default is Undefined, optional
        InsecureSkipSecretsManager, when set to true will not use AWS Secrets Manager
        or AWS Systems Manager Parameter Store to ensure privacy of userdata.
        By default, a cloud-init boothook shell script is prepended to download
        the userdata from Secrets Manager and additionally delete the secret.
    secretCount : int, default is Undefined, optional
        SecretCount is the number of secrets used to form the complete secret
    secretPrefix : str, default is Undefined, optional
        SecretPrefix is the prefix for the secret name. This is stored
        temporarily, and deleted when the machine registers as a node against
        the workload cluster.
    secureSecretsBackend : str, default is Undefined, optional
        SecureSecretsBackend, when set to parameter-store will utilize the AWS Systems Manager
        Parameter Storage to distribute secrets. By default or with the value of secrets-manager,
        will use AWS Secrets Manager instead.
    """


    insecureSkipSecretsManager?: bool

    secretCount?: int

    secretPrefix?: str

    secureSecretsBackend?: "secrets-manager" | "ssm-parameter-store"


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecElasticIPPool:
    r"""
    ElasticIPPool is the configuration to allocate Public IPv4 address (Elastic IP/EIP) from user-defined pool.

    Attributes
    ----------
    publicIpv4Pool : str, default is Undefined, optional
        PublicIpv4Pool sets a custom Public IPv4 Pool used to create Elastic IP address for resources
        created in public IPv4 subnets. Every IPv4 address, Elastic IP, will be allocated from the custom
        Public IPv4 pool that you brought to AWS, instead of Amazon-provided pool. The public IPv4 pool
        resource ID starts with 'ipv4pool-ec2'.
    publicIpv4PoolFallbackOrder : str, default is Undefined, optional
        PublicIpv4PoolFallBackOrder defines the fallback action when the Public IPv4 Pool has been exhausted,
        no more IPv4 address available in the pool.

        When set to 'amazon-pool', the controller check if the pool has available IPv4 address, when pool has reached the
        IPv4 limit, the address will be claimed from Amazon-pool (default).

        When set to 'none', the controller will fail the Elastic IP allocation when the publicIpv4Pool is exhausted.
    """


    publicIpv4Pool?: str

    publicIpv4PoolFallbackOrder?: "amazon-pool" | "none"


    check:
        len(publicIpv4Pool) <= 30 if publicIpv4Pool


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecIgnition:
    r"""
    Ignition defined options related to the bootstrapping systems where Ignition is used.

    Attributes
    ----------
    proxy : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecIgnitionProxy, default is Undefined, optional
        proxy
    storageType : str, default is "ClusterObjectStore", optional
        StorageType defines how to store the boostrap user data for Ignition.
        This can be used to instruct Ignition from where to fetch the user data to bootstrap an instance.

        When omitted, the storage option will default to ClusterObjectStore.

        When set to "ClusterObjectStore", if the capability is available and a Cluster ObjectStore configuration
        is correctly provided in the Cluster object (under .spec.s3Bucket),
        an object store will be used to store bootstrap user data.

        When set to "UnencryptedUserData", EC2 Instance User Data will be used to store the machine bootstrap user data, unencrypted.
        This option is considered less secure than others as user data may contain sensitive informations (keys, certificates, etc.)
        and users with ec2:DescribeInstances permission or users running pods
        that can access the ec2 metadata service have access to this sensitive information.
        So this is only to be used at ones own risk, and only when other more secure options are not viable.
    tls : InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecIgnitionTLS, default is Undefined, optional
        tls
    version : str, default is "2.3", optional
        Version defines which version of Ignition will be used to generate bootstrap data.
    """


    proxy?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecIgnitionProxy

    storageType?: "ClusterObjectStore" | "UnencryptedUserData" = "ClusterObjectStore"

    tls?: InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecIgnitionTLS

    version?: "2.3" | "3.0" | "3.1" | "3.2" | "3.3" | "3.4" = "2.3"


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecIgnitionProxy:
    r"""
    Proxy defines proxy settings for Ignition.
    Only valid for Ignition versions 3.1 and above.

    Attributes
    ----------
    httpProxy : str, default is Undefined, optional
        HTTPProxy is the HTTP proxy to use for Ignition.
        A single URL that specifies the proxy server to use for HTTP and HTTPS requests,
        unless overridden by the HTTPSProxy or NoProxy options.
    httpsProxy : str, default is Undefined, optional
        HTTPSProxy is the HTTPS proxy to use for Ignition.
        A single URL that specifies the proxy server to use for HTTPS requests,
        unless overridden by the NoProxy option.
    noProxy : [str], default is Undefined, optional
        NoProxy is the list of domains to not proxy for Ignition.
        Specifies a list of strings to hosts that should be excluded from proxying.

        Each value is represented by:
        - An IP address prefix (1.2.3.4)
        - An IP address prefix in CIDR notation (1.2.3.4/8)
        - A domain name
          - A domain name matches that name and all subdomains
          - A domain name with a leading . matches subdomains only
        - A special DNS label (*), indicates that no proxying should be done

        An IP address prefix and domain name can also include a literal port number (1.2.3.4:80).
    """


    httpProxy?: str

    httpsProxy?: str

    noProxy?: [str]


    check:
        len(noProxy) <= 64 if noProxy
        all noProxy in noProxy { len(noProxy) <= 2048 if noProxy not in [None, Undefined] } if noProxy


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecIgnitionTLS:
    r"""
    TLS defines TLS settings for Ignition.
    Only valid for Ignition versions 3.1 and above.

    Attributes
    ----------
    certificateAuthorities : [str], default is Undefined, optional
        CASources defines the list of certificate authorities to use for Ignition.
        The value is the certificate bundle (in PEM format). The bundle can contain multiple concatenated certificates.
        Supported schemes are http, https, tftp, s3, arn, gs, and `data` (RFC 2397) URL scheme.
    """


    certificateAuthorities?: [str]


    check:
        len(certificateAuthorities) <= 64 if certificateAuthorities
        all certificateAuthorities in certificateAuthorities { len(certificateAuthorities) <= 65536 if certificateAuthorities not in [None, Undefined] } if certificateAuthorities


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecInstanceMetadataOptions:
    r"""
    InstanceMetadataOptions is the metadata options for the EC2 instance.

    Attributes
    ----------
    httpEndpoint : str, default is "enabled", optional
        Enables or disables the HTTP metadata endpoint on your instances.

        If you specify a value of disabled, you cannot access your instance metadata.

        Default: enabled
    httpPutResponseHopLimit : int, default is 1, optional
        The desired HTTP PUT response hop limit for instance metadata requests. The
        larger the number, the further instance metadata requests can travel.

        Default: 1
    httpTokens : str, default is "optional", optional
        The state of token usage for your instance metadata requests.

        If the state is optional, you can choose to retrieve instance metadata with
        or without a session token on your request. If you retrieve the IAM role
        credentials without a token, the version 1.0 role credentials are returned.
        If you retrieve the IAM role credentials using a valid session token, the
        version 2.0 role credentials are returned.

        If the state is required, you must send a session token with any instance
        metadata retrieval requests. In this state, retrieving the IAM role credentials
        always returns the version 2.0 credentials; the version 1.0 credentials are
        not available.

        Default: optional
    instanceMetadataTags : str, default is "disabled", optional
        Set to enabled to allow access to instance tags from the instance metadata.
        Set to disabled to turn off access to instance tags from the instance metadata.
        For more information, see Work with instance tags using the instance metadata
        (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).

        Default: disabled
    """


    httpEndpoint?: "enabled" | "disabled" = "enabled"

    httpPutResponseHopLimit?: int = 1

    httpTokens?: "optional" | "required" = "optional"

    instanceMetadataTags?: "enabled" | "disabled" = "disabled"


    check:
        httpPutResponseHopLimit <= 64 if httpPutResponseHopLimit not in [None, Undefined]
        httpPutResponseHopLimit >= 1 if httpPutResponseHopLimit not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecNonRootVolumesItems0:
    r"""
    Volume encapsulates the configuration options for the storage device.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Device name
    encrypted : bool, default is Undefined, optional
        Encrypted is whether the volume should be encrypted or not.
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
        If Encrypted is set and this is omitted, the default AWS key will be used.
        The key must already exist and be accessible by the controller.
    iops : int, default is Undefined, optional
        IOPS is the number of IOPS requested for the disk. Not applicable to all types.
    size : int, default is Undefined, required
        Size specifies size (in Gi) of the storage device.
        Must be greater than the image snapshot size or 8 (whichever is greater).
    throughput : int, default is Undefined, optional
        Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
    $type : str, default is Undefined, optional
        Type is the type of the volume (e.g. gp2, io1, etc...).
    """


    deviceName?: str

    encrypted?: bool

    encryptionKey?: str

    iops?: int

    size: int

    throughput?: int

    $type?: str


    check:
        size >= 8


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecPrivateDNSName:
    r"""
    PrivateDNSName is the options for the instance hostname.

    Attributes
    ----------
    enableResourceNameDnsAAAARecord : bool, default is Undefined, optional
        EnableResourceNameDNSAAAARecord indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        EnableResourceNameDNSARecord indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    hostnameType : str, default is Undefined, optional
        The type of hostname to assign to an instance.
    """


    enableResourceNameDnsAAAARecord?: bool

    enableResourceNameDnsARecord?: bool

    hostnameType?: "ip-name" | "resource-name"


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecRootVolume:
    r"""
    RootVolume encapsulates the configuration options for the root volume

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Device name
    encrypted : bool, default is Undefined, optional
        Encrypted is whether the volume should be encrypted or not.
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
        If Encrypted is set and this is omitted, the default AWS key will be used.
        The key must already exist and be accessible by the controller.
    iops : int, default is Undefined, optional
        IOPS is the number of IOPS requested for the disk. Not applicable to all types.
    size : int, default is Undefined, required
        Size specifies size (in Gi) of the storage device.
        Must be greater than the image snapshot size or 8 (whichever is greater).
    throughput : int, default is Undefined, optional
        Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
    $type : str, default is Undefined, optional
        Type is the type of the volume (e.g. gp2, io1, etc...).
    """


    deviceName?: str

    encrypted?: bool

    encryptionKey?: str

    iops?: int

    size: int

    throughput?: int

    $type?: str


    check:
        size >= 8


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecSpotMarketOptions:
    r"""
    SpotMarketOptions allows users to configure instances to be run using AWS Spot instances.

    Attributes
    ----------
    maxPrice : str, default is Undefined, optional
        MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
    """


    maxPrice?: str


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecSubnet:
    r"""
    Subnet is a reference to the subnet to use for this instance. If not specified,
    the cluster subnet will be used.

    Attributes
    ----------
    filters : [InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecSubnetFiltersItems0], default is Undefined, optional
        Filters is a set of key/value pairs used to identify a resource
        They are applied according to the rules defined by the AWS API:
        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
    id : str, default is Undefined, optional
        ID of resource
    """


    filters?: [InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecSubnetFiltersItems0]

    id?: str


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateSpecTemplateSpecSubnetFiltersItems0:
    r"""
    Filter is a filter used to identify an AWS resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the filter. Filter names are case-sensitive.
    values : [str], default is Undefined, required
        Values includes one or more filter values. Filter values are case-sensitive.
    """


    name: str

    values: [str]


schema InfrastructureClusterxK8sIoV1beta2AWSMachineTemplateStatus:
    r"""
    AWSMachineTemplateStatus defines a status for an AWSMachineTemplate.

    Attributes
    ----------
    capacity : {str:int | str}, default is Undefined, optional
        Capacity defines the resource capacity for this machine.
        This value is used for autoscaling from zero operations as defined in:
        https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md
    """


    capacity?: {str:int | str}


    check:
        all _, capacity in capacity { _regex_match(str(capacity), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if capacity } if capacity


