"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ROSAMachinePool:
    r"""
    ROSAMachinePool is the Schema for the rosamachinepools API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ROSAMachinePool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta2" = "infrastructure.cluster.x-k8s.io/v1beta2"

    kind: "ROSAMachinePool" = "ROSAMachinePool"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpec

    status?: InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolStatus


schema InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpec:
    r"""
    RosaMachinePoolSpec defines the desired state of RosaMachinePool.

    Attributes
    ----------
    additionalSecurityGroups : [str], default is Undefined, optional
        AdditionalSecurityGroups is an optional set of security groups to associate
        with all node instances of the machine pool.
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags are user-defined tags to be added on the underlying EC2 instances associated with this machine pool.
    autoRepair : bool, default is True, optional
        AutoRepair specifies whether health checks should be enabled for machines
        in the NodePool. The default is true.
    autoscaling : InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecAutoscaling, default is Undefined, optional
        autoscaling
    availabilityZone : str, default is Undefined, optional
        AvailabilityZone is an optinal field specifying the availability zone where instances of this machine pool should run
        For Multi-AZ clusters, you can create a machine pool in a Single-AZ of your choice.
    instanceType : str, default is Undefined, required
        InstanceType specifies the AWS instance type
    labels : {str:str}, default is Undefined, optional
        Labels specifies labels for the Kubernetes node objects
    nodeDrainGracePeriod : str, default is Undefined, optional
        NodeDrainGracePeriod is grace period for how long Pod Disruption Budget-protected workloads will be
        respected during upgrades. After this grace period, any workloads protected by Pod Disruption
        Budgets that have not been successfully drained from a node will be forcibly evicted.

        Valid values are from 0 to 1 week(10080m|168h) .
        0 or empty value means that the MachinePool can be drained without any time limitation.
    nodePoolName : str, default is Undefined, required
        NodePoolName specifies the name of the nodepool in Rosa
        must be a valid DNS-1035 label, so it must consist of lower case alphanumeric and have a max length of 15 characters.
    providerIDList : [str], default is Undefined, optional
        ProviderIDList contain a ProviderID for each machine instance that's currently managed by this machine pool.
    subnet : str, default is Undefined, optional
        subnet
    taints : [InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecTaintsItems0], default is Undefined, optional
        Taints specifies the taints to apply to the nodes of the machine pool
    tuningConfigs : [str], default is Undefined, optional
        TuningConfigs specifies the names of the tuning configs to be applied to this MachinePool.
        Tuning configs must already exist.
    updateConfig : InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecUpdateConfig, default is Undefined, optional
        update config
    version : str, default is Undefined, optional
        Version specifies the OpenShift version of the nodes associated with this machinepool.
        ROSAControlPlane version is used if not set.
    volumeSize : int, default is Undefined, optional
        VolumeSize set the disk volume size for the machine pool, in Gib. The default is 300 GiB.
    """


    additionalSecurityGroups?: [str]

    additionalTags?: {str:str}

    autoRepair?: bool = True

    autoscaling?: InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecAutoscaling

    availabilityZone?: str

    instanceType: str

    labels?: {str:str}

    nodeDrainGracePeriod?: str

    nodePoolName: str

    providerIDList?: [str]

    subnet?: str

    taints?: [InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecTaintsItems0]

    tuningConfigs?: [str]

    updateConfig?: InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecUpdateConfig

    version?: str

    volumeSize?: int


    check:
        len(nodePoolName) <= 15
        _regex_match(str(nodePoolName), r"^[a-z]([-a-z0-9]*[a-z0-9])?$")
        volumeSize <= 16384 if volumeSize not in [None, Undefined]
        volumeSize >= 75 if volumeSize not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecAutoscaling:
    r"""
    Autoscaling specifies auto scaling behaviour for this MachinePool.
    required if Replicas is not configured

    Attributes
    ----------
    maxReplicas : int, default is Undefined, optional
        max replicas
    minReplicas : int, default is Undefined, optional
        min replicas
    """


    maxReplicas?: int

    minReplicas?: int


    check:
        maxReplicas >= 1 if maxReplicas not in [None, Undefined]
        minReplicas >= 1 if minReplicas not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecTaintsItems0:
    r"""
    RosaTaint represents a taint to be applied to a node.

    Attributes
    ----------
    effect : str, default is Undefined, required
        The effect of the taint on pods that do not tolerate the taint.
        Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, required
        The taint key to be applied to a node.
    value : str, default is Undefined, optional
        The taint value corresponding to the taint key.
    """


    effect: "NoSchedule" | "PreferNoSchedule" | "NoExecute"

    key: str

    value?: str


    check:
        _regex_match(str(value), r"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$") if value


schema InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecUpdateConfig:
    r"""
    UpdateConfig specifies update configurations.

    Attributes
    ----------
    rollingUpdate : InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecUpdateConfigRollingUpdate, default is Undefined, optional
        rolling update
    """


    rollingUpdate?: InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecUpdateConfigRollingUpdate


schema InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolSpecUpdateConfigRollingUpdate:
    r"""
    RollingUpdate specifies MaxUnavailable & MaxSurge number of nodes during update.

    Attributes
    ----------
    maxSurge : int | str, default is 1, optional
        MaxSurge is the maximum number of nodes that can be provisioned above the desired number of nodes.
        Value can be an absolute number (ex: 5) or a percentage of desired nodes (ex: 10%).
        Absolute number is calculated from percentage by rounding up.

        MaxSurge can not be 0 if MaxUnavailable is 0, default is 1.
        Both MaxSurge & MaxUnavailable must use the same units (absolute value or percentage).

        Example: when MaxSurge is set to 30%, new nodes can be provisioned immediately
        when the rolling update starts, such that the total number of old and new
        nodes do not exceed 130% of desired nodes. Once old nodes have been
        deleted, new nodes can be provisioned, ensuring that total number of nodes
        running at any time during the update is at most 130% of desired nodes.
    maxUnavailable : int | str, default is Undefined, optional
        MaxUnavailable is the maximum number of nodes that can be unavailable during the update.
        Value can be an absolute number (ex: 5) or a percentage of desired nodes (ex: 10%).
        Absolute number is calculated from percentage by rounding down.

        MaxUnavailable can not be 0 if MaxSurge is 0, default is 0.
        Both MaxUnavailable & MaxSurge must use the same units (absolute value or percentage).

        Example: when MaxUnavailable is set to 30%, old nodes can be deleted down to 70% of
        desired nodes immediately when the rolling update starts. Once new nodes
        are ready, more old nodes be deleted, followed by provisioning new nodes,
        ensuring that the total number of nodes available at all times during the
        update is at least 70% of desired nodes.
    """


    maxSurge?: int | str = 1

    maxUnavailable?: int | str = 0


    check:
        _regex_match(str(maxSurge), r"^((100|[0-9]{1,2})%|[0-9]+)$") if maxSurge
        _regex_match(str(maxUnavailable), r"^((100|[0-9]{1,2})%|[0-9]+)$") if maxUnavailable


schema InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolStatus:
    r"""
    RosaMachinePoolStatus defines the observed state of RosaMachinePool.

    Attributes
    ----------
    availableUpgrades : [str], default is Undefined, optional
        Available upgrades for the ROSA MachinePool.
    conditions : [InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the managed machine pool
    failureMessage : str, default is Undefined, optional
        FailureMessage will be set in the event that there is a terminal problem
        reconciling the state and will be set to a descriptive error message.

        This field should not be set for transitive errors that a controller
        faces that are expected to be fixed automatically over
        time (like service outages), but instead indicate that something is
        fundamentally wrong with the spec or the configuration of
        the controller, and that manual intervention is required.
    id : str, default is Undefined, optional
        ID is the ID given by ROSA.
    ready : bool, default is Undefined, required
        Ready denotes that the RosaMachinePool nodepool has joined
        the cluster
    replicas : int, default is Undefined, optional
        Replicas is the most recently observed number of replicas.
    """


    availableUpgrades?: [str]

    conditions?: [InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolStatusConditionsItems0]

    failureMessage?: str

    id?: str

    ready: bool = False

    replicas?: int


schema InfrastructureClusterxK8sIoV1beta2ROSAMachinePoolStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


