"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema AWSCluster:
    r"""
    AWSCluster is the schema for Amazon EC2 based Kubernetes Cluster API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AWSCluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta2AWSClusterSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta2AWSClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta2" = "infrastructure.cluster.x-k8s.io/v1beta2"

    kind: "AWSCluster" = "AWSCluster"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpec

    status?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatus


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpec:
    r"""
    AWSClusterSpec defines the desired state of an EC2-based Kubernetes cluster.

    Attributes
    ----------
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the
        ones added by default.
    bastion : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecBastion, default is Undefined, optional
        bastion
    controlPlaneEndpoint : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneEndpoint, default is Undefined, optional
        control plane endpoint
    controlPlaneLoadBalancer : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancer, default is Undefined, optional
        control plane load balancer
    identityRef : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecIdentityRef, default is Undefined, optional
        identity ref
    imageLookupBaseOS : str, default is Undefined, optional
        ImageLookupBaseOS is the name of the base operating system used to look
        up machine images when a machine does not specify an AMI. When set, this
        will be used for all cluster machines unless a machine specifies a
        different ImageLookupBaseOS.
    imageLookupFormat : str, default is Undefined, optional
        ImageLookupFormat is the AMI naming format to look up machine images when
        a machine does not specify an AMI. When set, this will be used for all
        cluster machines unless a machine specifies a different ImageLookupOrg.
        Supports substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base
        OS and kubernetes version, respectively. The BaseOS will be the value in
        ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
        defined by the packages produced by kubernetes/release without v as a
        prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
        image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
        searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
        Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
        also: https://golang.org/pkg/text/template/
    imageLookupOrg : str, default is Undefined, optional
        ImageLookupOrg is the AWS Organization ID to look up machine images when a
        machine does not specify an AMI. When set, this will be used for all
        cluster machines unless a machine specifies a different ImageLookupOrg.
    network : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetwork, default is Undefined, optional
        network
    partition : str, default is Undefined, optional
        Partition is the AWS security partition being used. Defaults to "aws"
    region : str, default is Undefined, optional
        The AWS Region the cluster lives in.
    s3Bucket : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecS3Bucket, default is Undefined, optional
        s3 bucket
    secondaryControlPlaneLoadBalancer : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancer, default is Undefined, optional
        secondary control plane load balancer
    sshKeyName : str, default is Undefined, optional
        SSHKeyName is the name of the ssh key to attach to the bastion host. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
    """


    additionalTags?: {str:str}

    bastion?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecBastion

    controlPlaneEndpoint?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneEndpoint

    controlPlaneLoadBalancer?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancer

    identityRef?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecIdentityRef

    imageLookupBaseOS?: str

    imageLookupFormat?: str

    imageLookupOrg?: str

    network?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetwork

    partition?: str

    region?: str

    s3Bucket?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecS3Bucket

    secondaryControlPlaneLoadBalancer?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancer

    sshKeyName?: str


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecBastion:
    r"""
    Bastion contains options to configure the bastion host.

    Attributes
    ----------
    allowedCIDRBlocks : [str], default is Undefined, optional
        AllowedCIDRBlocks is a list of CIDR blocks allowed to access the bastion host.
        They are set as ingress rules for the Bastion host's Security Group (defaults to 0.0.0.0/0).
    ami : str, default is Undefined, optional
        AMI will use the specified AMI to boot the bastion. If not specified,
        the AMI will default to one picked out in public space.
    disableIngressRules : bool, default is Undefined, optional
        DisableIngressRules will ensure there are no Ingress rules in the bastion host's security group.
        Requires AllowedCIDRBlocks to be empty.
    enabled : bool, default is Undefined, optional
        Enabled allows this provider to create a bastion host instance
        with a public ip to access the VPC private network.
    instanceType : str, default is Undefined, optional
        InstanceType will use the specified instance type for the bastion. If not specified,
        Cluster API Provider AWS will use t3.micro for all regions except us-east-1, where t2.micro
        will be the default.
    """


    allowedCIDRBlocks?: [str]

    ami?: str

    disableIngressRules?: bool

    enabled?: bool

    instanceType?: str


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneEndpoint:
    r"""
    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.

    Attributes
    ----------
    host : str, default is Undefined, required
        The hostname on which the API server is serving.
    port : int, default is Undefined, required
        The port on which the API server is serving.
    """


    host: str

    port: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancer:
    r"""
    ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.

    Attributes
    ----------
    additionalListeners : [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerAdditionalListenersItems0], default is Undefined, optional
        AdditionalListeners sets the additional listeners for the control plane load balancer.
        This is only applicable to Network Load Balancer (NLB) types for the time being.
    additionalSecurityGroups : [str], default is Undefined, optional
        AdditionalSecurityGroups sets the security groups used by the load balancer. Expected to be security group IDs
        This is optional - if not provided new security groups will be created for the load balancer
    crossZoneLoadBalancing : bool, default is Undefined, optional
        CrossZoneLoadBalancing enables the classic ELB cross availability zone balancing.

        With cross-zone load balancing, each load balancer node for your Classic Load Balancer
        distributes requests evenly across the registered instances in all enabled Availability Zones.
        If cross-zone load balancing is disabled, each load balancer node distributes requests evenly across
        the registered instances in its Availability Zone only.

        Defaults to false.
    disableHostsRewrite : bool, default is Undefined, optional
        DisableHostsRewrite disabled the hair pinning issue solution that adds the NLB's address as 127.0.0.1 to the hosts
        file of each instance. This is by default, false.
    healthCheck : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerHealthCheck, default is Undefined, optional
        health check
    healthCheckProtocol : str, default is Undefined, optional
        HealthCheckProtocol sets the protocol type for ELB health check target
        default value is ELBProtocolSSL
    ingressRules : [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerIngressRulesItems0], default is Undefined, optional
        IngressRules sets the ingress rules for the control plane load balancer.
    loadBalancerType : str, default is "classic", optional
        LoadBalancerType sets the type for a load balancer. The default type is classic.
    name : str, default is Undefined, optional
        Name sets the name of the classic ELB load balancer. As per AWS, the name must be unique
        within your set of load balancers for the region, must have a maximum of 32 characters, must
        contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen. Once
        set, the value cannot be changed.
    preserveClientIP : bool, default is Undefined, optional
        PreserveClientIP lets the user control if preservation of client ips must be retained or not.
        If this is enabled 6443 will be opened to 0.0.0.0/0.
    scheme : str, default is "internet-facing", optional
        Scheme sets the scheme of the load balancer (defaults to internet-facing)
    subnets : [str], default is Undefined, optional
        Subnets sets the subnets that should be applied to the control plane load balancer (defaults to discovered subnets for managed VPCs or an empty set for unmanaged VPCs)
    """


    additionalListeners?: [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerAdditionalListenersItems0]

    additionalSecurityGroups?: [str]

    crossZoneLoadBalancing?: bool

    disableHostsRewrite?: bool

    healthCheck?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerHealthCheck

    healthCheckProtocol?: "TCP" | "SSL" | "HTTP" | "HTTPS" | "TLS" | "UDP"

    ingressRules?: [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerIngressRulesItems0]

    loadBalancerType?: "classic" | "elb" | "alb" | "nlb" | "disabled" = "classic"

    name?: str

    preserveClientIP?: bool

    scheme?: "internet-facing" | "internal" = "internet-facing"

    subnets?: [str]


    check:
        len(name) <= 32 if name
        _regex_match(str(name), r"^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$") if name


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerAdditionalListenersItems0:
    r"""
    AdditionalListenerSpec defines the desired state of an
    additional listener on an AWS load balancer.

    Attributes
    ----------
    healthCheck : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerAdditionalListenersItems0HealthCheck, default is Undefined, optional
        health check
    port : int, default is Undefined, required
        Port sets the port for the additional listener.
    $protocol : str, default is "TCP", optional
        Protocol sets the protocol for the additional listener.
        Currently only TCP is supported.
    """


    healthCheck?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerAdditionalListenersItems0HealthCheck

    port: int

    $protocol?: "TCP" = "TCP"


    check:
        port <= 65535
        port >= 1


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerAdditionalListenersItems0HealthCheck:
    r"""
    HealthCheck sets the optional custom health check configuration to the API target group.

    Attributes
    ----------
    intervalSeconds : int, default is Undefined, optional
        The approximate amount of time, in seconds, between health checks of an individual
        target.
    path : str, default is Undefined, optional
        The destination for health checks on the targets when using the protocol HTTP or HTTPS,
        otherwise the path will be ignored.
    port : str, default is Undefined, optional
        The port the load balancer uses when performing health checks for additional target groups. When
        not specified this value will be set for the same of listener port.
    $protocol : str, default is Undefined, optional
        The protocol to use to health check connect with the target. When not specified the Protocol
        will be the same of the listener.
    thresholdCount : int, default is Undefined, optional
        The number of consecutive health check successes required before considering
        a target healthy.
    timeoutSeconds : int, default is Undefined, optional
        The amount of time, in seconds, during which no response from a target means
        a failed health check.
    unhealthyThresholdCount : int, default is Undefined, optional
        The number of consecutive health check failures required before considering
        a target unhealthy.
    """


    intervalSeconds?: int

    path?: str

    port?: str

    $protocol?: "TCP" | "HTTP" | "HTTPS"

    thresholdCount?: int

    timeoutSeconds?: int

    unhealthyThresholdCount?: int


    check:
        intervalSeconds <= 300 if intervalSeconds not in [None, Undefined]
        intervalSeconds >= 5 if intervalSeconds not in [None, Undefined]
        thresholdCount <= 10 if thresholdCount not in [None, Undefined]
        thresholdCount >= 2 if thresholdCount not in [None, Undefined]
        timeoutSeconds <= 120 if timeoutSeconds not in [None, Undefined]
        timeoutSeconds >= 2 if timeoutSeconds not in [None, Undefined]
        unhealthyThresholdCount <= 10 if unhealthyThresholdCount not in [None, Undefined]
        unhealthyThresholdCount >= 2 if unhealthyThresholdCount not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerHealthCheck:
    r"""
    HealthCheck sets custom health check configuration to the API target group.

    Attributes
    ----------
    intervalSeconds : int, default is Undefined, optional
        The approximate amount of time, in seconds, between health checks of an individual
        target.
    thresholdCount : int, default is Undefined, optional
        The number of consecutive health check successes required before considering
        a target healthy.
    timeoutSeconds : int, default is Undefined, optional
        The amount of time, in seconds, during which no response from a target means
        a failed health check.
    unhealthyThresholdCount : int, default is Undefined, optional
        The number of consecutive health check failures required before considering
        a target unhealthy.
    """


    intervalSeconds?: int

    thresholdCount?: int

    timeoutSeconds?: int

    unhealthyThresholdCount?: int


    check:
        intervalSeconds <= 300 if intervalSeconds not in [None, Undefined]
        intervalSeconds >= 5 if intervalSeconds not in [None, Undefined]
        thresholdCount <= 10 if thresholdCount not in [None, Undefined]
        thresholdCount >= 2 if thresholdCount not in [None, Undefined]
        timeoutSeconds <= 120 if timeoutSeconds not in [None, Undefined]
        timeoutSeconds >= 2 if timeoutSeconds not in [None, Undefined]
        unhealthyThresholdCount <= 10 if unhealthyThresholdCount not in [None, Undefined]
        unhealthyThresholdCount >= 2 if unhealthyThresholdCount not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecControlPlaneLoadBalancerIngressRulesItems0:
    r"""
    IngressRule defines an AWS ingress rule for security groups.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, optional
        List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    description : str, default is Undefined, required
        Description provides extended information about the ingress rule.
    fromPort : int, default is Undefined, required
        FromPort is the start of port range.
    ipv6CidrBlocks : [str], default is Undefined, optional
        List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    natGatewaysIPsSource : bool, default is Undefined, optional
        NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
    $protocol : str, default is Undefined, required
        Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
    sourceSecurityGroupIds : [str], default is Undefined, optional
        The security group id to allow access from. Cannot be specified with CidrBlocks.
    sourceSecurityGroupRoles : [str], default is Undefined, optional
        The security group role to allow access from. Cannot be specified with CidrBlocks.
        The field will be combined with source security group IDs if specified.
    toPort : int, default is Undefined, required
        ToPort is the end of port range.
    """


    cidrBlocks?: [str]

    description: str

    fromPort: int

    ipv6CidrBlocks?: [str]

    natGatewaysIPsSource?: bool

    $protocol: "-1" | "4" | "tcp" | "udp" | "icmp" | "58" | "50"

    sourceSecurityGroupIds?: [str]

    sourceSecurityGroupRoles?: [str]

    toPort: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecIdentityRef:
    r"""
    IdentityRef is a reference to an identity to be used when reconciling the managed control plane.
    If no identity is specified, the default identity for this controller will be used.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the identity.
    name : str, default is Undefined, required
        Name of the identity.
    """


    kind: "AWSClusterControllerIdentity" | "AWSClusterRoleIdentity" | "AWSClusterStaticIdentity"

    name: str


    check:
        len(name) >= 1


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetwork:
    r"""
    NetworkSpec encapsulates all things related to AWS network.

    Attributes
    ----------
    additionalControlPlaneIngressRules : [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkAdditionalControlPlaneIngressRulesItems0], default is Undefined, optional
        AdditionalControlPlaneIngressRules is an optional set of ingress rules to add to the control plane
    cni : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkCni, default is Undefined, optional
        cni
    nodePortIngressRuleCidrBlocks : [str], default is Undefined, optional
        NodePortIngressRuleCidrBlocks is an optional set of CIDR blocks to allow traffic to nodes' NodePort services.
        If none are specified here, all IPs are allowed to connect.
    securityGroupOverrides : {str:str}, default is Undefined, optional
        SecurityGroupOverrides is an optional set of security groups to use for cluster instances
        This is optional - if not provided new security groups will be created for the cluster
    subnets : [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkSubnetsItems0], default is Undefined, optional
        Subnets configuration.
    vpc : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpc, default is Undefined, optional
        vpc
    """


    additionalControlPlaneIngressRules?: [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkAdditionalControlPlaneIngressRulesItems0]

    cni?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkCni

    nodePortIngressRuleCidrBlocks?: [str]

    securityGroupOverrides?: {str:str}

    subnets?: [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkSubnetsItems0]

    vpc?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpc


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkAdditionalControlPlaneIngressRulesItems0:
    r"""
    IngressRule defines an AWS ingress rule for security groups.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, optional
        List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    description : str, default is Undefined, required
        Description provides extended information about the ingress rule.
    fromPort : int, default is Undefined, required
        FromPort is the start of port range.
    ipv6CidrBlocks : [str], default is Undefined, optional
        List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    natGatewaysIPsSource : bool, default is Undefined, optional
        NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
    $protocol : str, default is Undefined, required
        Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
    sourceSecurityGroupIds : [str], default is Undefined, optional
        The security group id to allow access from. Cannot be specified with CidrBlocks.
    sourceSecurityGroupRoles : [str], default is Undefined, optional
        The security group role to allow access from. Cannot be specified with CidrBlocks.
        The field will be combined with source security group IDs if specified.
    toPort : int, default is Undefined, required
        ToPort is the end of port range.
    """


    cidrBlocks?: [str]

    description: str

    fromPort: int

    ipv6CidrBlocks?: [str]

    natGatewaysIPsSource?: bool

    $protocol: "-1" | "4" | "tcp" | "udp" | "icmp" | "58" | "50"

    sourceSecurityGroupIds?: [str]

    sourceSecurityGroupRoles?: [str]

    toPort: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkCni:
    r"""
    CNI configuration

    Attributes
    ----------
    cniIngressRules : [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkCniCniIngressRulesItems0], default is Undefined, optional
        CNIIngressRules specify rules to apply to control plane and worker node security groups.
        The source for the rule will be set to control plane and worker security group IDs.
    """


    cniIngressRules?: [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkCniCniIngressRulesItems0]


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkCniCniIngressRulesItems0:
    r"""
    CNIIngressRule defines an AWS ingress rule for CNI requirements.

    Attributes
    ----------
    description : str, default is Undefined, required
        description
    fromPort : int, default is Undefined, required
        from port
    $protocol : str, default is Undefined, required
        SecurityGroupProtocol defines the protocol type for a security group rule.
    toPort : int, default is Undefined, required
        to port
    """


    description: str

    fromPort: int

    $protocol: str

    toPort: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkSubnetsItems0:
    r"""
    SubnetSpec configures an AWS Subnet.

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        AvailabilityZone defines the availability zone to use for this subnet in the cluster's region.
    cidrBlock : str, default is Undefined, optional
        CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
    id : str, default is Undefined, required
        ID defines a unique identifier to reference this resource.
        If you're bringing your subnet, set the AWS subnet-id here, it must start with `subnet-`.

        When the VPC is managed by CAPA, and you'd like the provider to create a subnet for you,
        the id can be set to any placeholder value that does not start with `subnet-`;
        upon creation, the subnet AWS identifier will be populated in the `ResourceID` field and
        the `id` field is going to be used as the subnet name. If you specify a tag
        called `Name`, it takes precedence.
    ipv6CidrBlock : str, default is Undefined, optional
        IPv6CidrBlock is the IPv6 CIDR block to be used when the provider creates a managed VPC.
        A subnet can have an IPv4 and an IPv6 address.
        IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
    isIpv6 : bool, default is Undefined, optional
        IsIPv6 defines the subnet as an IPv6 subnet. A subnet is IPv6 when it is associated with a VPC that has IPv6 enabled.
        IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
    isPublic : bool, default is Undefined, optional
        IsPublic defines the subnet as a public subnet. A subnet is public when it is associated with a route table that has a route to an internet gateway.
    natGatewayId : str, default is Undefined, optional
        NatGatewayID is the NAT gateway id associated with the subnet.
        Ignored unless the subnet is managed by the provider, in which case this is set on the public subnet where the NAT gateway resides. It is then used to determine routes for private subnets in the same AZ as the public subnet.
    parentZoneName : str, default is Undefined, optional
        ParentZoneName is the zone name where the current subnet's zone is tied when
        the zone is a Local Zone.

        The subnets in Local Zone or Wavelength Zone locations consume the ParentZoneName
        to select the correct private route table to egress traffic to the internet.
    resourceID : str, default is Undefined, optional
        ResourceID is the subnet identifier from AWS, READ ONLY.
        This field is populated when the provider manages the subnet.
    routeTableId : str, default is Undefined, optional
        RouteTableID is the routing table id associated with the subnet.
    tags : {str:str}, default is Undefined, optional
        Tags is a collection of tags describing the resource.
    zoneType : str, default is Undefined, optional
        ZoneType defines the type of the zone where the subnet is created.

        The valid values are availability-zone, local-zone, and wavelength-zone.

        Subnet with zone type availability-zone (regular) is always selected to create cluster
        resources, like Load Balancers, NAT Gateways, Contol Plane nodes, etc.

        Subnet with zone type local-zone or wavelength-zone is not eligible to automatically create
        regular cluster resources.

        The public subnet in availability-zone or local-zone is associated with regular public
        route table with default route entry to a Internet Gateway.

        The public subnet in wavelength-zone is associated with a carrier public
        route table with default route entry to a Carrier Gateway.

        The private subnet in the availability-zone is associated with a private route table with
        the default route entry to a NAT Gateway created in that zone.

        The private subnet in the local-zone or wavelength-zone is associated with a private route table with
        the default route entry re-using the NAT Gateway in the Region (preferred from the
        parent zone, the zone type availability-zone in the region, or first table available).
    """


    availabilityZone?: str

    cidrBlock?: str

    id: str

    ipv6CidrBlock?: str

    isIpv6?: bool

    isPublic?: bool

    natGatewayId?: str

    parentZoneName?: str

    resourceID?: str

    routeTableId?: str

    tags?: {str:str}

    zoneType?: "availability-zone" | "local-zone" | "wavelength-zone"


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpc:
    r"""
    VPC configuration.

    Attributes
    ----------
    availabilityZoneSelection : str, default is "Ordered", optional
        AvailabilityZoneSelection specifies how AZs should be selected if there are more AZs
        in a region than specified by AvailabilityZoneUsageLimit. There are 2 selection schemes:
        Ordered - selects based on alphabetical order
        Random - selects AZs randomly in a region
        Defaults to Ordered
    availabilityZoneUsageLimit : int, default is 3, optional
        AvailabilityZoneUsageLimit specifies the maximum number of availability zones (AZ) that
        should be used in a region when automatically creating subnets. If a region has more
        than this number of AZs then this number of AZs will be picked randomly when creating
        default subnets. Defaults to 3
    carrierGatewayId : str, default is Undefined, optional
        CarrierGatewayID is the id of the internet gateway associated with the VPC,
        for carrier network (Wavelength Zones).
    cidrBlock : str, default is Undefined, optional
        CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
        Defaults to 10.0.0.0/16.
        Mutually exclusive with IPAMPool.
    elasticIpPool : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcElasticIPPool, default is Undefined, optional
        elastic Ip pool
    emptyRoutesDefaultVPCSecurityGroup : bool, default is Undefined, optional
        EmptyRoutesDefaultVPCSecurityGroup specifies whether the default VPC security group ingress
        and egress rules should be removed.

        By default, when creating a VPC, AWS creates a security group called `default` with ingress and egress
        rules that allow traffic from anywhere. The group could be used as a potential surface attack and
        it's generally suggested that the group rules are removed or modified appropriately.

        NOTE: This only applies when the VPC is managed by the Cluster API AWS controller.
    id : str, default is Undefined, optional
        ID is the vpc-id of the VPC this provider should use to create resources.
    internetGatewayId : str, default is Undefined, optional
        InternetGatewayID is the id of the internet gateway associated with the VPC.
    ipamPool : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcIpamPool, default is Undefined, optional
        ipam pool
    ipv6 : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcIPV6, default is Undefined, optional
        ipv6
    privateDnsHostnameTypeOnLaunch : str, default is Undefined, optional
        PrivateDNSHostnameTypeOnLaunch is the type of hostname to assign to instances in the subnet at launch.
        For IPv4-only and dual-stack (IPv4 and IPv6) subnets, an instance DNS name can be based on the instance IPv4 address (ip-name)
        or the instance ID (resource-name). For IPv6 only subnets, an instance DNS name must be based on the instance ID (resource-name).
    secondaryCidrBlocks : [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcSecondaryCidrBlocksItems0], default is Undefined, optional
        SecondaryCidrBlocks are additional CIDR blocks to be associated when the provider creates a managed VPC.
        Defaults to none. Mutually exclusive with IPAMPool. This makes sense to use if, for example, you want to use
        a separate IP range for pods (e.g. Cilium ENI mode).
    subnetSchema : str, default is "PreferPrivate", optional
        SubnetSchema specifies how CidrBlock should be divided on subnets in the VPC depending on the number of AZs.
        PreferPrivate - one private subnet for each AZ plus one other subnet that will be further sub-divided for the public subnets.
        PreferPublic - have the reverse logic of PreferPrivate, one public subnet for each AZ plus one other subnet
        that will be further sub-divided for the private subnets.
        Defaults to PreferPrivate
    tags : {str:str}, default is Undefined, optional
        Tags is a collection of tags describing the resource.
    """


    availabilityZoneSelection?: "Ordered" | "Random" = "Ordered"

    availabilityZoneUsageLimit?: int = 3

    carrierGatewayId?: str

    cidrBlock?: str

    elasticIpPool?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcElasticIPPool

    emptyRoutesDefaultVPCSecurityGroup?: bool

    id?: str

    internetGatewayId?: str

    ipamPool?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcIpamPool

    ipv6?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcIPV6

    privateDnsHostnameTypeOnLaunch?: "ip-name" | "resource-name"

    secondaryCidrBlocks?: [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcSecondaryCidrBlocksItems0]

    subnetSchema?: "PreferPrivate" | "PreferPublic" = "PreferPrivate"

    tags?: {str:str}


    check:
        availabilityZoneUsageLimit >= 1 if availabilityZoneUsageLimit not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcElasticIPPool:
    r"""
    ElasticIPPool contains specific configuration to allocate Public IPv4 address (Elastic IP) from user-defined pool
    brought to AWS for core infrastructure resources, like NAT Gateways and Public Network Load Balancers for
    the API Server.

    Attributes
    ----------
    publicIpv4Pool : str, default is Undefined, optional
        PublicIpv4Pool sets a custom Public IPv4 Pool used to create Elastic IP address for resources
        created in public IPv4 subnets. Every IPv4 address, Elastic IP, will be allocated from the custom
        Public IPv4 pool that you brought to AWS, instead of Amazon-provided pool. The public IPv4 pool
        resource ID starts with 'ipv4pool-ec2'.
    publicIpv4PoolFallbackOrder : str, default is Undefined, optional
        PublicIpv4PoolFallBackOrder defines the fallback action when the Public IPv4 Pool has been exhausted,
        no more IPv4 address available in the pool.

        When set to 'amazon-pool', the controller check if the pool has available IPv4 address, when pool has reached the
        IPv4 limit, the address will be claimed from Amazon-pool (default).

        When set to 'none', the controller will fail the Elastic IP allocation when the publicIpv4Pool is exhausted.
    """


    publicIpv4Pool?: str

    publicIpv4PoolFallbackOrder?: "amazon-pool" | "none"


    check:
        len(publicIpv4Pool) <= 30 if publicIpv4Pool


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcIPV6:
    r"""
    IPv6 contains ipv6 specific settings for the network. Supported only in managed clusters.
    This field cannot be set on AWSCluster object.

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        CidrBlock is the CIDR block provided by Amazon when VPC has enabled IPv6.
        Mutually exclusive with IPAMPool.
    egressOnlyInternetGatewayId : str, default is Undefined, optional
        EgressOnlyInternetGatewayID is the id of the egress only internet gateway associated with an IPv6 enabled VPC.
    ipamPool : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcIPV6IpamPool, default is Undefined, optional
        ipam pool
    poolId : str, default is Undefined, optional
        PoolID is the IP pool which must be defined in case of BYO IP is defined.
        Must be specified if CidrBlock is set.
        Mutually exclusive with IPAMPool.
    """


    cidrBlock?: str

    egressOnlyInternetGatewayId?: str

    ipamPool?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcIPV6IpamPool

    poolId?: str


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcIPV6IpamPool:
    r"""
    IPAMPool defines the IPAMv6 pool to be used for VPC.
    Mutually exclusive with CidrBlock.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the ID of the IPAM pool this provider should use to create VPC.
    name : str, default is Undefined, optional
        Name is the name of the IPAM pool this provider should use to create VPC.
    netmaskLength : int, default is Undefined, optional
        The netmask length of the IPv4 CIDR you want to allocate to VPC from
        an Amazon VPC IP Address Manager (IPAM) pool.
        Defaults to /16 for IPv4 if not specified.
    """


    id?: str

    name?: str

    netmaskLength?: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcIpamPool:
    r"""
    IPAMPool defines the IPAMv4 pool to be used for VPC.
    Mutually exclusive with CidrBlock.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the ID of the IPAM pool this provider should use to create VPC.
    name : str, default is Undefined, optional
        Name is the name of the IPAM pool this provider should use to create VPC.
    netmaskLength : int, default is Undefined, optional
        The netmask length of the IPv4 CIDR you want to allocate to VPC from
        an Amazon VPC IP Address Manager (IPAM) pool.
        Defaults to /16 for IPv4 if not specified.
    """


    id?: str

    name?: str

    netmaskLength?: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecNetworkVpcSecondaryCidrBlocksItems0:
    r"""
    VpcCidrBlock defines the CIDR block and settings to associate with the managed VPC. Currently, only IPv4 is supported.

    Attributes
    ----------
    ipv4CidrBlock : str, default is Undefined, required
        IPv4CidrBlock is the IPv4 CIDR block to associate with the managed VPC.
    """


    ipv4CidrBlock: str


    check:
        len(ipv4CidrBlock) >= 1


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecS3Bucket:
    r"""
    S3Bucket contains options to configure a supporting S3 bucket for this
    cluster - currently used for nodes requiring Ignition
    (https://coreos.github.io/ignition/) for bootstrapping (requires
    BootstrapFormatIgnition feature flag to be enabled).

    Attributes
    ----------
    bestEffortDeleteObjects : bool, default is Undefined, optional
        BestEffortDeleteObjects defines whether access/permission errors during object deletion should be ignored.
    controlPlaneIAMInstanceProfile : str, default is Undefined, optional
        ControlPlaneIAMInstanceProfile is a name of the IAMInstanceProfile, which will be allowed
        to read control-plane node bootstrap data from S3 Bucket.
    name : str, default is Undefined, required
        Name defines name of S3 Bucket to be created.
    nodesIAMInstanceProfiles : [str], default is Undefined, optional
        NodesIAMInstanceProfiles is a list of IAM instance profiles, which will be allowed to read
        worker nodes bootstrap data from S3 Bucket.
    presignedURLDuration : str, default is Undefined, optional
        PresignedURLDuration defines the duration for which presigned URLs are valid.

        This is used to generate presigned URLs for S3 Bucket objects, which are used by
        control-plane and worker nodes to fetch bootstrap data.

        When enabled, the IAM instance profiles specified are not used.
    """


    bestEffortDeleteObjects?: bool

    controlPlaneIAMInstanceProfile?: str

    name: str

    nodesIAMInstanceProfiles?: [str]

    presignedURLDuration?: str


    check:
        len(name) <= 63
        len(name) >= 3
        _regex_match(str(name), r"^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$")


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancer:
    r"""
    SecondaryControlPlaneLoadBalancer is an additional load balancer that can be used for the control plane.

    An example use case is to have a separate internal load balancer for internal traffic,
    and a separate external load balancer for external traffic.

    Attributes
    ----------
    additionalListeners : [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerAdditionalListenersItems0], default is Undefined, optional
        AdditionalListeners sets the additional listeners for the control plane load balancer.
        This is only applicable to Network Load Balancer (NLB) types for the time being.
    additionalSecurityGroups : [str], default is Undefined, optional
        AdditionalSecurityGroups sets the security groups used by the load balancer. Expected to be security group IDs
        This is optional - if not provided new security groups will be created for the load balancer
    crossZoneLoadBalancing : bool, default is Undefined, optional
        CrossZoneLoadBalancing enables the classic ELB cross availability zone balancing.

        With cross-zone load balancing, each load balancer node for your Classic Load Balancer
        distributes requests evenly across the registered instances in all enabled Availability Zones.
        If cross-zone load balancing is disabled, each load balancer node distributes requests evenly across
        the registered instances in its Availability Zone only.

        Defaults to false.
    disableHostsRewrite : bool, default is Undefined, optional
        DisableHostsRewrite disabled the hair pinning issue solution that adds the NLB's address as 127.0.0.1 to the hosts
        file of each instance. This is by default, false.
    healthCheck : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerHealthCheck, default is Undefined, optional
        health check
    healthCheckProtocol : str, default is Undefined, optional
        HealthCheckProtocol sets the protocol type for ELB health check target
        default value is ELBProtocolSSL
    ingressRules : [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerIngressRulesItems0], default is Undefined, optional
        IngressRules sets the ingress rules for the control plane load balancer.
    loadBalancerType : str, default is "classic", optional
        LoadBalancerType sets the type for a load balancer. The default type is classic.
    name : str, default is Undefined, optional
        Name sets the name of the classic ELB load balancer. As per AWS, the name must be unique
        within your set of load balancers for the region, must have a maximum of 32 characters, must
        contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen. Once
        set, the value cannot be changed.
    preserveClientIP : bool, default is Undefined, optional
        PreserveClientIP lets the user control if preservation of client ips must be retained or not.
        If this is enabled 6443 will be opened to 0.0.0.0/0.
    scheme : str, default is "internet-facing", optional
        Scheme sets the scheme of the load balancer (defaults to internet-facing)
    subnets : [str], default is Undefined, optional
        Subnets sets the subnets that should be applied to the control plane load balancer (defaults to discovered subnets for managed VPCs or an empty set for unmanaged VPCs)
    """


    additionalListeners?: [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerAdditionalListenersItems0]

    additionalSecurityGroups?: [str]

    crossZoneLoadBalancing?: bool

    disableHostsRewrite?: bool

    healthCheck?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerHealthCheck

    healthCheckProtocol?: "TCP" | "SSL" | "HTTP" | "HTTPS" | "TLS" | "UDP"

    ingressRules?: [InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerIngressRulesItems0]

    loadBalancerType?: "classic" | "elb" | "alb" | "nlb" | "disabled" = "classic"

    name?: str

    preserveClientIP?: bool

    scheme?: "internet-facing" | "internal" = "internet-facing"

    subnets?: [str]


    check:
        len(name) <= 32 if name
        _regex_match(str(name), r"^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$") if name


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerAdditionalListenersItems0:
    r"""
    AdditionalListenerSpec defines the desired state of an
    additional listener on an AWS load balancer.

    Attributes
    ----------
    healthCheck : InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerAdditionalListenersItems0HealthCheck, default is Undefined, optional
        health check
    port : int, default is Undefined, required
        Port sets the port for the additional listener.
    $protocol : str, default is "TCP", optional
        Protocol sets the protocol for the additional listener.
        Currently only TCP is supported.
    """


    healthCheck?: InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerAdditionalListenersItems0HealthCheck

    port: int

    $protocol?: "TCP" = "TCP"


    check:
        port <= 65535
        port >= 1


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerAdditionalListenersItems0HealthCheck:
    r"""
    HealthCheck sets the optional custom health check configuration to the API target group.

    Attributes
    ----------
    intervalSeconds : int, default is Undefined, optional
        The approximate amount of time, in seconds, between health checks of an individual
        target.
    path : str, default is Undefined, optional
        The destination for health checks on the targets when using the protocol HTTP or HTTPS,
        otherwise the path will be ignored.
    port : str, default is Undefined, optional
        The port the load balancer uses when performing health checks for additional target groups. When
        not specified this value will be set for the same of listener port.
    $protocol : str, default is Undefined, optional
        The protocol to use to health check connect with the target. When not specified the Protocol
        will be the same of the listener.
    thresholdCount : int, default is Undefined, optional
        The number of consecutive health check successes required before considering
        a target healthy.
    timeoutSeconds : int, default is Undefined, optional
        The amount of time, in seconds, during which no response from a target means
        a failed health check.
    unhealthyThresholdCount : int, default is Undefined, optional
        The number of consecutive health check failures required before considering
        a target unhealthy.
    """


    intervalSeconds?: int

    path?: str

    port?: str

    $protocol?: "TCP" | "HTTP" | "HTTPS"

    thresholdCount?: int

    timeoutSeconds?: int

    unhealthyThresholdCount?: int


    check:
        intervalSeconds <= 300 if intervalSeconds not in [None, Undefined]
        intervalSeconds >= 5 if intervalSeconds not in [None, Undefined]
        thresholdCount <= 10 if thresholdCount not in [None, Undefined]
        thresholdCount >= 2 if thresholdCount not in [None, Undefined]
        timeoutSeconds <= 120 if timeoutSeconds not in [None, Undefined]
        timeoutSeconds >= 2 if timeoutSeconds not in [None, Undefined]
        unhealthyThresholdCount <= 10 if unhealthyThresholdCount not in [None, Undefined]
        unhealthyThresholdCount >= 2 if unhealthyThresholdCount not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerHealthCheck:
    r"""
    HealthCheck sets custom health check configuration to the API target group.

    Attributes
    ----------
    intervalSeconds : int, default is Undefined, optional
        The approximate amount of time, in seconds, between health checks of an individual
        target.
    thresholdCount : int, default is Undefined, optional
        The number of consecutive health check successes required before considering
        a target healthy.
    timeoutSeconds : int, default is Undefined, optional
        The amount of time, in seconds, during which no response from a target means
        a failed health check.
    unhealthyThresholdCount : int, default is Undefined, optional
        The number of consecutive health check failures required before considering
        a target unhealthy.
    """


    intervalSeconds?: int

    thresholdCount?: int

    timeoutSeconds?: int

    unhealthyThresholdCount?: int


    check:
        intervalSeconds <= 300 if intervalSeconds not in [None, Undefined]
        intervalSeconds >= 5 if intervalSeconds not in [None, Undefined]
        thresholdCount <= 10 if thresholdCount not in [None, Undefined]
        thresholdCount >= 2 if thresholdCount not in [None, Undefined]
        timeoutSeconds <= 120 if timeoutSeconds not in [None, Undefined]
        timeoutSeconds >= 2 if timeoutSeconds not in [None, Undefined]
        unhealthyThresholdCount <= 10 if unhealthyThresholdCount not in [None, Undefined]
        unhealthyThresholdCount >= 2 if unhealthyThresholdCount not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2AWSClusterSpecSecondaryControlPlaneLoadBalancerIngressRulesItems0:
    r"""
    IngressRule defines an AWS ingress rule for security groups.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, optional
        List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    description : str, default is Undefined, required
        Description provides extended information about the ingress rule.
    fromPort : int, default is Undefined, required
        FromPort is the start of port range.
    ipv6CidrBlocks : [str], default is Undefined, optional
        List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    natGatewaysIPsSource : bool, default is Undefined, optional
        NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
    $protocol : str, default is Undefined, required
        Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
    sourceSecurityGroupIds : [str], default is Undefined, optional
        The security group id to allow access from. Cannot be specified with CidrBlocks.
    sourceSecurityGroupRoles : [str], default is Undefined, optional
        The security group role to allow access from. Cannot be specified with CidrBlocks.
        The field will be combined with source security group IDs if specified.
    toPort : int, default is Undefined, required
        ToPort is the end of port range.
    """


    cidrBlocks?: [str]

    description: str

    fromPort: int

    ipv6CidrBlocks?: [str]

    natGatewaysIPsSource?: bool

    $protocol: "-1" | "4" | "tcp" | "udp" | "icmp" | "58" | "50"

    sourceSecurityGroupIds?: [str]

    sourceSecurityGroupRoles?: [str]

    toPort: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatus:
    r"""
    AWSClusterStatus defines the observed state of AWSCluster.

    Attributes
    ----------
    bastion : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastion, default is Undefined, optional
        bastion
    conditions : [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusConditionsItems0], default is Undefined, optional
        Conditions provide observations of the operational state of a Cluster API resource.
    failureDomains : {str:InfrastructureClusterxK8sIoV1beta2AWSClusterStatusFailureDomainsAnon}, default is Undefined, optional
        FailureDomains is a slice of FailureDomains.
    networkStatus : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatus, default is Undefined, optional
        network status
    ready : bool, default is Undefined, required
        ready
    """


    bastion?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastion

    conditions?: [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusConditionsItems0]

    failureDomains?: {str:InfrastructureClusterxK8sIoV1beta2AWSClusterStatusFailureDomainsAnon}

    networkStatus?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatus

    ready: bool = False


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastion:
    r"""
    Instance describes an AWS instance.

    Attributes
    ----------
    addresses : [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionAddressesItems0], default is Undefined, optional
        Addresses contains the AWS instance associated addresses.
    availabilityZone : str, default is Undefined, optional
        Availability zone of instance
    capacityReservationId : str, default is Undefined, optional
        CapacityReservationID specifies the target Capacity Reservation into which the instance should be launched.
    ebsOptimized : bool, default is Undefined, optional
        Indicates whether the instance is optimized for Amazon EBS I/O.
    enaSupport : bool, default is Undefined, optional
        Specifies whether enhanced networking with ENA is enabled.
    iamProfile : str, default is Undefined, optional
        The name of the IAM instance profile associated with the instance, if applicable.
    id : str, default is Undefined, required
        id
    imageId : str, default is Undefined, optional
        The ID of the AMI used to launch the instance.
    instanceMetadataOptions : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionInstanceMetadataOptions, default is Undefined, optional
        instance metadata options
    instanceState : str, default is Undefined, optional
        The current state of the instance.
    marketType : str, default is Undefined, optional
        MarketType specifies the type of market for the EC2 instance. Valid values include:
        "OnDemand" (default): The instance runs as a standard OnDemand instance.
        "Spot": The instance runs as a Spot instance. When SpotMarketOptions is provided, the marketType defaults to "Spot".
        "CapacityBlock": The instance utilizes pre-purchased compute capacity (capacity blocks) with AWS Capacity Reservations.
         If this value is selected, CapacityReservationID must be specified to identify the target reservation.
        If marketType is not specified and spotMarketOptions is provided, the marketType defaults to "Spot".
    networkInterfaceType : str, default is Undefined, optional
        NetworkInterfaceType is the interface type of the primary network Interface.
    networkInterfaces : [str], default is Undefined, optional
        Specifies ENIs attached to instance
    nonRootVolumes : [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionNonRootVolumesItems0], default is Undefined, optional
        Configuration options for the non root storage volumes.
    placementGroupName : str, default is Undefined, optional
        PlacementGroupName specifies the name of the placement group in which to launch the instance.
    placementGroupPartition : int, default is Undefined, optional
        PlacementGroupPartition is the partition number within the placement group in which to launch the instance.
        This value is only valid if the placement group, referred in `PlacementGroupName`, was created with
        strategy set to partition.
    privateDnsName : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionPrivateDNSName, default is Undefined, optional
        private Dns name
    privateIp : str, default is Undefined, optional
        The private IPv4 address assigned to the instance.
    publicIPOnLaunch : bool, default is Undefined, optional
        PublicIPOnLaunch is the option to associate a public IP on instance launch
    publicIp : str, default is Undefined, optional
        The public IPv4 address assigned to the instance, if applicable.
    rootVolume : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionRootVolume, default is Undefined, optional
        root volume
    securityGroupIds : [str], default is Undefined, optional
        SecurityGroupIDs are one or more security group IDs this instance belongs to.
    spotMarketOptions : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionSpotMarketOptions, default is Undefined, optional
        spot market options
    sshKeyName : str, default is Undefined, optional
        The name of the SSH key pair.
    subnetId : str, default is Undefined, optional
        The ID of the subnet of the instance.
    tags : {str:str}, default is Undefined, optional
        The tags associated with the instance.
    tenancy : str, default is Undefined, optional
        Tenancy indicates if instance should run on shared or single-tenant hardware.
    $type : str, default is Undefined, optional
        The instance type.
    userData : str, default is Undefined, optional
        UserData is the raw data script passed to the instance which is run upon bootstrap.
        This field must not be base64 encoded and should only be used when running a new instance.
    volumeIDs : [str], default is Undefined, optional
        IDs of the instance's volumes
    """


    addresses?: [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionAddressesItems0]

    availabilityZone?: str

    capacityReservationId?: str

    ebsOptimized?: bool

    enaSupport?: bool

    iamProfile?: str

    id: str

    imageId?: str

    instanceMetadataOptions?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionInstanceMetadataOptions

    instanceState?: str

    marketType?: "OnDemand" | "Spot" | "CapacityBlock"

    networkInterfaceType?: str

    networkInterfaces?: [str]

    nonRootVolumes?: [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionNonRootVolumesItems0]

    placementGroupName?: str

    placementGroupPartition?: int

    privateDnsName?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionPrivateDNSName

    privateIp?: str

    publicIPOnLaunch?: bool

    publicIp?: str

    rootVolume?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionRootVolume

    securityGroupIds?: [str]

    spotMarketOptions?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionSpotMarketOptions

    sshKeyName?: str

    subnetId?: str

    tags?: {str:str}

    tenancy?: str

    $type?: str

    userData?: str

    volumeIDs?: [str]


    check:
        placementGroupPartition <= 7 if placementGroupPartition not in [None, Undefined]
        placementGroupPartition >= 1 if placementGroupPartition not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionAddressesItems0:
    r"""
    MachineAddress contains information for the node's address.

    Attributes
    ----------
    address : str, default is Undefined, required
        The machine address.
    $type : str, default is Undefined, required
        Machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
    """


    address: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionInstanceMetadataOptions:
    r"""
    InstanceMetadataOptions is the metadata options for the EC2 instance.

    Attributes
    ----------
    httpEndpoint : str, default is "enabled", optional
        Enables or disables the HTTP metadata endpoint on your instances.

        If you specify a value of disabled, you cannot access your instance metadata.

        Default: enabled
    httpPutResponseHopLimit : int, default is 1, optional
        The desired HTTP PUT response hop limit for instance metadata requests. The
        larger the number, the further instance metadata requests can travel.

        Default: 1
    httpTokens : str, default is "optional", optional
        The state of token usage for your instance metadata requests.

        If the state is optional, you can choose to retrieve instance metadata with
        or without a session token on your request. If you retrieve the IAM role
        credentials without a token, the version 1.0 role credentials are returned.
        If you retrieve the IAM role credentials using a valid session token, the
        version 2.0 role credentials are returned.

        If the state is required, you must send a session token with any instance
        metadata retrieval requests. In this state, retrieving the IAM role credentials
        always returns the version 2.0 credentials; the version 1.0 credentials are
        not available.

        Default: optional
    instanceMetadataTags : str, default is "disabled", optional
        Set to enabled to allow access to instance tags from the instance metadata.
        Set to disabled to turn off access to instance tags from the instance metadata.
        For more information, see Work with instance tags using the instance metadata
        (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).

        Default: disabled
    """


    httpEndpoint?: "enabled" | "disabled" = "enabled"

    httpPutResponseHopLimit?: int = 1

    httpTokens?: "optional" | "required" = "optional"

    instanceMetadataTags?: "enabled" | "disabled" = "disabled"


    check:
        httpPutResponseHopLimit <= 64 if httpPutResponseHopLimit not in [None, Undefined]
        httpPutResponseHopLimit >= 1 if httpPutResponseHopLimit not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionNonRootVolumesItems0:
    r"""
    Volume encapsulates the configuration options for the storage device.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Device name
    encrypted : bool, default is Undefined, optional
        Encrypted is whether the volume should be encrypted or not.
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
        If Encrypted is set and this is omitted, the default AWS key will be used.
        The key must already exist and be accessible by the controller.
    iops : int, default is Undefined, optional
        IOPS is the number of IOPS requested for the disk. Not applicable to all types.
    size : int, default is Undefined, required
        Size specifies size (in Gi) of the storage device.
        Must be greater than the image snapshot size or 8 (whichever is greater).
    throughput : int, default is Undefined, optional
        Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
    $type : str, default is Undefined, optional
        Type is the type of the volume (e.g. gp2, io1, etc...).
    """


    deviceName?: str

    encrypted?: bool

    encryptionKey?: str

    iops?: int

    size: int

    throughput?: int

    $type?: str


    check:
        size >= 8


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionPrivateDNSName:
    r"""
    PrivateDNSName is the options for the instance hostname.

    Attributes
    ----------
    enableResourceNameDnsAAAARecord : bool, default is Undefined, optional
        EnableResourceNameDNSAAAARecord indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        EnableResourceNameDNSARecord indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    hostnameType : str, default is Undefined, optional
        The type of hostname to assign to an instance.
    """


    enableResourceNameDnsAAAARecord?: bool

    enableResourceNameDnsARecord?: bool

    hostnameType?: "ip-name" | "resource-name"


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionRootVolume:
    r"""
    Configuration options for the root storage volume.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Device name
    encrypted : bool, default is Undefined, optional
        Encrypted is whether the volume should be encrypted or not.
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
        If Encrypted is set and this is omitted, the default AWS key will be used.
        The key must already exist and be accessible by the controller.
    iops : int, default is Undefined, optional
        IOPS is the number of IOPS requested for the disk. Not applicable to all types.
    size : int, default is Undefined, required
        Size specifies size (in Gi) of the storage device.
        Must be greater than the image snapshot size or 8 (whichever is greater).
    throughput : int, default is Undefined, optional
        Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
    $type : str, default is Undefined, optional
        Type is the type of the volume (e.g. gp2, io1, etc...).
    """


    deviceName?: str

    encrypted?: bool

    encryptionKey?: str

    iops?: int

    size: int

    throughput?: int

    $type?: str


    check:
        size >= 8


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusBastionSpotMarketOptions:
    r"""
    SpotMarketOptions option for configuring instances to be run using AWS Spot instances.

    Attributes
    ----------
    maxPrice : str, default is Undefined, optional
        MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
    """


    maxPrice?: str


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusFailureDomainsAnon:
    r"""
    FailureDomainSpec is the Schema for Cluster API failure domains.
    It allows controllers to understand how many failure domains a cluster can optionally span across.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        attributes is a free form map of attributes an infrastructure provider might use or require.
    controlPlane : bool, default is Undefined, optional
        controlPlane determines if this failure domain is suitable for use by control plane machines.
    """


    attributes?: {str:str}

    controlPlane?: bool


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatus:
    r"""
    NetworkStatus encapsulates AWS networking resources.

    Attributes
    ----------
    apiServerElb : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElb, default is Undefined, optional
        api server elb
    natGatewaysIPs : [str], default is Undefined, optional
        NatGatewaysIPs contains the public IPs of the NAT Gateways
    secondaryAPIServerELB : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELB, default is Undefined, optional
        secondary API server e l b
    securityGroups : {str:InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecurityGroupsAnon}, default is Undefined, optional
        SecurityGroups is a map from the role/kind of the security group to its unique name, if any.
    """


    apiServerElb?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElb

    natGatewaysIPs?: [str]

    secondaryAPIServerELB?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELB

    securityGroups?: {str:InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecurityGroupsAnon}


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElb:
    r"""
    APIServerELB is the Kubernetes api server load balancer.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the load balancer. Unlike the ClassicLB, ARN is used mostly
        to define and get it.
    attributes : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbAttributes, default is Undefined, optional
        attributes
    availabilityZones : [str], default is Undefined, optional
        AvailabilityZones is an array of availability zones in the VPC attached to the load balancer.
    dnsName : str, default is Undefined, optional
        DNSName is the dns name of the load balancer.
    elbAttributes : {str:str}, default is Undefined, optional
        ELBAttributes defines extra attributes associated with v2 load balancers.
    elbListeners : [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbElbListenersItems0], default is Undefined, optional
        ELBListeners is an array of listeners associated with the load balancer. There must be at least one.
    healthChecks : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbHealthChecks, default is Undefined, optional
        health checks
    listeners : [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbListenersItems0], default is Undefined, optional
        ClassicELBListeners is an array of classic elb listeners associated with the load balancer. There must be at least one.
    loadBalancerType : str, default is Undefined, optional
        LoadBalancerType sets the type for a load balancer. The default type is classic.
    name : str, default is Undefined, optional
        The name of the load balancer. It must be unique within the set of load balancers
        defined in the region. It also serves as identifier.
    scheme : str, default is Undefined, optional
        Scheme is the load balancer scheme, either internet-facing or private.
    securityGroupIds : [str], default is Undefined, optional
        SecurityGroupIDs is an array of security groups assigned to the load balancer.
    subnetIds : [str], default is Undefined, optional
        SubnetIDs is an array of subnets in the VPC attached to the load balancer.
    tags : {str:str}, default is Undefined, optional
        Tags is a map of tags associated with the load balancer.
    """


    arn?: str

    attributes?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbAttributes

    availabilityZones?: [str]

    dnsName?: str

    elbAttributes?: {str:str}

    elbListeners?: [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbElbListenersItems0]

    healthChecks?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbHealthChecks

    listeners?: [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbListenersItems0]

    loadBalancerType?: "classic" | "elb" | "alb" | "nlb"

    name?: str

    scheme?: str

    securityGroupIds?: [str]

    subnetIds?: [str]

    tags?: {str:str}


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbAttributes:
    r"""
    ClassicElbAttributes defines extra attributes associated with the load balancer.

    Attributes
    ----------
    crossZoneLoadBalancing : bool, default is Undefined, optional
        CrossZoneLoadBalancing enables the classic load balancer load balancing.
    idleTimeout : int, default is Undefined, optional
        IdleTimeout is time that the connection is allowed to be idle (no data
        has been sent over the connection) before it is closed by the load balancer.
    """


    crossZoneLoadBalancing?: bool

    idleTimeout?: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbElbListenersItems0:
    r"""
    Listener defines an AWS network load balancer listener.

    Attributes
    ----------
    port : int, default is Undefined, required
        port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    targetGroup : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroup, default is Undefined, required
        target group
    """


    port: int

    $protocol: str

    targetGroup: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroup


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroup:
    r"""
    TargetGroupSpec specifies target group settings for a given listener.
    This is created first, and the ARN is then passed to the listener.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the TargetGroup. Must be unique over the same group of listeners.
    port : int, default is Undefined, required
        Port is the exposed port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    targetGroupHealthCheck : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroupTargetGroupHealthCheck, default is Undefined, optional
        target group health check
    vpcId : str, default is Undefined, required
        vpc Id
    """


    name: str

    port: int

    $protocol: "tcp" | "tls" | "udp" | "TCP" | "TLS" | "UDP"

    targetGroupHealthCheck?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroupTargetGroupHealthCheck

    vpcId: str


    check:
        len(name) <= 32


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroupTargetGroupHealthCheck:
    r"""
    HealthCheck is the elb health check associated with the load balancer.

    Attributes
    ----------
    intervalSeconds : int, default is Undefined, optional
        interval seconds
    path : str, default is Undefined, optional
        path
    port : str, default is Undefined, optional
        port
    $protocol : str, default is Undefined, optional
        protocol
    thresholdCount : int, default is Undefined, optional
        threshold count
    timeoutSeconds : int, default is Undefined, optional
        timeout seconds
    unhealthyThresholdCount : int, default is Undefined, optional
        unhealthy threshold count
    """


    intervalSeconds?: int

    path?: str

    port?: str

    $protocol?: str

    thresholdCount?: int

    timeoutSeconds?: int

    unhealthyThresholdCount?: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbHealthChecks:
    r"""
    HealthCheck is the classic elb health check associated with the load balancer.

    Attributes
    ----------
    healthyThreshold : int, default is Undefined, required
        healthy threshold
    interval : int, default is Undefined, required
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
    target : str, default is Undefined, required
        target
    timeout : int, default is Undefined, required
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
    unhealthyThreshold : int, default is Undefined, required
        unhealthy threshold
    """


    healthyThreshold: int

    interval: int

    target: str

    timeout: int

    unhealthyThreshold: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusAPIServerElbListenersItems0:
    r"""
    ClassicELBListener defines an AWS classic load balancer listener.

    Attributes
    ----------
    instancePort : int, default is Undefined, required
        instance port
    instanceProtocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    port : int, default is Undefined, required
        port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    """


    instancePort: int

    instanceProtocol: str

    port: int

    $protocol: str


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELB:
    r"""
    SecondaryAPIServerELB is the secondary Kubernetes api server load balancer.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the load balancer. Unlike the ClassicLB, ARN is used mostly
        to define and get it.
    attributes : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBAttributes, default is Undefined, optional
        attributes
    availabilityZones : [str], default is Undefined, optional
        AvailabilityZones is an array of availability zones in the VPC attached to the load balancer.
    dnsName : str, default is Undefined, optional
        DNSName is the dns name of the load balancer.
    elbAttributes : {str:str}, default is Undefined, optional
        ELBAttributes defines extra attributes associated with v2 load balancers.
    elbListeners : [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0], default is Undefined, optional
        ELBListeners is an array of listeners associated with the load balancer. There must be at least one.
    healthChecks : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBHealthChecks, default is Undefined, optional
        health checks
    listeners : [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBListenersItems0], default is Undefined, optional
        ClassicELBListeners is an array of classic elb listeners associated with the load balancer. There must be at least one.
    loadBalancerType : str, default is Undefined, optional
        LoadBalancerType sets the type for a load balancer. The default type is classic.
    name : str, default is Undefined, optional
        The name of the load balancer. It must be unique within the set of load balancers
        defined in the region. It also serves as identifier.
    scheme : str, default is Undefined, optional
        Scheme is the load balancer scheme, either internet-facing or private.
    securityGroupIds : [str], default is Undefined, optional
        SecurityGroupIDs is an array of security groups assigned to the load balancer.
    subnetIds : [str], default is Undefined, optional
        SubnetIDs is an array of subnets in the VPC attached to the load balancer.
    tags : {str:str}, default is Undefined, optional
        Tags is a map of tags associated with the load balancer.
    """


    arn?: str

    attributes?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBAttributes

    availabilityZones?: [str]

    dnsName?: str

    elbAttributes?: {str:str}

    elbListeners?: [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0]

    healthChecks?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBHealthChecks

    listeners?: [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBListenersItems0]

    loadBalancerType?: "classic" | "elb" | "alb" | "nlb"

    name?: str

    scheme?: str

    securityGroupIds?: [str]

    subnetIds?: [str]

    tags?: {str:str}


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBAttributes:
    r"""
    ClassicElbAttributes defines extra attributes associated with the load balancer.

    Attributes
    ----------
    crossZoneLoadBalancing : bool, default is Undefined, optional
        CrossZoneLoadBalancing enables the classic load balancer load balancing.
    idleTimeout : int, default is Undefined, optional
        IdleTimeout is time that the connection is allowed to be idle (no data
        has been sent over the connection) before it is closed by the load balancer.
    """


    crossZoneLoadBalancing?: bool

    idleTimeout?: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0:
    r"""
    Listener defines an AWS network load balancer listener.

    Attributes
    ----------
    port : int, default is Undefined, required
        port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    targetGroup : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroup, default is Undefined, required
        target group
    """


    port: int

    $protocol: str

    targetGroup: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroup


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroup:
    r"""
    TargetGroupSpec specifies target group settings for a given listener.
    This is created first, and the ARN is then passed to the listener.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the TargetGroup. Must be unique over the same group of listeners.
    port : int, default is Undefined, required
        Port is the exposed port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    targetGroupHealthCheck : InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroupTargetGroupHealthCheck, default is Undefined, optional
        target group health check
    vpcId : str, default is Undefined, required
        vpc Id
    """


    name: str

    port: int

    $protocol: "tcp" | "tls" | "udp" | "TCP" | "TLS" | "UDP"

    targetGroupHealthCheck?: InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroupTargetGroupHealthCheck

    vpcId: str


    check:
        len(name) <= 32


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroupTargetGroupHealthCheck:
    r"""
    HealthCheck is the elb health check associated with the load balancer.

    Attributes
    ----------
    intervalSeconds : int, default is Undefined, optional
        interval seconds
    path : str, default is Undefined, optional
        path
    port : str, default is Undefined, optional
        port
    $protocol : str, default is Undefined, optional
        protocol
    thresholdCount : int, default is Undefined, optional
        threshold count
    timeoutSeconds : int, default is Undefined, optional
        timeout seconds
    unhealthyThresholdCount : int, default is Undefined, optional
        unhealthy threshold count
    """


    intervalSeconds?: int

    path?: str

    port?: str

    $protocol?: str

    thresholdCount?: int

    timeoutSeconds?: int

    unhealthyThresholdCount?: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBHealthChecks:
    r"""
    HealthCheck is the classic elb health check associated with the load balancer.

    Attributes
    ----------
    healthyThreshold : int, default is Undefined, required
        healthy threshold
    interval : int, default is Undefined, required
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
    target : str, default is Undefined, required
        target
    timeout : int, default is Undefined, required
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
    unhealthyThreshold : int, default is Undefined, required
        unhealthy threshold
    """


    healthyThreshold: int

    interval: int

    target: str

    timeout: int

    unhealthyThreshold: int


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecondaryAPIServerELBListenersItems0:
    r"""
    ClassicELBListener defines an AWS classic load balancer listener.

    Attributes
    ----------
    instancePort : int, default is Undefined, required
        instance port
    instanceProtocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    port : int, default is Undefined, required
        port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    """


    instancePort: int

    instanceProtocol: str

    port: int

    $protocol: str


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecurityGroupsAnon:
    r"""
    SecurityGroup defines an AWS security group.

    Attributes
    ----------
    id : str, default is Undefined, required
        ID is a unique identifier.
    ingressRule : [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecurityGroupsAnonIngressRuleItems0], default is Undefined, optional
        IngressRules is the inbound rules associated with the security group.
    name : str, default is Undefined, required
        Name is the security group name.
    tags : {str:str}, default is Undefined, optional
        Tags is a map of tags associated with the security group.
    """


    id: str

    ingressRule?: [InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecurityGroupsAnonIngressRuleItems0]

    name: str

    tags?: {str:str}


schema InfrastructureClusterxK8sIoV1beta2AWSClusterStatusNetworkStatusSecurityGroupsAnonIngressRuleItems0:
    r"""
    IngressRule defines an AWS ingress rule for security groups.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, optional
        List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    description : str, default is Undefined, required
        Description provides extended information about the ingress rule.
    fromPort : int, default is Undefined, required
        FromPort is the start of port range.
    ipv6CidrBlocks : [str], default is Undefined, optional
        List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    natGatewaysIPsSource : bool, default is Undefined, optional
        NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
    $protocol : str, default is Undefined, required
        Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
    sourceSecurityGroupIds : [str], default is Undefined, optional
        The security group id to allow access from. Cannot be specified with CidrBlocks.
    sourceSecurityGroupRoles : [str], default is Undefined, optional
        The security group role to allow access from. Cannot be specified with CidrBlocks.
        The field will be combined with source security group IDs if specified.
    toPort : int, default is Undefined, required
        ToPort is the end of port range.
    """


    cidrBlocks?: [str]

    description: str

    fromPort: int

    ipv6CidrBlocks?: [str]

    natGatewaysIPsSource?: bool

    $protocol: "-1" | "4" | "tcp" | "udp" | "icmp" | "58" | "50"

    sourceSecurityGroupIds?: [str]

    sourceSecurityGroupRoles?: [str]

    toPort: int


