"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ROSAControlPlane:
    r"""
    ROSAControlPlane is the Schema for the ROSAControlPlanes API.

    Attributes
    ----------
    apiVersion : str, default is "controlplane.cluster.x-k8s.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ROSAControlPlane", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpec, default is Undefined, optional
        spec
    status : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneStatus, default is Undefined, optional
        status
    """


    apiVersion: "controlplane.cluster.x-k8s.io/v1beta2" = "controlplane.cluster.x-k8s.io/v1beta2"

    kind: "ROSAControlPlane" = "ROSAControlPlane"

    metadata?: v1.ObjectMeta

    spec?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpec

    status?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneStatus


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpec:
    r"""
    RosaControlPlaneSpec defines the desired state of ROSAControlPlane.

    Attributes
    ----------
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags are user-defined tags to be added on the AWS resources associated with the control plane.
    auditLogRoleARN : str, default is Undefined, optional
        AuditLogRoleARN defines the role that is used to forward audit logs to AWS CloudWatch.
        If not set, audit log forwarding is disabled.
    availabilityZones : [str], default is Undefined, required
        AvailabilityZones describe AWS AvailabilityZones of the worker nodes.
        should match the AvailabilityZones of the provided Subnets.
        a machinepool will be created for each availabilityZone.
    billingAccount : str, default is Undefined, optional
        BillingAccount is an optional AWS account to use for billing the subscription fees for ROSA HCP clusters.
        The cost of running each ROSA HCP cluster will be billed to the infrastructure account in which the cluster
        is running.
    channelGroup : str, default is "stable", required
        OpenShift version channel group, default is stable.
    clusterRegistryConfig : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecClusterRegistryConfig, default is Undefined, optional
        cluster registry config
    controlPlaneEndpoint : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecControlPlaneEndpoint, default is Undefined, optional
        control plane endpoint
    credentialsSecretRef : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecCredentialsSecretRef, default is Undefined, optional
        credentials secret ref
    defaultMachinePoolSpec : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecDefaultMachinePoolSpec, default is Undefined, optional
        default machine pool spec
    domainPrefix : str, default is Undefined, optional
        DomainPrefix is an optional prefix added to the cluster's domain name. It will be used
        when generating a sub-domain for the cluster on openshiftapps domain. It must be valid DNS-1035 label
        consisting of lower case alphanumeric characters or '-', start with an alphabetic character
        end with an alphanumeric character and have a max length of 15 characters.
    enableExternalAuthProviders : bool, default is Undefined, optional
        EnableExternalAuthProviders enables external authentication configuration for the cluster.
    endpointAccess : str, default is "Public", optional
        EndpointAccess specifies the publishing scope of cluster endpoints. The
        default is Public.
    etcdEncryptionKMSARN : str, default is Undefined, optional
        EtcdEncryptionKMSARN is the ARN of the KMS key used to encrypt etcd. The key itself needs to be
        created out-of-band by the user and tagged with `red-hat:true`.
    externalAuthProviders : [ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0], default is Undefined, optional
        ExternalAuthProviders are external OIDC identity providers that can issue tokens for this cluster.
        Can only be set if "enableExternalAuthProviders" is set to "True".

        At most one provider can be configured.
    identityRef : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecIdentityRef, default is Undefined, optional
        identity ref
    installerRoleARN : str, default is Undefined, required
        InstallerRoleARN is an AWS IAM role that OpenShift Cluster Manager will assume to create the cluster..
    network : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecNetwork, default is Undefined, optional
        network
    oidcID : str, default is Undefined, required
        The ID of the internal OpenID Connect Provider.
    provisionShardID : str, default is Undefined, optional
        ProvisionShardID defines the shard where ROSA hosted control plane components will be hosted.
    region : str, default is Undefined, required
        The AWS Region the cluster lives in.
    rolesRef : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecRolesRef, default is Undefined, required
        roles ref
    rosaClusterName : str, default is Undefined, required
        Cluster name must be valid DNS-1035 label, so it must consist of lower case alphanumeric
        characters or '-', start with an alphabetic character, end with an alphanumeric character
        and have a max length of 54 characters.
    subnets : [str], default is Undefined, required
        The Subnet IDs to use when installing the cluster.
        SubnetIDs should come in pairs; two per availability zone, one private and one public.
    supportRoleARN : str, default is Undefined, required
        SupportRoleARN is an AWS IAM role used by Red Hat SREs to enable
        access to the cluster account in order to provide support.
    version : str, default is Undefined, required
        OpenShift semantic version, for example "4.14.5".
    versionGate : str, default is "WaitForAcknowledge", required
        VersionGate requires acknowledgment when upgrading ROSA-HCP y-stream versions (e.g., from 4.15 to 4.16).
        Default is WaitForAcknowledge.
        WaitForAcknowledge: If acknowledgment is required, the upgrade will not proceed until VersionGate is set to Acknowledge or AlwaysAcknowledge.
        Acknowledge: If acknowledgment is required, apply it for the upgrade. After upgrade is done set the version gate to WaitForAcknowledge.
        AlwaysAcknowledge: If acknowledgment is required, apply it and proceed with the upgrade.
    workerRoleARN : str, default is Undefined, required
        WorkerRoleARN is an AWS IAM role that will be attached to worker instances.
    """


    additionalTags?: {str:str}

    auditLogRoleARN?: str

    availabilityZones: [str]

    billingAccount?: str

    channelGroup: "stable" | "candidate" | "nightly" = "stable"

    clusterRegistryConfig?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecClusterRegistryConfig

    controlPlaneEndpoint?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecControlPlaneEndpoint

    credentialsSecretRef?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecCredentialsSecretRef

    defaultMachinePoolSpec?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecDefaultMachinePoolSpec

    domainPrefix?: str

    enableExternalAuthProviders?: bool = False

    endpointAccess?: "Public" | "Private" = "Public"

    etcdEncryptionKMSARN?: str

    externalAuthProviders?: [ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0]

    identityRef?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecIdentityRef

    installerRoleARN: str

    network?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecNetwork

    oidcID: str

    provisionShardID?: str

    region: str

    rolesRef: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecRolesRef

    rosaClusterName: str

    subnets: [str]

    supportRoleARN: str

    version: str

    versionGate: "Acknowledge" | "WaitForAcknowledge" | "AlwaysAcknowledge" = "WaitForAcknowledge"

    workerRoleARN: str


    check:
        len(domainPrefix) <= 15 if domainPrefix
        _regex_match(str(domainPrefix), r"^[a-z]([-a-z0-9]*[a-z0-9])?$") if domainPrefix
        len(externalAuthProviders) <= 1 if externalAuthProviders
        len(rosaClusterName) <= 54
        _regex_match(str(rosaClusterName), r"^[a-z]([-a-z0-9]*[a-z0-9])?$")


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecClusterRegistryConfig:
    r"""
    ClusterRegistryConfig represents registry config used with the cluster.

    Attributes
    ----------
    additionalTrustedCAs : {str:str}, default is Undefined, optional
        AdditionalTrustedCAs containing the registry hostname as the key, and the PEM-encoded certificate as the value,
        for each additional registry CA to trust.
    allowedRegistriesForImport : [ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecClusterRegistryConfigAllowedRegistriesForImportItems0], default is Undefined, optional
        AllowedRegistriesForImport limits the container image registries that normal users may import
        images from. Set this list to the registries that you trust to contain valid Docker
        images and that you want applications to be able to import from.
    registrySources : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecClusterRegistryConfigRegistrySources, default is Undefined, optional
        registry sources
    """


    additionalTrustedCAs?: {str:str}

    allowedRegistriesForImport?: [ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecClusterRegistryConfigAllowedRegistriesForImportItems0]

    registrySources?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecClusterRegistryConfigRegistrySources


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecClusterRegistryConfigAllowedRegistriesForImportItems0:
    r"""
    RegistryLocation contains a location of the registry specified by the registry domain name.

    Attributes
    ----------
    domainName : str, default is Undefined, optional
        domainName specifies a domain name for the registry. The domain name might include wildcards, like '*' or '??'.
        In case the registry use non-standard (80 or 443) port, the port should be included in the domain name as well.
    insecure : bool, default is Undefined, optional
        insecure indicates whether the registry is secure (https) or insecure (http), default is secured.
    """


    domainName?: str

    insecure?: bool = False


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecClusterRegistryConfigRegistrySources:
    r"""
    RegistrySources contains configuration that determines how the container runtime
    should treat individual registries when accessing images. It does not contain configuration
    for the internal cluster registry. AllowedRegistries, BlockedRegistries are mutually exclusive.

    Attributes
    ----------
    allowedRegistries : [str], default is Undefined, optional
        AllowedRegistries are the registries for which image pull and push actions are allowed.
        To specify all subdomains, add the asterisk (*) wildcard character as a prefix to the domain name,
        For example, *.example.com.
        You can specify an individual repository within a registry, For example: reg1.io/myrepo/myapp:latest.
        All other registries are blocked.
    blockedRegistries : [str], default is Undefined, optional
        BlockedRegistries are the registries for which image pull and push actions are denied.
        To specify all subdomains, add the asterisk (*) wildcard character as a prefix to the domain name,
        For example, *.example.com.
        You can specify an individual repository within a registry, For example: reg1.io/myrepo/myapp:latest.
        All other registries are allowed.
    insecureRegistries : [str], default is Undefined, optional
        InsecureRegistries are registries which do not have a valid TLS certificate or only support HTTP connections.
        To specify all subdomains, add the asterisk (*) wildcard character as a prefix to the domain name,
        For example, *.example.com.
        You can specify an individual repository within a registry, For example: reg1.io/myrepo/myapp:latest.
    """


    allowedRegistries?: [str]

    blockedRegistries?: [str]

    insecureRegistries?: [str]


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecControlPlaneEndpoint:
    r"""
    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.

    Attributes
    ----------
    host : str, default is Undefined, required
        The hostname on which the API server is serving.
    port : int, default is Undefined, required
        The port on which the API server is serving.
    """


    host: str

    port: int


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecCredentialsSecretRef:
    r"""
    CredentialsSecretRef references a secret with necessary credentials to connect to the OCM API.
    The secret should contain the following data keys:
    - ocmToken: eyJhbGciOiJIUzI1NiIsI....
    - ocmApiUrl: Optional, defaults to 'https://api.openshift.com'

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """


    name?: str = ""


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecDefaultMachinePoolSpec:
    r"""
    DefaultMachinePoolSpec defines the configuration for the default machinepool(s) provisioned as part of the cluster creation.
    One MachinePool will be created with this configuration per AvailabilityZone. Those default machinepools are required for openshift cluster operators
    to work properly.
    As these machinepool not created using ROSAMachinePool CR, they will not be visible/managed by ROSA CAPI provider.
    `rosa list machinepools -c <rosaClusterName>` can be used to view those machinepools.

    This field will be removed in the future once the current limitation is resolved.

    Attributes
    ----------
    autoscaling : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecDefaultMachinePoolSpecAutoscaling, default is Undefined, optional
        autoscaling
    instanceType : str, default is Undefined, optional
        The instance type to use, for example `r5.xlarge`. Instance type ref; https://aws.amazon.com/ec2/instance-types/
    volumeSize : int, default is Undefined, optional
        VolumeSize set the disk volume size for the default workers machine pool in Gib. The default is 300 GiB.
    """


    autoscaling?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecDefaultMachinePoolSpecAutoscaling

    instanceType?: str

    volumeSize?: int


    check:
        volumeSize <= 16384 if volumeSize not in [None, Undefined]
        volumeSize >= 75 if volumeSize not in [None, Undefined]


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecDefaultMachinePoolSpecAutoscaling:
    r"""
    Autoscaling specifies auto scaling behaviour for the default MachinePool. Autoscaling min/max value
    must be equal or multiple of the availability zones count.

    Attributes
    ----------
    maxReplicas : int, default is Undefined, optional
        max replicas
    minReplicas : int, default is Undefined, optional
        min replicas
    """


    maxReplicas?: int

    minReplicas?: int


    check:
        maxReplicas >= 1 if maxReplicas not in [None, Undefined]
        minReplicas >= 1 if minReplicas not in [None, Undefined]


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0:
    r"""
    ExternalAuthProvider is an external OIDC identity provider that can issue tokens for this cluster

    Attributes
    ----------
    claimMappings : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimMappings, default is Undefined, optional
        claim mappings
    claimValidationRules : [ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimValidationRulesItems0], default is Undefined, optional
        ClaimValidationRules are rules that are applied to validate token claims to authenticate users.
    issuer : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0Issuer, default is Undefined, required
        issuer
    name : str, default is Undefined, required
        Name of the OIDC provider
    oidcClients : [ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0OidcClientsItems0], default is Undefined, optional
        OIDCClients contains configuration for the platform's clients that
        need to request tokens from the issuer
    """


    claimMappings?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimMappings

    claimValidationRules?: [ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimValidationRulesItems0]

    issuer: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0Issuer

    name: str

    oidcClients?: [ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0OidcClientsItems0]


    check:
        len(name) >= 1
        len(oidcClients) <= 20 if oidcClients


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimMappings:
    r"""
    ClaimMappings describes rules on how to transform information from an
    ID token into a cluster identity

    Attributes
    ----------
    groups : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimMappingsGroups, default is Undefined, optional
        groups
    username : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimMappingsUsername, default is Undefined, optional
        username
    """


    groups?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimMappingsGroups

    username?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimMappingsUsername


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimMappingsGroups:
    r"""
    Groups is a name of the claim that should be used to construct
    groups for the cluster identity.
    The referenced claim must use array of strings values.

    Attributes
    ----------
    claim : str, default is Undefined, required
        Claim is a JWT token claim to be used in the mapping
    prefix : str, default is Undefined, optional
        Prefix is a string to prefix the value from the token in the result of the
        claim mapping.

        By default, no prefixing occurs.

        Example: if `prefix` is set to "myoidc:"" and the `claim` in JWT contains
        an array of strings "a", "b" and  "c", the mapping will result in an
        array of string "myoidc:a", "myoidc:b" and "myoidc:c".
    """


    claim: str

    prefix?: str


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimMappingsUsername:
    r"""
    Username is a name of the claim that should be used to construct
    usernames for the cluster identity.

    Default value: "sub"

    Attributes
    ----------
    claim : str, default is Undefined, required
        Claim is a JWT token claim to be used in the mapping
    prefix : str, default is Undefined, optional
        Prefix is prepended to claim to prevent clashes with existing names.
    prefixPolicy : str, default is Undefined, optional
        PrefixPolicy specifies how a prefix should apply.

        By default, claims other than `email` will be prefixed with the issuer URL to
        prevent naming clashes with other plugins.

        Set to "NoPrefix" to disable prefixing.

        Example:
            (1) `prefix` is set to "myoidc:" and `claim` is set to "username".
                If the JWT claim `username` contains value `userA`, the resulting
                mapped value will be "myoidc:userA".
            (2) `prefix` is set to "myoidc:" and `claim` is set to "email". If the
                JWT `email` claim contains value "userA@myoidc.tld", the resulting
                mapped value will be "myoidc:userA@myoidc.tld".
            (3) `prefix` is unset, `issuerURL` is set to `https://myoidc.tld`,
                the JWT claims include "username":"userA" and "email":"userA@myoidc.tld",
                and `claim` is set to:
                (a) "username": the mapped value will be "https://myoidc.tld#userA"
                (b) "email": the mapped value will be "userA@myoidc.tld"
    """


    claim: str

    prefix?: str

    prefixPolicy?: "" | "NoPrefix" | "Prefix"


    check:
        len(prefix) >= 1 if prefix


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimValidationRulesItems0:
    r"""
    TokenClaimValidationRule validates token claims to authenticate users.

    Attributes
    ----------
    requiredClaim : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimValidationRulesItems0RequiredClaim, default is Undefined, required
        required claim
    $type : str, default is "RequiredClaim", required
        Type sets the type of the validation rule
    """


    requiredClaim: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimValidationRulesItems0RequiredClaim

    $type: "RequiredClaim" = "RequiredClaim"


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0ClaimValidationRulesItems0RequiredClaim:
    r"""
    RequiredClaim allows configuring a required claim name and its expected value

    Attributes
    ----------
    claim : str, default is Undefined, required
        Claim is a name of a required claim. Only claims with string values are
        supported.
    requiredValue : str, default is Undefined, required
        RequiredValue is the required value for the claim.
    """


    claim: str

    requiredValue: str


    check:
        len(claim) >= 1
        len(requiredValue) >= 1


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0Issuer:
    r"""
    Issuer describes attributes of the OIDC token issuer

    Attributes
    ----------
    audiences : [str], default is Undefined, required
        Audiences is an array of audiences that the token was issued for.
        Valid tokens must include at least one of these values in their
        "aud" claim.
        Must be set to exactly one value.
    issuerCertificateAuthority : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0IssuerIssuerCertificateAuthority, default is Undefined, optional
        issuer certificate authority
    issuerURL : str, default is Undefined, required
        URL is the serving URL of the token issuer.
        Must use the https:// scheme.
    """


    audiences: [str]

    issuerCertificateAuthority?: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0IssuerIssuerCertificateAuthority

    issuerURL: str


    check:
        len(audiences) >= 1
        len(audiences) <= 10
        all audiences in audiences { len(audiences) >= 1 if audiences not in [None, Undefined] } if audiences
        _regex_match(str(issuerURL), r"^https:\/\/[^\s]")


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0IssuerIssuerCertificateAuthority:
    r"""
    CertificateAuthority is a reference to a config map in the
    configuration namespace. The .data of the configMap must contain
    the "ca-bundle.crt" key.
    If unset, system trust is used instead.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the metadata.name of the referenced object.
    """


    name: str


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0OidcClientsItems0:
    r"""
    OIDCClientConfig contains configuration for the platform's client that
    need to request tokens from the issuer.

    Attributes
    ----------
    clientID : str, default is Undefined, required
        ClientID is the identifier of the OIDC client from the OIDC provider
    clientSecret : ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0OidcClientsItems0ClientSecret, default is Undefined, required
        client secret
    componentName : str, default is Undefined, required
        ComponentName is the name of the component that is supposed to consume this
        client configuration
    componentNamespace : str, default is Undefined, required
        ComponentNamespace is the namespace of the component that is supposed to consume this
        client configuration
    extraScopes : [str], default is Undefined, optional
        ExtraScopes is an optional set of scopes to request tokens with.
    """


    clientID: str

    clientSecret: ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0OidcClientsItems0ClientSecret

    componentName: str

    componentNamespace: str

    extraScopes?: [str]


    check:
        len(clientID) >= 1
        len(componentName) <= 256
        len(componentName) >= 1
        len(componentNamespace) <= 63
        len(componentNamespace) >= 1


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecExternalAuthProvidersItems0OidcClientsItems0ClientSecret:
    r"""
    ClientSecret refers to a secret that
    contains the client secret in the `clientSecret` key of the `.data` field

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the metadata.name of the referenced object.
    """


    name: str


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecIdentityRef:
    r"""
    IdentityRef is a reference to an identity to be used when reconciling the managed control plane.
    If no identity is specified, the default identity for this controller will be used.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the identity.
    name : str, default is Undefined, required
        Name of the identity.
    """


    kind: "AWSClusterControllerIdentity" | "AWSClusterRoleIdentity" | "AWSClusterStaticIdentity"

    name: str


    check:
        len(name) >= 1


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecNetwork:
    r"""
    Network config for the ROSA HCP cluster.

    Attributes
    ----------
    hostPrefix : int, default is 23, optional
        Network host prefix which is defaulted to `23` if not specified.
    machineCIDR : str, default is Undefined, optional
        IP addresses block used by OpenShift while installing the cluster, for example "10.0.0.0/16".
    networkType : str, default is "OVNKubernetes", optional
        The CNI network type default is OVNKubernetes.
    podCIDR : str, default is Undefined, optional
        IP address block from which to assign pod IP addresses, for example `10.128.0.0/14`.
    serviceCIDR : str, default is Undefined, optional
        IP address block from which to assign service IP addresses, for example `172.30.0.0/16`.
    """


    hostPrefix?: int = 23

    machineCIDR?: str

    networkType?: "OVNKubernetes" | "Other" = "OVNKubernetes"

    podCIDR?: str

    serviceCIDR?: str


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneSpecRolesRef:
    r"""
    AWS IAM roles used to perform credential requests by the openshift operators.

    Attributes
    ----------
    controlPlaneOperatorARN : str, default is Undefined, required
        ControlPlaneOperatorARN  is an ARN value referencing a role appropriate for the Control Plane Operator.

        The following is an example of a valid policy document:

        {
        	"Version": "2012-10-17",
        	"Statement": [
        		{
        			"Effect": "Allow",
        			"Action": [
        				"ec2:CreateVpcEndpoint",
        				"ec2:DescribeVpcEndpoints",
        				"ec2:ModifyVpcEndpoint",
        				"ec2:DeleteVpcEndpoints",
        				"ec2:CreateTags",
        				"route53:ListHostedZones",
        				"ec2:CreateSecurityGroup",
        				"ec2:AuthorizeSecurityGroupIngress",
        				"ec2:AuthorizeSecurityGroupEgress",
        				"ec2:DeleteSecurityGroup",
        				"ec2:RevokeSecurityGroupIngress",
        				"ec2:RevokeSecurityGroupEgress",
        				"ec2:DescribeSecurityGroups",
        				"ec2:DescribeVpcs",
        			],
        			"Resource": "*"
        		},
        		{
        			"Effect": "Allow",
        			"Action": [
        				"route53:ChangeResourceRecordSets",
        				"route53:ListResourceRecordSets"
        			],
        			"Resource": "arn:aws:route53:::%s"
        		}
        	]
        }
    imageRegistryARN : str, default is Undefined, required
        ImageRegistryARN is an ARN value referencing a role appropriate for the Image Registry Operator.

        The following is an example of a valid policy document:

        {
        	"Version": "2012-10-17",
        	"Statement": [
        		{
        			"Effect": "Allow",
        			"Action": [
        				"s3:CreateBucket",
        				"s3:DeleteBucket",
        				"s3:PutBucketTagging",
        				"s3:GetBucketTagging",
        				"s3:PutBucketPublicAccessBlock",
        				"s3:GetBucketPublicAccessBlock",
        				"s3:PutEncryptionConfiguration",
        				"s3:GetEncryptionConfiguration",
        				"s3:PutLifecycleConfiguration",
        				"s3:GetLifecycleConfiguration",
        				"s3:GetBucketLocation",
        				"s3:ListBucket",
        				"s3:GetObject",
        				"s3:PutObject",
        				"s3:DeleteObject",
        				"s3:ListBucketMultipartUploads",
        				"s3:AbortMultipartUpload",
        				"s3:ListMultipartUploadParts"
        			],
        			"Resource": "*"
        		}
        	]
        }
    ingressARN : str, default is Undefined, required
        The referenced role must have a trust relationship that allows it to be assumed via web identity.
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
        Example:
        {
        		"Version": "2012-10-17",
        		"Statement": [
        			{
        				"Effect": "Allow",
        				"Principal": {
        					"Federated": "{{ .ProviderARN }}"
        				},
        					"Action": "sts:AssumeRoleWithWebIdentity",
        				"Condition": {
        					"StringEquals": {
        						"{{ .ProviderName }}:sub": {{ .ServiceAccounts }}
        					}
        				}
        			}
        		]
        	}

        IngressARN is an ARN value referencing a role appropriate for the Ingress Operator.

        The following is an example of a valid policy document:

        {
        	"Version": "2012-10-17",
        	"Statement": [
        		{
        			"Effect": "Allow",
        			"Action": [
        				"elasticloadbalancing:DescribeLoadBalancers",
        				"tag:GetResources",
        				"route53:ListHostedZones"
        			],
        			"Resource": "*"
        		},
        		{
        			"Effect": "Allow",
        			"Action": [
        				"route53:ChangeResourceRecordSets"
        			],
        			"Resource": [
        				"arn:aws:route53:::PUBLIC_ZONE_ID",
        				"arn:aws:route53:::PRIVATE_ZONE_ID"
        			]
        		}
        	]
        }
    kmsProviderARN : str, default is Undefined, required
        kms provider a r n
    kubeCloudControllerARN : str, default is Undefined, required
        KubeCloudControllerARN is an ARN value referencing a role appropriate for the KCM/KCC.
        Source: https://cloud-provider-aws.sigs.k8s.io/prerequisites/#iam-policies

        The following is an example of a valid policy document:

         {
         "Version": "2012-10-17",
         "Statement": [
           {
             "Action": [
               "autoscaling:DescribeAutoScalingGroups",
               "autoscaling:DescribeLaunchConfigurations",
               "autoscaling:DescribeTags",
               "ec2:DescribeAvailabilityZones",
               "ec2:DescribeInstances",
               "ec2:DescribeImages",
               "ec2:DescribeRegions",
               "ec2:DescribeRouteTables",
               "ec2:DescribeSecurityGroups",
               "ec2:DescribeSubnets",
               "ec2:DescribeVolumes",
               "ec2:CreateSecurityGroup",
               "ec2:CreateTags",
               "ec2:CreateVolume",
               "ec2:ModifyInstanceAttribute",
               "ec2:ModifyVolume",
               "ec2:AttachVolume",
               "ec2:AuthorizeSecurityGroupIngress",
               "ec2:CreateRoute",
               "ec2:DeleteRoute",
               "ec2:DeleteSecurityGroup",
               "ec2:DeleteVolume",
               "ec2:DetachVolume",
               "ec2:RevokeSecurityGroupIngress",
               "ec2:DescribeVpcs",
               "elasticloadbalancing:AddTags",
               "elasticloadbalancing:AttachLoadBalancerToSubnets",
               "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
               "elasticloadbalancing:CreateLoadBalancer",
               "elasticloadbalancing:CreateLoadBalancerPolicy",
               "elasticloadbalancing:CreateLoadBalancerListeners",
               "elasticloadbalancing:ConfigureHealthCheck",
               "elasticloadbalancing:DeleteLoadBalancer",
               "elasticloadbalancing:DeleteLoadBalancerListeners",
               "elasticloadbalancing:DescribeLoadBalancers",
               "elasticloadbalancing:DescribeLoadBalancerAttributes",
               "elasticloadbalancing:DetachLoadBalancerFromSubnets",
               "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
               "elasticloadbalancing:ModifyLoadBalancerAttributes",
               "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
               "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
               "elasticloadbalancing:AddTags",
               "elasticloadbalancing:CreateListener",
               "elasticloadbalancing:CreateTargetGroup",
               "elasticloadbalancing:DeleteListener",
               "elasticloadbalancing:DeleteTargetGroup",
               "elasticloadbalancing:DeregisterTargets",
               "elasticloadbalancing:DescribeListeners",
               "elasticloadbalancing:DescribeLoadBalancerPolicies",
               "elasticloadbalancing:DescribeTargetGroups",
               "elasticloadbalancing:DescribeTargetHealth",
               "elasticloadbalancing:ModifyListener",
               "elasticloadbalancing:ModifyTargetGroup",
               "elasticloadbalancing:RegisterTargets",
               "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
               "iam:CreateServiceLinkedRole",
               "kms:DescribeKey"
             ],
             "Resource": [
               "*"
             ],
             "Effect": "Allow"
           }
         ]
        }
    networkARN : str, default is Undefined, required
        NetworkARN is an ARN value referencing a role appropriate for the Network Operator.

        The following is an example of a valid policy document:

        {
        	"Version": "2012-10-17",
        	"Statement": [
        		{
        			"Effect": "Allow",
        			"Action": [
        				"ec2:DescribeInstances",
               "ec2:DescribeInstanceStatus",
               "ec2:DescribeInstanceTypes",
               "ec2:UnassignPrivateIpAddresses",
               "ec2:AssignPrivateIpAddresses",
               "ec2:UnassignIpv6Addresses",
               "ec2:AssignIpv6Addresses",
               "ec2:DescribeSubnets",
               "ec2:DescribeNetworkInterfaces"
        			],
        			"Resource": "*"
        		}
        	]
        }
    nodePoolManagementARN : str, default is Undefined, required
        NodePoolManagementARN is an ARN value referencing a role appropriate for the CAPI Controller.

        The following is an example of a valid policy document:

        {
          "Version": "2012-10-17",
         "Statement": [
           {
             "Action": [
               "ec2:AssociateRouteTable",
               "ec2:AttachInternetGateway",
               "ec2:AuthorizeSecurityGroupIngress",
               "ec2:CreateInternetGateway",
               "ec2:CreateNatGateway",
               "ec2:CreateRoute",
               "ec2:CreateRouteTable",
               "ec2:CreateSecurityGroup",
               "ec2:CreateSubnet",
               "ec2:CreateTags",
               "ec2:DeleteInternetGateway",
               "ec2:DeleteNatGateway",
               "ec2:DeleteRouteTable",
               "ec2:DeleteSecurityGroup",
               "ec2:DeleteSubnet",
               "ec2:DeleteTags",
               "ec2:DescribeAccountAttributes",
               "ec2:DescribeAddresses",
               "ec2:DescribeAvailabilityZones",
               "ec2:DescribeImages",
               "ec2:DescribeInstances",
               "ec2:DescribeInternetGateways",
               "ec2:DescribeNatGateways",
               "ec2:DescribeNetworkInterfaces",
               "ec2:DescribeNetworkInterfaceAttribute",
               "ec2:DescribeRouteTables",
               "ec2:DescribeSecurityGroups",
               "ec2:DescribeSubnets",
               "ec2:DescribeVpcs",
               "ec2:DescribeVpcAttribute",
               "ec2:DescribeVolumes",
               "ec2:DetachInternetGateway",
               "ec2:DisassociateRouteTable",
               "ec2:DisassociateAddress",
               "ec2:ModifyInstanceAttribute",
               "ec2:ModifyNetworkInterfaceAttribute",
               "ec2:ModifySubnetAttribute",
               "ec2:RevokeSecurityGroupIngress",
               "ec2:RunInstances",
               "ec2:TerminateInstances",
               "tag:GetResources",
               "ec2:CreateLaunchTemplate",
               "ec2:CreateLaunchTemplateVersion",
               "ec2:DescribeLaunchTemplates",
               "ec2:DescribeLaunchTemplateVersions",
               "ec2:DeleteLaunchTemplate",
               "ec2:DeleteLaunchTemplateVersions"
             ],
             "Resource": [
               "*"
             ],
             "Effect": "Allow"
           },
           {
             "Condition": {
               "StringLike": {
                 "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
               }
             },
             "Action": [
               "iam:CreateServiceLinkedRole"
             ],
             "Resource": [
               "arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing"
             ],
             "Effect": "Allow"
           },
           {
             "Action": [
               "iam:PassRole"
             ],
             "Resource": [
               "arn:*:iam::*:role/*-worker-role"
             ],
             "Effect": "Allow"
           },
        	  {
        	  	"Effect": "Allow",
        	  	"Action": [
        	  		"kms:Decrypt",
        	  		"kms:ReEncrypt",
        	  		"kms:GenerateDataKeyWithoutPlainText",
        	  		"kms:DescribeKey"
        	  	],
        	  	"Resource": "*"
        	  },
        	  {
        	  	"Effect": "Allow",
        	  	"Action": [
        	  		"kms:CreateGrant"
        	  	],
        	  	"Resource": "*",
        	  	"Condition": {
        	  		"Bool": {
        	  			"kms:GrantIsForAWSResource": true
        	  		}
        	  	}
        	  }
         ]
        }
    storageARN : str, default is Undefined, required
        StorageARN is an ARN value referencing a role appropriate for the Storage Operator.

        The following is an example of a valid policy document:

        {
        	"Version": "2012-10-17",
        	"Statement": [
        		{
        			"Effect": "Allow",
        			"Action": [
        				"ec2:AttachVolume",
        				"ec2:CreateSnapshot",
        				"ec2:CreateTags",
        				"ec2:CreateVolume",
        				"ec2:DeleteSnapshot",
        				"ec2:DeleteTags",
        				"ec2:DeleteVolume",
        				"ec2:DescribeInstances",
        				"ec2:DescribeSnapshots",
        				"ec2:DescribeTags",
        				"ec2:DescribeVolumes",
        				"ec2:DescribeVolumesModifications",
        				"ec2:DetachVolume",
        				"ec2:ModifyVolume"
        			],
        			"Resource": "*"
        		}
        	]
        }
    """


    controlPlaneOperatorARN: str

    imageRegistryARN: str

    ingressARN: str

    kmsProviderARN: str

    kubeCloudControllerARN: str

    networkARN: str

    nodePoolManagementARN: str

    storageARN: str


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneStatus:
    r"""
    RosaControlPlaneStatus defines the observed state of ROSAControlPlane.

    Attributes
    ----------
    availableUpgrades : [str], default is Undefined, optional
        Available upgrades for the ROSA hosted control plane.
    conditions : [ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneStatusConditionsItems0], default is Undefined, optional
        Conditions specifies the conditions for the managed control plane
    consoleURL : str, default is Undefined, optional
        ConsoleURL is the url for the openshift console.
    externalManagedControlPlane : bool, default is True, optional
        ExternalManagedControlPlane indicates to cluster-api that the control plane
        is managed by an external service such as AKS, EKS, GKE, etc.
    failureMessage : str, default is Undefined, optional
        FailureMessage will be set in the event that there is a terminal problem
        reconciling the state and will be set to a descriptive error message.

        This field should not be set for transitive errors that a controller
        faces that are expected to be fixed automatically over
        time (like service outages), but instead indicate that something is
        fundamentally wrong with the spec or the configuration of
        the controller, and that manual intervention is required.
    id : str, default is Undefined, optional
        ID is the cluster ID given by ROSA.
    initialized : bool, default is Undefined, optional
        Initialized denotes whether or not the control plane has the
        uploaded kubernetes config-map.
    oidcEndpointURL : str, default is Undefined, optional
        OIDCEndpointURL is the endpoint url for the managed OIDC provider.
    ready : bool, default is Undefined, required
        Ready denotes that the ROSAControlPlane API Server is ready to receive requests.
    """


    availableUpgrades?: [str]

    conditions?: [ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneStatusConditionsItems0]

    consoleURL?: str

    externalManagedControlPlane?: bool = True

    failureMessage?: str

    id?: str

    initialized?: bool

    oidcEndpointURL?: str

    ready: bool = False


schema ControlplaneClusterxK8sIoV1beta2ROSAControlPlaneStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


