"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AWSClusterRoleIdentity:
    r"""
    AWSClusterRoleIdentity is the Schema for the awsclusterroleidentities API
    It is used to assume a role using the provided sourceRef.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AWSClusterRoleIdentity", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpec, default is Undefined, optional
        spec
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "AWSClusterRoleIdentity" = "AWSClusterRoleIdentity"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpec


schema InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpec:
    r"""
    Spec for this AWSClusterRoleIdentity.

    Attributes
    ----------
    allowedNamespaces : InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecAllowedNamespaces, default is Undefined, optional
        allowed namespaces
    durationSeconds : int, default is Undefined, optional
        The duration, in seconds, of the role session before it is renewed.
    externalID : str, default is Undefined, optional
        A unique identifier that might be required when you assume a role in another account.
        If the administrator of the account to which the role belongs provided you with an
        external ID, then provide that value in the ExternalId parameter. This value can be
        any string, such as a passphrase or account number. A cross-account role is usually
        set up to trust everyone in an account. Therefore, the administrator of the trusting
        account might send an external ID to the administrator of the trusted account. That
        way, only someone with the ID can assume the role, rather than everyone in the
        account. For more information about the external ID, see How to Use an External ID
        When Granting Access to Your AWS Resources to a Third Party in the IAM User Guide.
    inlinePolicy : str, default is Undefined, optional
        An IAM policy as a JSON-encoded string that you want to use as an inline session policy.
    policyARNs : [str], default is Undefined, optional
        The Amazon Resource Names (ARNs) of the IAM managed policies that you want
        to use as managed session policies.
        The policies must exist in the same account as the role.
    roleARN : str, default is Undefined, required
        The Amazon Resource Name (ARN) of the role to assume.
    sessionName : str, default is Undefined, optional
        An identifier for the assumed role session
    sourceIdentityRef : InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecSourceIdentityRef, default is Undefined, optional
        source identity ref
    """


    allowedNamespaces?: InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecAllowedNamespaces

    durationSeconds?: int

    externalID?: str

    inlinePolicy?: str

    policyARNs?: [str]

    roleARN: str

    sessionName?: str

    sourceIdentityRef?: InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecSourceIdentityRef


    check:
        durationSeconds <= 43200 if durationSeconds not in [None, Undefined]
        durationSeconds >= 900 if durationSeconds not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecAllowedNamespaces:
    r"""
    AllowedNamespaces is used to identify which namespaces are allowed to use the identity from.
    Namespaces can be selected either using an array of namespaces or with label selector.
    An empty allowedNamespaces object indicates that AWSClusters can use this identity from any namespace.
    If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
    A namespace should be either in the NamespaceList or match with Selector to use the identity.

    Attributes
    ----------
    list : [str], default is Undefined, optional
        An nil or empty list indicates that AWSClusters cannot use the identity from any namespace.
    selector : InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecAllowedNamespacesSelector, default is Undefined, optional
        selector
    """


    list?: [str]

    selector?: InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecAllowedNamespacesSelector


schema InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecAllowedNamespacesSelector:
    r"""
    An empty selector indicates that AWSClusters cannot use this
    AWSClusterIdentity from any namespace.

    Attributes
    ----------
    matchExpressions : [InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InfrastructureClusterxK8sIoV1beta1AWSClusterRoleIdentitySpecSourceIdentityRef:
    r"""
    SourceIdentityRef is a reference to another identity which will be chained to do
    role assumption. All identity types are accepted.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the identity.
    name : str, default is Undefined, required
        Name of the identity.
    """


    kind: "AWSClusterControllerIdentity" | "AWSClusterRoleIdentity" | "AWSClusterStaticIdentity"

    name: str


    check:
        len(name) >= 1


