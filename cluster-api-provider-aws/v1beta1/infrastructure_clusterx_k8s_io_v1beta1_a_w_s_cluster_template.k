"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema AWSClusterTemplate:
    r"""
    AWSClusterTemplate is the schema for Amazon EC2 based Kubernetes Cluster Templates.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AWSClusterTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpec, default is Undefined, optional
        spec
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "AWSClusterTemplate" = "AWSClusterTemplate"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpec


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpec:
    r"""
    AWSClusterTemplateSpec defines the desired state of AWSClusterTemplate.

    Attributes
    ----------
    template : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplate, default is Undefined, required
        template
    """


    template: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplate


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplate:
    r"""
    AWSClusterTemplateResource defines the desired state of AWSClusterTemplate.

    Attributes
    ----------
    metadata : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateMetadata, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateMetadata

    spec: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpec


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateMetadata:
    r"""
    Standard object's metadata.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: http://kubernetes.io/docs/user-guide/labels
    """


    annotations?: {str:str}

    labels?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpec:
    r"""
    AWSClusterSpec defines the desired state of an EC2-based Kubernetes cluster.

    Attributes
    ----------
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the
        ones added by default.
    bastion : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecBastion, default is Undefined, optional
        bastion
    controlPlaneEndpoint : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecControlPlaneEndpoint, default is Undefined, optional
        control plane endpoint
    controlPlaneLoadBalancer : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecControlPlaneLoadBalancer, default is Undefined, optional
        control plane load balancer
    identityRef : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecIdentityRef, default is Undefined, optional
        identity ref
    imageLookupBaseOS : str, default is Undefined, optional
        ImageLookupBaseOS is the name of the base operating system used to look
        up machine images when a machine does not specify an AMI. When set, this
        will be used for all cluster machines unless a machine specifies a
        different ImageLookupBaseOS.
    imageLookupFormat : str, default is Undefined, optional
        ImageLookupFormat is the AMI naming format to look up machine images when
        a machine does not specify an AMI. When set, this will be used for all
        cluster machines unless a machine specifies a different ImageLookupOrg.
        Supports substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base
        OS and kubernetes version, respectively. The BaseOS will be the value in
        ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
        defined by the packages produced by kubernetes/release without v as a
        prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
        image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
        searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
        Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
        also: https://golang.org/pkg/text/template/
    imageLookupOrg : str, default is Undefined, optional
        ImageLookupOrg is the AWS Organization ID to look up machine images when a
        machine does not specify an AMI. When set, this will be used for all
        cluster machines unless a machine specifies a different ImageLookupOrg.
    network : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetwork, default is Undefined, optional
        network
    region : str, default is Undefined, optional
        The AWS Region the cluster lives in.
    s3Bucket : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecS3Bucket, default is Undefined, optional
        s3 bucket
    sshKeyName : str, default is Undefined, optional
        SSHKeyName is the name of the ssh key to attach to the bastion host. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
    """


    additionalTags?: {str:str}

    bastion?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecBastion

    controlPlaneEndpoint?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecControlPlaneEndpoint

    controlPlaneLoadBalancer?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecControlPlaneLoadBalancer

    identityRef?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecIdentityRef

    imageLookupBaseOS?: str

    imageLookupFormat?: str

    imageLookupOrg?: str

    network?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetwork

    region?: str

    s3Bucket?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecS3Bucket

    sshKeyName?: str


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecBastion:
    r"""
    Bastion contains options to configure the bastion host.

    Attributes
    ----------
    allowedCIDRBlocks : [str], default is Undefined, optional
        AllowedCIDRBlocks is a list of CIDR blocks allowed to access the bastion host.
        They are set as ingress rules for the Bastion host's Security Group (defaults to 0.0.0.0/0).
    ami : str, default is Undefined, optional
        AMI will use the specified AMI to boot the bastion. If not specified,
        the AMI will default to one picked out in public space.
    disableIngressRules : bool, default is Undefined, optional
        DisableIngressRules will ensure there are no Ingress rules in the bastion host's security group.
        Requires AllowedCIDRBlocks to be empty.
    enabled : bool, default is Undefined, optional
        Enabled allows this provider to create a bastion host instance
        with a public ip to access the VPC private network.
    instanceType : str, default is Undefined, optional
        InstanceType will use the specified instance type for the bastion. If not specified,
        Cluster API Provider AWS will use t3.micro for all regions except us-east-1, where t2.micro
        will be the default.
    """


    allowedCIDRBlocks?: [str]

    ami?: str

    disableIngressRules?: bool

    enabled?: bool

    instanceType?: str


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecControlPlaneEndpoint:
    r"""
    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.

    Attributes
    ----------
    host : str, default is Undefined, required
        The hostname on which the API server is serving.
    port : int, default is Undefined, required
        The port on which the API server is serving.
    """


    host: str

    port: int


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecControlPlaneLoadBalancer:
    r"""
    ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.

    Attributes
    ----------
    additionalSecurityGroups : [str], default is Undefined, optional
        AdditionalSecurityGroups sets the security groups used by the load balancer. Expected to be security group IDs
        This is optional - if not provided new security groups will be created for the load balancer
    crossZoneLoadBalancing : bool, default is Undefined, optional
        CrossZoneLoadBalancing enables the classic ELB cross availability zone balancing.

        With cross-zone load balancing, each load balancer node for your Classic Load Balancer
        distributes requests evenly across the registered instances in all enabled Availability Zones.
        If cross-zone load balancing is disabled, each load balancer node distributes requests evenly across
        the registered instances in its Availability Zone only.

        Defaults to false.
    healthCheckProtocol : str, default is Undefined, optional
        HealthCheckProtocol sets the protocol type for classic ELB health check target
        default value is ClassicELBProtocolSSL
    name : str, default is Undefined, optional
        Name sets the name of the classic ELB load balancer. As per AWS, the name must be unique
        within your set of load balancers for the region, must have a maximum of 32 characters, must
        contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen. Once
        set, the value cannot be changed.
    scheme : str, default is "internet-facing", optional
        Scheme sets the scheme of the load balancer (defaults to internet-facing)
    subnets : [str], default is Undefined, optional
        Subnets sets the subnets that should be applied to the control plane load balancer (defaults to discovered subnets for managed VPCs or an empty set for unmanaged VPCs)
    """


    additionalSecurityGroups?: [str]

    crossZoneLoadBalancing?: bool

    healthCheckProtocol?: str

    name?: str

    scheme?: "internet-facing" | "internal" = "internet-facing"

    subnets?: [str]


    check:
        len(name) <= 32 if name
        _regex_match(str(name), r"^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$") if name


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecIdentityRef:
    r"""
    IdentityRef is a reference to an identity to be used when reconciling the managed control plane.
    If no identity is specified, the default identity for this controller will be used.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the identity.
    name : str, default is Undefined, required
        Name of the identity.
    """


    kind: "AWSClusterControllerIdentity" | "AWSClusterRoleIdentity" | "AWSClusterStaticIdentity"

    name: str


    check:
        len(name) >= 1


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetwork:
    r"""
    NetworkSpec encapsulates all things related to AWS network.

    Attributes
    ----------
    cni : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkCni, default is Undefined, optional
        cni
    securityGroupOverrides : {str:str}, default is Undefined, optional
        SecurityGroupOverrides is an optional set of security groups to use for cluster instances
        This is optional - if not provided new security groups will be created for the cluster
    subnets : [InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkSubnetsItems0], default is Undefined, optional
        Subnets configuration.
    vpc : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkVpc, default is Undefined, optional
        vpc
    """


    cni?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkCni

    securityGroupOverrides?: {str:str}

    subnets?: [InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkSubnetsItems0]

    vpc?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkVpc


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkCni:
    r"""
    CNI configuration

    Attributes
    ----------
    cniIngressRules : [InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkCniCniIngressRulesItems0], default is Undefined, optional
        CNIIngressRules specify rules to apply to control plane and worker node security groups.
        The source for the rule will be set to control plane and worker security group IDs.
    """


    cniIngressRules?: [InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkCniCniIngressRulesItems0]


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkCniCniIngressRulesItems0:
    r"""
    CNIIngressRule defines an AWS ingress rule for CNI requirements.

    Attributes
    ----------
    description : str, default is Undefined, required
        description
    fromPort : int, default is Undefined, required
        from port
    $protocol : str, default is Undefined, required
        SecurityGroupProtocol defines the protocol type for a security group rule.
    toPort : int, default is Undefined, required
        to port
    """


    description: str

    fromPort: int

    $protocol: str

    toPort: int


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkSubnetsItems0:
    r"""
    SubnetSpec configures an AWS Subnet.

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        AvailabilityZone defines the availability zone to use for this subnet in the cluster's region.
    cidrBlock : str, default is Undefined, optional
        CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
    id : str, default is Undefined, optional
        ID defines a unique identifier to reference this resource.
    ipv6CidrBlock : str, default is Undefined, optional
        IPv6CidrBlock is the IPv6 CIDR block to be used when the provider creates a managed VPC.
        A subnet can have an IPv4 and an IPv6 address.
        IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
    isIpv6 : bool, default is Undefined, optional
        IsIPv6 defines the subnet as an IPv6 subnet. A subnet is IPv6 when it is associated with a VPC that has IPv6 enabled.
        IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
    isPublic : bool, default is Undefined, optional
        IsPublic defines the subnet as a public subnet. A subnet is public when it is associated with a route table that has a route to an internet gateway.
    natGatewayId : str, default is Undefined, optional
        NatGatewayID is the NAT gateway id associated with the subnet.
        Ignored unless the subnet is managed by the provider, in which case this is set on the public subnet where the NAT gateway resides. It is then used to determine routes for private subnets in the same AZ as the public subnet.
    routeTableId : str, default is Undefined, optional
        RouteTableID is the routing table id associated with the subnet.
    tags : {str:str}, default is Undefined, optional
        Tags is a collection of tags describing the resource.
    """


    availabilityZone?: str

    cidrBlock?: str

    id?: str

    ipv6CidrBlock?: str

    isIpv6?: bool

    isPublic?: bool

    natGatewayId?: str

    routeTableId?: str

    tags?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkVpc:
    r"""
    VPC configuration.

    Attributes
    ----------
    availabilityZoneSelection : str, default is "Ordered", optional
        AvailabilityZoneSelection specifies how AZs should be selected if there are more AZs
        in a region than specified by AvailabilityZoneUsageLimit. There are 2 selection schemes:
        Ordered - selects based on alphabetical order
        Random - selects AZs randomly in a region
        Defaults to Ordered
    availabilityZoneUsageLimit : int, default is 3, optional
        AvailabilityZoneUsageLimit specifies the maximum number of availability zones (AZ) that
        should be used in a region when automatically creating subnets. If a region has more
        than this number of AZs then this number of AZs will be picked randomly when creating
        default subnets. Defaults to 3
    cidrBlock : str, default is Undefined, optional
        CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
        Defaults to 10.0.0.0/16.
    id : str, default is Undefined, optional
        ID is the vpc-id of the VPC this provider should use to create resources.
    internetGatewayId : str, default is Undefined, optional
        InternetGatewayID is the id of the internet gateway associated with the VPC.
    ipv6 : InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkVpcIPV6, default is Undefined, optional
        ipv6
    tags : {str:str}, default is Undefined, optional
        Tags is a collection of tags describing the resource.
    """


    availabilityZoneSelection?: "Ordered" | "Random" = "Ordered"

    availabilityZoneUsageLimit?: int = 3

    cidrBlock?: str

    id?: str

    internetGatewayId?: str

    ipv6?: InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkVpcIPV6

    tags?: {str:str}


    check:
        availabilityZoneUsageLimit >= 1 if availabilityZoneUsageLimit not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecNetworkVpcIPV6:
    r"""
    IPv6 contains ipv6 specific settings for the network. Supported only in managed clusters.
    This field cannot be set on AWSCluster object.

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        CidrBlock is the CIDR block provided by Amazon when VPC has enabled IPv6.
    egressOnlyInternetGatewayId : str, default is Undefined, optional
        EgressOnlyInternetGatewayID is the id of the egress only internet gateway associated with an IPv6 enabled VPC.
    poolId : str, default is Undefined, optional
        PoolID is the IP pool which must be defined in case of BYO IP is defined.
    """


    cidrBlock?: str

    egressOnlyInternetGatewayId?: str

    poolId?: str


schema InfrastructureClusterxK8sIoV1beta1AWSClusterTemplateSpecTemplateSpecS3Bucket:
    r"""
    S3Bucket contains options to configure a supporting S3 bucket for this
    cluster - currently used for nodes requiring Ignition
    (https://coreos.github.io/ignition/) for bootstrapping (requires
    BootstrapFormatIgnition feature flag to be enabled).

    Attributes
    ----------
    controlPlaneIAMInstanceProfile : str, default is Undefined, required
        ControlPlaneIAMInstanceProfile is a name of the IAMInstanceProfile, which will be allowed
        to read control-plane node bootstrap data from S3 Bucket.
    name : str, default is Undefined, required
        Name defines name of S3 Bucket to be created.
    nodesIAMInstanceProfiles : [str], default is Undefined, required
        NodesIAMInstanceProfiles is a list of IAM instance profiles, which will be allowed to read
        worker nodes bootstrap data from S3 Bucket.
    """


    controlPlaneIAMInstanceProfile: str

    name: str

    nodesIAMInstanceProfiles: [str]


    check:
        len(name) <= 63
        len(name) >= 3
        _regex_match(str(name), r"^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$")


