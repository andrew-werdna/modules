"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema AWSManagedControlPlane:
    r"""
    AWSManagedControlPlane is the schema for the Amazon EKS Managed Control Plane API.

    Attributes
    ----------
    apiVersion : str, default is "controlplane.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AWSManagedControlPlane", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpec, default is Undefined, optional
        spec
    status : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatus, default is Undefined, optional
        status
    """


    apiVersion: "controlplane.cluster.x-k8s.io/v1beta1" = "controlplane.cluster.x-k8s.io/v1beta1"

    kind: "AWSManagedControlPlane" = "AWSManagedControlPlane"

    metadata?: v1.ObjectMeta

    spec?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpec

    status?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatus


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpec:
    r"""
    AWSManagedControlPlaneSpec defines the desired state of an Amazon EKS Cluster.

    Attributes
    ----------
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the
        ones added by default.
    addons : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecAddonsItems0], default is Undefined, optional
        Addons defines the EKS addons to enable with the EKS cluster.
    associateOIDCProvider : bool, default is Undefined, optional
        AssociateOIDCProvider can be enabled to automatically create an identity
        provider for the controller for use with IAM roles for service accounts
    bastion : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecBastion, default is Undefined, optional
        bastion
    controlPlaneEndpoint : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecControlPlaneEndpoint, default is Undefined, optional
        control plane endpoint
    disableVPCCNI : bool, default is Undefined, optional
        DisableVPCCNI indicates that the Amazon VPC CNI should be disabled. With EKS clusters the
        Amazon VPC CNI is automatically installed into the cluster. For clusters where you want
        to use an alternate CNI this option provides a way to specify that the Amazon VPC CNI
        should be deleted. You cannot set this to true if you are using the
        Amazon VPC CNI addon.
    eksClusterName : str, default is Undefined, optional
        EKSClusterName allows you to specify the name of the EKS cluster in
        AWS. If you don't specify a name then a default name will be created
        based on the namespace and name of the managed control plane.
    encryptionConfig : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecEncryptionConfig, default is Undefined, optional
        encryption config
    endpointAccess : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecEndpointAccess, default is Undefined, optional
        endpoint access
    iamAuthenticatorConfig : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIamAuthenticatorConfig, default is Undefined, optional
        iam authenticator config
    identityRef : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIdentityRef, default is Undefined, optional
        identity ref
    imageLookupBaseOS : str, default is Undefined, optional
        ImageLookupBaseOS is the name of the base operating system used to look
        up machine images when a machine does not specify an AMI. When set, this
        will be used for all cluster machines unless a machine specifies a
        different ImageLookupBaseOS.
    imageLookupFormat : str, default is Undefined, optional
        ImageLookupFormat is the AMI naming format to look up machine images when
        a machine does not specify an AMI. When set, this will be used for all
        cluster machines unless a machine specifies a different ImageLookupOrg.
        Supports substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base
        OS and kubernetes version, respectively. The BaseOS will be the value in
        ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
        defined by the packages produced by kubernetes/release without v as a
        prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
        image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
        searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
        Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
        also: https://golang.org/pkg/text/template/
    imageLookupOrg : str, default is Undefined, optional
        ImageLookupOrg is the AWS Organization ID to look up machine images when a
        machine does not specify an AMI. When set, this will be used for all
        cluster machines unless a machine specifies a different ImageLookupOrg.
    kubeProxy : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecKubeProxy, default is Undefined, optional
        kube proxy
    logging : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecLogging, default is Undefined, optional
        logging
    network : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetwork, default is Undefined, optional
        network
    oidcIdentityProviderConfig : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecOidcIdentityProviderConfig, default is Undefined, optional
        oidc identity provider config
    region : str, default is Undefined, optional
        The AWS Region the cluster lives in.
    roleAdditionalPolicies : [str], default is Undefined, optional
        RoleAdditionalPolicies allows you to attach additional polices to
        the control plane role. You must enable the EKSAllowAddRoles
        feature flag to incorporate these into the created role.
    roleName : str, default is Undefined, optional
        RoleName specifies the name of IAM role that gives EKS
        permission to make API calls. If the role is pre-existing
        we will treat it as unmanaged and not delete it on
        deletion. If the EKSEnableIAM feature flag is true
        and no name is supplied then a role is created.
    secondaryCidrBlock : str, default is Undefined, optional
        SecondaryCidrBlock is the additional CIDR range to use for pod IPs.
        Must be within the 100.64.0.0/10 or 198.19.0.0/16 range.
    sshKeyName : str, default is Undefined, optional
        SSHKeyName is the name of the ssh key to attach to the bastion host. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
    tokenMethod : str, default is "iam-authenticator", optional
        TokenMethod is used to specify the method for obtaining a client token for communicating with EKS
        iam-authenticator - obtains a client token using iam-authentictor
        aws-cli - obtains a client token using the AWS CLI
        Defaults to iam-authenticator
    version : str, default is Undefined, optional
        Version defines the desired Kubernetes version. If no version number
        is supplied then the latest version of Kubernetes that EKS supports
        will be used.
    vpcCni : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCni, default is Undefined, optional
        vpc cni
    """


    additionalTags?: {str:str}

    addons?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecAddonsItems0]

    associateOIDCProvider?: bool = False

    bastion?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecBastion

    controlPlaneEndpoint?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecControlPlaneEndpoint

    disableVPCCNI?: bool = False

    eksClusterName?: str

    encryptionConfig?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecEncryptionConfig

    endpointAccess?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecEndpointAccess

    iamAuthenticatorConfig?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIamAuthenticatorConfig

    identityRef?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIdentityRef

    imageLookupBaseOS?: str

    imageLookupFormat?: str

    imageLookupOrg?: str

    kubeProxy?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecKubeProxy

    logging?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecLogging

    network?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetwork

    oidcIdentityProviderConfig?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecOidcIdentityProviderConfig

    region?: str

    roleAdditionalPolicies?: [str]

    roleName?: str

    secondaryCidrBlock?: str

    sshKeyName?: str

    tokenMethod?: "iam-authenticator" | "aws-cli" = "iam-authenticator"

    version?: str

    vpcCni?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCni


    check:
        len(roleName) >= 2 if roleName
        len(version) >= 2 if version
        _regex_match(str(version), r"^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.?(\.0|[1-9][0-9]*)?$") if version


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecAddonsItems0:
    r"""
    Addon represents a EKS addon.

    Attributes
    ----------
    configuration : str, default is Undefined, optional
        Configuration of the EKS addon
    conflictResolution : str, default is "none", optional
        ConflictResolution is used to declare what should happen if there
        are parameter conflicts. Defaults to none
    name : str, default is Undefined, required
        Name is the name of the addon
    serviceAccountRoleARN : str, default is Undefined, optional
        ServiceAccountRoleArn is the ARN of an IAM role to bind to the addons service account
    version : str, default is Undefined, required
        Version is the version of the addon to use
    """


    configuration?: str

    conflictResolution?: "overwrite" | "none" = "none"

    name: str

    serviceAccountRoleARN?: str

    version: str


    check:
        len(name) >= 2


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecBastion:
    r"""
    Bastion contains options to configure the bastion host.

    Attributes
    ----------
    allowedCIDRBlocks : [str], default is Undefined, optional
        AllowedCIDRBlocks is a list of CIDR blocks allowed to access the bastion host.
        They are set as ingress rules for the Bastion host's Security Group (defaults to 0.0.0.0/0).
    ami : str, default is Undefined, optional
        AMI will use the specified AMI to boot the bastion. If not specified,
        the AMI will default to one picked out in public space.
    disableIngressRules : bool, default is Undefined, optional
        DisableIngressRules will ensure there are no Ingress rules in the bastion host's security group.
        Requires AllowedCIDRBlocks to be empty.
    enabled : bool, default is Undefined, optional
        Enabled allows this provider to create a bastion host instance
        with a public ip to access the VPC private network.
    instanceType : str, default is Undefined, optional
        InstanceType will use the specified instance type for the bastion. If not specified,
        Cluster API Provider AWS will use t3.micro for all regions except us-east-1, where t2.micro
        will be the default.
    """


    allowedCIDRBlocks?: [str]

    ami?: str

    disableIngressRules?: bool

    enabled?: bool

    instanceType?: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecControlPlaneEndpoint:
    r"""
    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.

    Attributes
    ----------
    host : str, default is Undefined, required
        The hostname on which the API server is serving.
    port : int, default is Undefined, required
        The port on which the API server is serving.
    """


    host: str

    port: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecEncryptionConfig:
    r"""
    EncryptionConfig specifies the encryption configuration for the cluster

    Attributes
    ----------
    provider : str, default is Undefined, optional
        Provider specifies the ARN or alias of the CMK (in AWS KMS)
    resources : [str], default is Undefined, optional
        Resources specifies the resources to be encrypted
    """


    provider?: str

    resources?: [str]


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecEndpointAccess:
    r"""
    Endpoints specifies access to this cluster's control plane endpoints

    Attributes
    ----------
    private : bool, default is Undefined, optional
        Private points VPC-internal control plane access to the private endpoint
    public : bool, default is Undefined, optional
        Public controls whether control plane endpoints are publicly accessible
    publicCIDRs : [str], default is Undefined, optional
        PublicCIDRs specifies which blocks can access the public endpoint
    """


    private?: bool

    public?: bool

    publicCIDRs?: [str]


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIamAuthenticatorConfig:
    r"""
    IAMAuthenticatorConfig allows the specification of any additional user or role mappings
    for use when generating the aws-iam-authenticator configuration. If this is nil the
    default configuration is still generated for the cluster.

    Attributes
    ----------
    mapRoles : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIamAuthenticatorConfigMapRolesItems0], default is Undefined, optional
        RoleMappings is a list of role mappings
    mapUsers : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIamAuthenticatorConfigMapUsersItems0], default is Undefined, optional
        UserMappings is a list of user mappings
    """


    mapRoles?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIamAuthenticatorConfigMapRolesItems0]

    mapUsers?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIamAuthenticatorConfigMapUsersItems0]


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIamAuthenticatorConfigMapRolesItems0:
    r"""
    RoleMapping represents a mapping from a IAM role to Kubernetes users and groups.

    Attributes
    ----------
    groups : [str], default is Undefined, required
        Groups is a list of kubernetes RBAC groups
    rolearn : str, default is Undefined, required
        RoleARN is the AWS ARN for the role to map
    username : str, default is Undefined, required
        UserName is a kubernetes RBAC user subject
    """


    groups: [str]

    rolearn: str

    username: str


    check:
        len(rolearn) >= 31


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIamAuthenticatorConfigMapUsersItems0:
    r"""
    UserMapping represents a mapping from an IAM user to Kubernetes users and groups.

    Attributes
    ----------
    groups : [str], default is Undefined, required
        Groups is a list of kubernetes RBAC groups
    userarn : str, default is Undefined, required
        UserARN is the AWS ARN for the user to map
    username : str, default is Undefined, required
        UserName is a kubernetes RBAC user subject
    """


    groups: [str]

    userarn: str

    username: str


    check:
        len(userarn) >= 31


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecIdentityRef:
    r"""
    IdentityRef is a reference to an identity to be used when reconciling the managed control plane.
    If no identity is specified, the default identity for this controller will be used.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the identity.
    name : str, default is Undefined, required
        Name of the identity.
    """


    kind: "AWSClusterControllerIdentity" | "AWSClusterRoleIdentity" | "AWSClusterStaticIdentity"

    name: str


    check:
        len(name) >= 1


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecKubeProxy:
    r"""
    KubeProxy defines managed attributes of the kube-proxy daemonset

    Attributes
    ----------
    disable : bool, default is Undefined, optional
        Disable set to true indicates that kube-proxy should be disabled. With EKS clusters
        kube-proxy is automatically installed into the cluster. For clusters where you want
        to use kube-proxy functionality that is provided with an alternate CNI, this option
        provides a way to specify that the kube-proxy daemonset should be deleted. You cannot
        set this to true if you are using the Amazon kube-proxy addon.
    """


    disable?: bool = False


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecLogging:
    r"""
    Logging specifies which EKS Cluster logs should be enabled. Entries for
    each of the enabled logs will be sent to CloudWatch

    Attributes
    ----------
    apiServer : bool, default is Undefined, required
        APIServer indicates if the Kubernetes API Server log (kube-apiserver) shoulkd be enabled
    audit : bool, default is Undefined, required
        Audit indicates if the Kubernetes API audit log should be enabled
    authenticator : bool, default is Undefined, required
        Authenticator indicates if the iam authenticator log should be enabled
    controllerManager : bool, default is Undefined, required
        ControllerManager indicates if the controller manager (kube-controller-manager) log should be enabled
    scheduler : bool, default is Undefined, required
        Scheduler indicates if the Kubernetes scheduler (kube-scheduler) log should be enabled
    """


    apiServer: bool = False

    audit: bool = False

    authenticator: bool = False

    controllerManager: bool = False

    scheduler: bool = False


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetwork:
    r"""
    NetworkSpec encapsulates all things related to AWS network.

    Attributes
    ----------
    additionalControlPlaneIngressRules : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkAdditionalControlPlaneIngressRulesItems0], default is Undefined, optional
        AdditionalControlPlaneIngressRules is an optional set of ingress rules to add to the control plane
    cni : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkCni, default is Undefined, optional
        cni
    nodePortIngressRuleCidrBlocks : [str], default is Undefined, optional
        NodePortIngressRuleCidrBlocks is an optional set of CIDR blocks to allow traffic to nodes' NodePort services.
        If none are specified here, all IPs are allowed to connect.
    securityGroupOverrides : {str:str}, default is Undefined, optional
        SecurityGroupOverrides is an optional set of security groups to use for cluster instances
        This is optional - if not provided new security groups will be created for the cluster
    subnets : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkSubnetsItems0], default is Undefined, optional
        Subnets configuration.
    vpc : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpc, default is Undefined, optional
        vpc
    """


    additionalControlPlaneIngressRules?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkAdditionalControlPlaneIngressRulesItems0]

    cni?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkCni

    nodePortIngressRuleCidrBlocks?: [str]

    securityGroupOverrides?: {str:str}

    subnets?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkSubnetsItems0]

    vpc?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpc


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkAdditionalControlPlaneIngressRulesItems0:
    r"""
    IngressRule defines an AWS ingress rule for security groups.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, optional
        List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    description : str, default is Undefined, required
        Description provides extended information about the ingress rule.
    fromPort : int, default is Undefined, required
        FromPort is the start of port range.
    ipv6CidrBlocks : [str], default is Undefined, optional
        List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    natGatewaysIPsSource : bool, default is Undefined, optional
        NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
    $protocol : str, default is Undefined, required
        Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
    sourceSecurityGroupIds : [str], default is Undefined, optional
        The security group id to allow access from. Cannot be specified with CidrBlocks.
    sourceSecurityGroupRoles : [str], default is Undefined, optional
        The security group role to allow access from. Cannot be specified with CidrBlocks.
        The field will be combined with source security group IDs if specified.
    toPort : int, default is Undefined, required
        ToPort is the end of port range.
    """


    cidrBlocks?: [str]

    description: str

    fromPort: int

    ipv6CidrBlocks?: [str]

    natGatewaysIPsSource?: bool

    $protocol: "-1" | "4" | "tcp" | "udp" | "icmp" | "58" | "50"

    sourceSecurityGroupIds?: [str]

    sourceSecurityGroupRoles?: [str]

    toPort: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkCni:
    r"""
    CNI configuration

    Attributes
    ----------
    cniIngressRules : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkCniCniIngressRulesItems0], default is Undefined, optional
        CNIIngressRules specify rules to apply to control plane and worker node security groups.
        The source for the rule will be set to control plane and worker security group IDs.
    """


    cniIngressRules?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkCniCniIngressRulesItems0]


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkCniCniIngressRulesItems0:
    r"""
    CNIIngressRule defines an AWS ingress rule for CNI requirements.

    Attributes
    ----------
    description : str, default is Undefined, required
        description
    fromPort : int, default is Undefined, required
        from port
    $protocol : str, default is Undefined, required
        SecurityGroupProtocol defines the protocol type for a security group rule.
    toPort : int, default is Undefined, required
        to port
    """


    description: str

    fromPort: int

    $protocol: str

    toPort: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkSubnetsItems0:
    r"""
    SubnetSpec configures an AWS Subnet.

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        AvailabilityZone defines the availability zone to use for this subnet in the cluster's region.
    cidrBlock : str, default is Undefined, optional
        CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
    id : str, default is Undefined, required
        ID defines a unique identifier to reference this resource.
        If you're bringing your subnet, set the AWS subnet-id here, it must start with `subnet-`.

        When the VPC is managed by CAPA, and you'd like the provider to create a subnet for you,
        the id can be set to any placeholder value that does not start with `subnet-`;
        upon creation, the subnet AWS identifier will be populated in the `ResourceID` field and
        the `id` field is going to be used as the subnet name. If you specify a tag
        called `Name`, it takes precedence.
    ipv6CidrBlock : str, default is Undefined, optional
        IPv6CidrBlock is the IPv6 CIDR block to be used when the provider creates a managed VPC.
        A subnet can have an IPv4 and an IPv6 address.
        IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
    isIpv6 : bool, default is Undefined, optional
        IsIPv6 defines the subnet as an IPv6 subnet. A subnet is IPv6 when it is associated with a VPC that has IPv6 enabled.
        IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
    isPublic : bool, default is Undefined, optional
        IsPublic defines the subnet as a public subnet. A subnet is public when it is associated with a route table that has a route to an internet gateway.
    natGatewayId : str, default is Undefined, optional
        NatGatewayID is the NAT gateway id associated with the subnet.
        Ignored unless the subnet is managed by the provider, in which case this is set on the public subnet where the NAT gateway resides. It is then used to determine routes for private subnets in the same AZ as the public subnet.
    parentZoneName : str, default is Undefined, optional
        ParentZoneName is the zone name where the current subnet's zone is tied when
        the zone is a Local Zone.

        The subnets in Local Zone or Wavelength Zone locations consume the ParentZoneName
        to select the correct private route table to egress traffic to the internet.
    resourceID : str, default is Undefined, optional
        ResourceID is the subnet identifier from AWS, READ ONLY.
        This field is populated when the provider manages the subnet.
    routeTableId : str, default is Undefined, optional
        RouteTableID is the routing table id associated with the subnet.
    tags : {str:str}, default is Undefined, optional
        Tags is a collection of tags describing the resource.
    zoneType : str, default is Undefined, optional
        ZoneType defines the type of the zone where the subnet is created.

        The valid values are availability-zone, local-zone, and wavelength-zone.

        Subnet with zone type availability-zone (regular) is always selected to create cluster
        resources, like Load Balancers, NAT Gateways, Contol Plane nodes, etc.

        Subnet with zone type local-zone or wavelength-zone is not eligible to automatically create
        regular cluster resources.

        The public subnet in availability-zone or local-zone is associated with regular public
        route table with default route entry to a Internet Gateway.

        The public subnet in wavelength-zone is associated with a carrier public
        route table with default route entry to a Carrier Gateway.

        The private subnet in the availability-zone is associated with a private route table with
        the default route entry to a NAT Gateway created in that zone.

        The private subnet in the local-zone or wavelength-zone is associated with a private route table with
        the default route entry re-using the NAT Gateway in the Region (preferred from the
        parent zone, the zone type availability-zone in the region, or first table available).
    """


    availabilityZone?: str

    cidrBlock?: str

    id: str

    ipv6CidrBlock?: str

    isIpv6?: bool

    isPublic?: bool

    natGatewayId?: str

    parentZoneName?: str

    resourceID?: str

    routeTableId?: str

    tags?: {str:str}

    zoneType?: "availability-zone" | "local-zone" | "wavelength-zone"


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpc:
    r"""
    VPC configuration.

    Attributes
    ----------
    availabilityZoneSelection : str, default is "Ordered", optional
        AvailabilityZoneSelection specifies how AZs should be selected if there are more AZs
        in a region than specified by AvailabilityZoneUsageLimit. There are 2 selection schemes:
        Ordered - selects based on alphabetical order
        Random - selects AZs randomly in a region
        Defaults to Ordered
    availabilityZoneUsageLimit : int, default is 3, optional
        AvailabilityZoneUsageLimit specifies the maximum number of availability zones (AZ) that
        should be used in a region when automatically creating subnets. If a region has more
        than this number of AZs then this number of AZs will be picked randomly when creating
        default subnets. Defaults to 3
    carrierGatewayId : str, default is Undefined, optional
        CarrierGatewayID is the id of the internet gateway associated with the VPC,
        for carrier network (Wavelength Zones).
    cidrBlock : str, default is Undefined, optional
        CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
        Defaults to 10.0.0.0/16.
        Mutually exclusive with IPAMPool.
    elasticIpPool : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcElasticIPPool, default is Undefined, optional
        elastic Ip pool
    emptyRoutesDefaultVPCSecurityGroup : bool, default is Undefined, optional
        EmptyRoutesDefaultVPCSecurityGroup specifies whether the default VPC security group ingress
        and egress rules should be removed.

        By default, when creating a VPC, AWS creates a security group called `default` with ingress and egress
        rules that allow traffic from anywhere. The group could be used as a potential surface attack and
        it's generally suggested that the group rules are removed or modified appropriately.

        NOTE: This only applies when the VPC is managed by the Cluster API AWS controller.
    id : str, default is Undefined, optional
        ID is the vpc-id of the VPC this provider should use to create resources.
    internetGatewayId : str, default is Undefined, optional
        InternetGatewayID is the id of the internet gateway associated with the VPC.
    ipamPool : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcIpamPool, default is Undefined, optional
        ipam pool
    ipv6 : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcIPV6, default is Undefined, optional
        ipv6
    privateDnsHostnameTypeOnLaunch : str, default is Undefined, optional
        PrivateDNSHostnameTypeOnLaunch is the type of hostname to assign to instances in the subnet at launch.
        For IPv4-only and dual-stack (IPv4 and IPv6) subnets, an instance DNS name can be based on the instance IPv4 address (ip-name)
        or the instance ID (resource-name). For IPv6 only subnets, an instance DNS name must be based on the instance ID (resource-name).
    secondaryCidrBlocks : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcSecondaryCidrBlocksItems0], default is Undefined, optional
        SecondaryCidrBlocks are additional CIDR blocks to be associated when the provider creates a managed VPC.
        Defaults to none. Mutually exclusive with IPAMPool. This makes sense to use if, for example, you want to use
        a separate IP range for pods (e.g. Cilium ENI mode).
    subnetSchema : str, default is "PreferPrivate", optional
        SubnetSchema specifies how CidrBlock should be divided on subnets in the VPC depending on the number of AZs.
        PreferPrivate - one private subnet for each AZ plus one other subnet that will be further sub-divided for the public subnets.
        PreferPublic - have the reverse logic of PreferPrivate, one public subnet for each AZ plus one other subnet
        that will be further sub-divided for the private subnets.
        Defaults to PreferPrivate
    tags : {str:str}, default is Undefined, optional
        Tags is a collection of tags describing the resource.
    """


    availabilityZoneSelection?: "Ordered" | "Random" = "Ordered"

    availabilityZoneUsageLimit?: int = 3

    carrierGatewayId?: str

    cidrBlock?: str

    elasticIpPool?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcElasticIPPool

    emptyRoutesDefaultVPCSecurityGroup?: bool

    id?: str

    internetGatewayId?: str

    ipamPool?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcIpamPool

    ipv6?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcIPV6

    privateDnsHostnameTypeOnLaunch?: "ip-name" | "resource-name"

    secondaryCidrBlocks?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcSecondaryCidrBlocksItems0]

    subnetSchema?: "PreferPrivate" | "PreferPublic" = "PreferPrivate"

    tags?: {str:str}


    check:
        availabilityZoneUsageLimit >= 1 if availabilityZoneUsageLimit not in [None, Undefined]


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcElasticIPPool:
    r"""
    ElasticIPPool contains specific configuration to allocate Public IPv4 address (Elastic IP) from user-defined pool
    brought to AWS for core infrastructure resources, like NAT Gateways and Public Network Load Balancers for
    the API Server.

    Attributes
    ----------
    publicIpv4Pool : str, default is Undefined, optional
        PublicIpv4Pool sets a custom Public IPv4 Pool used to create Elastic IP address for resources
        created in public IPv4 subnets. Every IPv4 address, Elastic IP, will be allocated from the custom
        Public IPv4 pool that you brought to AWS, instead of Amazon-provided pool. The public IPv4 pool
        resource ID starts with 'ipv4pool-ec2'.
    publicIpv4PoolFallbackOrder : str, default is Undefined, optional
        PublicIpv4PoolFallBackOrder defines the fallback action when the Public IPv4 Pool has been exhausted,
        no more IPv4 address available in the pool.

        When set to 'amazon-pool', the controller check if the pool has available IPv4 address, when pool has reached the
        IPv4 limit, the address will be claimed from Amazon-pool (default).

        When set to 'none', the controller will fail the Elastic IP allocation when the publicIpv4Pool is exhausted.
    """


    publicIpv4Pool?: str

    publicIpv4PoolFallbackOrder?: "amazon-pool" | "none"


    check:
        len(publicIpv4Pool) <= 30 if publicIpv4Pool


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcIPV6:
    r"""
    IPv6 contains ipv6 specific settings for the network. Supported only in managed clusters.
    This field cannot be set on AWSCluster object.

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        CidrBlock is the CIDR block provided by Amazon when VPC has enabled IPv6.
        Mutually exclusive with IPAMPool.
    egressOnlyInternetGatewayId : str, default is Undefined, optional
        EgressOnlyInternetGatewayID is the id of the egress only internet gateway associated with an IPv6 enabled VPC.
    ipamPool : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcIPV6IpamPool, default is Undefined, optional
        ipam pool
    poolId : str, default is Undefined, optional
        PoolID is the IP pool which must be defined in case of BYO IP is defined.
        Must be specified if CidrBlock is set.
        Mutually exclusive with IPAMPool.
    """


    cidrBlock?: str

    egressOnlyInternetGatewayId?: str

    ipamPool?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcIPV6IpamPool

    poolId?: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcIPV6IpamPool:
    r"""
    IPAMPool defines the IPAMv6 pool to be used for VPC.
    Mutually exclusive with CidrBlock.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the ID of the IPAM pool this provider should use to create VPC.
    name : str, default is Undefined, optional
        Name is the name of the IPAM pool this provider should use to create VPC.
    netmaskLength : int, default is Undefined, optional
        The netmask length of the IPv4 CIDR you want to allocate to VPC from
        an Amazon VPC IP Address Manager (IPAM) pool.
        Defaults to /16 for IPv4 if not specified.
    """


    id?: str

    name?: str

    netmaskLength?: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcIpamPool:
    r"""
    IPAMPool defines the IPAMv4 pool to be used for VPC.
    Mutually exclusive with CidrBlock.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the ID of the IPAM pool this provider should use to create VPC.
    name : str, default is Undefined, optional
        Name is the name of the IPAM pool this provider should use to create VPC.
    netmaskLength : int, default is Undefined, optional
        The netmask length of the IPv4 CIDR you want to allocate to VPC from
        an Amazon VPC IP Address Manager (IPAM) pool.
        Defaults to /16 for IPv4 if not specified.
    """


    id?: str

    name?: str

    netmaskLength?: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecNetworkVpcSecondaryCidrBlocksItems0:
    r"""
    VpcCidrBlock defines the CIDR block and settings to associate with the managed VPC. Currently, only IPv4 is supported.

    Attributes
    ----------
    ipv4CidrBlock : str, default is Undefined, required
        IPv4CidrBlock is the IPv4 CIDR block to associate with the managed VPC.
    """


    ipv4CidrBlock: str


    check:
        len(ipv4CidrBlock) >= 1


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecOidcIdentityProviderConfig:
    r"""
    IdentityProviderconfig is used to specify the oidc provider config
    to be attached with this eks cluster

    Attributes
    ----------
    clientId : str, default is Undefined, required
        This is also known as audience. The ID for the client application that makes
        authentication requests to the OpenID identity provider.
    groupsClaim : str, default is Undefined, optional
        The JWT claim that the provider uses to return your groups.
    groupsPrefix : str, default is Undefined, optional
        The prefix that is prepended to group claims to prevent clashes with existing
        names (such as system: groups). For example, the valueoidc: will create group
        names like oidc:engineering and oidc:infra.
    identityProviderConfigName : str, default is Undefined, required
        The name of the OIDC provider configuration.

        IdentityProviderConfigName is a required field
    issuerUrl : str, default is Undefined, required
        The URL of the OpenID identity provider that allows the API server to discover
        public signing keys for verifying tokens. The URL must begin with https://
        and should correspond to the iss claim in the provider's OIDC ID tokens.
        Per the OIDC standard, path components are allowed but query parameters are
        not. Typically the URL consists of only a hostname, like https://server.example.org
        or https://example.com. This URL should point to the level below .well-known/openid-configuration
        and must be publicly accessible over the internet.
    requiredClaims : {str:str}, default is Undefined, optional
        The key value pairs that describe required claims in the identity token.
        If set, each claim is verified to be present in the token with a matching
        value. For the maximum number of claims that you can require, see Amazon
        EKS service quotas (https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html)
        in the Amazon EKS User Guide.
    tags : {str:str}, default is Undefined, optional
        tags to apply to oidc identity provider association
    usernameClaim : str, default is Undefined, optional
        The JSON Web Token (JWT) claim to use as the username. The default is sub,
        which is expected to be a unique identifier of the end user. You can choose
        other claims, such as email or name, depending on the OpenID identity provider.
        Claims other than email are prefixed with the issuer URL to prevent naming
        clashes with other plug-ins.
    usernamePrefix : str, default is Undefined, optional
        The prefix that is prepended to username claims to prevent clashes with existing
        names. If you do not provide this field, and username is a value other than
        email, the prefix defaults to issuerurl#. You can use the value - to disable
        all prefixing.
    """


    clientId: str

    groupsClaim?: str

    groupsPrefix?: str

    identityProviderConfigName: str

    issuerUrl: str

    requiredClaims?: {str:str}

    tags?: {str:str}

    usernameClaim?: str

    usernamePrefix?: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCni:
    r"""
    VpcCni is used to set configuration options for the VPC CNI plugin

    Attributes
    ----------
    env : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0], default is Undefined, optional
        Env defines a list of environment variables to apply to the `aws-node` DaemonSet
    """


    env?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0]


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFrom


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromFieldRef

    resourceFieldRef?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromSecretKeyRef


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneSpecVpcCniEnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str = ""

    optional?: bool


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatus:
    r"""
    AWSManagedControlPlaneStatus defines the observed state of an Amazon EKS Cluster.

    Attributes
    ----------
    addons : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusAddonsItems0], default is Undefined, optional
        Addons holds the current status of the EKS addons
    bastion : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastion, default is Undefined, optional
        bastion
    conditions : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusConditionsItems0], default is Undefined, optional
        Conditions specifies the cpnditions for the managed control plane
    externalManagedControlPlane : bool, default is True, optional
        ExternalManagedControlPlane indicates to cluster-api that the control plane
        is managed by an external service such as AKS, EKS, GKE, etc.
    failureDomains : {str:ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusFailureDomainsAnon}, default is Undefined, optional
        FailureDomains specifies a list fo available availability zones that can be used
    failureMessage : str, default is Undefined, optional
        ErrorMessage indicates that there is a terminal problem reconciling the
        state, and will be set to a descriptive error message.
    identityProviderStatus : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusIdentityProviderStatus, default is Undefined, optional
        identity provider status
    initialized : bool, default is Undefined, optional
        Initialized denotes whether or not the control plane has the
        uploaded kubernetes config-map.
    networkStatus : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatus, default is Undefined, optional
        network status
    oidcProvider : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusOidcProvider, default is Undefined, optional
        oidc provider
    ready : bool, default is Undefined, required
        Ready denotes that the AWSManagedControlPlane API Server is ready to
        receive requests and that the VPC infra is ready.
    """


    addons?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusAddonsItems0]

    bastion?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastion

    conditions?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusConditionsItems0]

    externalManagedControlPlane?: bool = True

    failureDomains?: {str:ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusFailureDomainsAnon}

    failureMessage?: str

    identityProviderStatus?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusIdentityProviderStatus

    initialized?: bool

    networkStatus?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatus

    oidcProvider?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusOidcProvider

    ready: bool = False


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusAddonsItems0:
    r"""
    AddonState represents the state of an addon.

    Attributes
    ----------
    arn : str, default is Undefined, required
        ARN is the AWS ARN of the addon
    createdAt : str, default is Undefined, optional
        CreatedAt is the date and time the addon was created at
    issues : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusAddonsItems0IssuesItems0], default is Undefined, optional
        Issues is a list of issue associated with the addon
    modifiedAt : str, default is Undefined, optional
        ModifiedAt is the date and time the addon was last modified
    name : str, default is Undefined, required
        Name is the name of the addon
    serviceAccountRoleARN : str, default is Undefined, optional
        ServiceAccountRoleArn is the ARN of the IAM role used for the service account
    status : str, default is Undefined, optional
        Status is the status of the addon
    version : str, default is Undefined, required
        Version is the version of the addon to use
    """


    arn: str

    createdAt?: str

    issues?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusAddonsItems0IssuesItems0]

    modifiedAt?: str

    name: str

    serviceAccountRoleARN?: str

    status?: str

    version: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusAddonsItems0IssuesItems0:
    r"""
    AddonIssue represents an issue with an addon.

    Attributes
    ----------
    code : str, default is Undefined, optional
        Code is the issue code
    message : str, default is Undefined, optional
        Message is the textual description of the issue
    resourceIds : [str], default is Undefined, optional
        ResourceIDs is a list of resource ids for the issue
    """


    code?: str

    message?: str

    resourceIds?: [str]


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastion:
    r"""
    Bastion holds details of the instance that is used as a bastion jump box

    Attributes
    ----------
    addresses : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionAddressesItems0], default is Undefined, optional
        Addresses contains the AWS instance associated addresses.
    availabilityZone : str, default is Undefined, optional
        Availability zone of instance
    capacityReservationId : str, default is Undefined, optional
        CapacityReservationID specifies the target Capacity Reservation into which the instance should be launched.
    ebsOptimized : bool, default is Undefined, optional
        Indicates whether the instance is optimized for Amazon EBS I/O.
    enaSupport : bool, default is Undefined, optional
        Specifies whether enhanced networking with ENA is enabled.
    iamProfile : str, default is Undefined, optional
        The name of the IAM instance profile associated with the instance, if applicable.
    id : str, default is Undefined, required
        id
    imageId : str, default is Undefined, optional
        The ID of the AMI used to launch the instance.
    instanceMetadataOptions : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionInstanceMetadataOptions, default is Undefined, optional
        instance metadata options
    instanceState : str, default is Undefined, optional
        The current state of the instance.
    marketType : str, default is Undefined, optional
        MarketType specifies the type of market for the EC2 instance. Valid values include:
        "OnDemand" (default): The instance runs as a standard OnDemand instance.
        "Spot": The instance runs as a Spot instance. When SpotMarketOptions is provided, the marketType defaults to "Spot".
        "CapacityBlock": The instance utilizes pre-purchased compute capacity (capacity blocks) with AWS Capacity Reservations.
         If this value is selected, CapacityReservationID must be specified to identify the target reservation.
        If marketType is not specified and spotMarketOptions is provided, the marketType defaults to "Spot".
    networkInterfaceType : str, default is Undefined, optional
        NetworkInterfaceType is the interface type of the primary network Interface.
    networkInterfaces : [str], default is Undefined, optional
        Specifies ENIs attached to instance
    nonRootVolumes : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionNonRootVolumesItems0], default is Undefined, optional
        Configuration options for the non root storage volumes.
    placementGroupName : str, default is Undefined, optional
        PlacementGroupName specifies the name of the placement group in which to launch the instance.
    placementGroupPartition : int, default is Undefined, optional
        PlacementGroupPartition is the partition number within the placement group in which to launch the instance.
        This value is only valid if the placement group, referred in `PlacementGroupName`, was created with
        strategy set to partition.
    privateDnsName : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionPrivateDNSName, default is Undefined, optional
        private Dns name
    privateIp : str, default is Undefined, optional
        The private IPv4 address assigned to the instance.
    publicIPOnLaunch : bool, default is Undefined, optional
        PublicIPOnLaunch is the option to associate a public IP on instance launch
    publicIp : str, default is Undefined, optional
        The public IPv4 address assigned to the instance, if applicable.
    rootVolume : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionRootVolume, default is Undefined, optional
        root volume
    securityGroupIds : [str], default is Undefined, optional
        SecurityGroupIDs are one or more security group IDs this instance belongs to.
    spotMarketOptions : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionSpotMarketOptions, default is Undefined, optional
        spot market options
    sshKeyName : str, default is Undefined, optional
        The name of the SSH key pair.
    subnetId : str, default is Undefined, optional
        The ID of the subnet of the instance.
    tags : {str:str}, default is Undefined, optional
        The tags associated with the instance.
    tenancy : str, default is Undefined, optional
        Tenancy indicates if instance should run on shared or single-tenant hardware.
    $type : str, default is Undefined, optional
        The instance type.
    userData : str, default is Undefined, optional
        UserData is the raw data script passed to the instance which is run upon bootstrap.
        This field must not be base64 encoded and should only be used when running a new instance.
    volumeIDs : [str], default is Undefined, optional
        IDs of the instance's volumes
    """


    addresses?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionAddressesItems0]

    availabilityZone?: str

    capacityReservationId?: str

    ebsOptimized?: bool

    enaSupport?: bool

    iamProfile?: str

    id: str

    imageId?: str

    instanceMetadataOptions?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionInstanceMetadataOptions

    instanceState?: str

    marketType?: "OnDemand" | "Spot" | "CapacityBlock"

    networkInterfaceType?: str

    networkInterfaces?: [str]

    nonRootVolumes?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionNonRootVolumesItems0]

    placementGroupName?: str

    placementGroupPartition?: int

    privateDnsName?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionPrivateDNSName

    privateIp?: str

    publicIPOnLaunch?: bool

    publicIp?: str

    rootVolume?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionRootVolume

    securityGroupIds?: [str]

    spotMarketOptions?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionSpotMarketOptions

    sshKeyName?: str

    subnetId?: str

    tags?: {str:str}

    tenancy?: str

    $type?: str

    userData?: str

    volumeIDs?: [str]


    check:
        placementGroupPartition <= 7 if placementGroupPartition not in [None, Undefined]
        placementGroupPartition >= 1 if placementGroupPartition not in [None, Undefined]


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionAddressesItems0:
    r"""
    MachineAddress contains information for the node's address.

    Attributes
    ----------
    address : str, default is Undefined, required
        The machine address.
    $type : str, default is Undefined, required
        Machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
    """


    address: str

    $type: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionInstanceMetadataOptions:
    r"""
    InstanceMetadataOptions is the metadata options for the EC2 instance.

    Attributes
    ----------
    httpEndpoint : str, default is "enabled", optional
        Enables or disables the HTTP metadata endpoint on your instances.

        If you specify a value of disabled, you cannot access your instance metadata.

        Default: enabled
    httpPutResponseHopLimit : int, default is 1, optional
        The desired HTTP PUT response hop limit for instance metadata requests. The
        larger the number, the further instance metadata requests can travel.

        Default: 1
    httpTokens : str, default is "optional", optional
        The state of token usage for your instance metadata requests.

        If the state is optional, you can choose to retrieve instance metadata with
        or without a session token on your request. If you retrieve the IAM role
        credentials without a token, the version 1.0 role credentials are returned.
        If you retrieve the IAM role credentials using a valid session token, the
        version 2.0 role credentials are returned.

        If the state is required, you must send a session token with any instance
        metadata retrieval requests. In this state, retrieving the IAM role credentials
        always returns the version 2.0 credentials; the version 1.0 credentials are
        not available.

        Default: optional
    instanceMetadataTags : str, default is "disabled", optional
        Set to enabled to allow access to instance tags from the instance metadata.
        Set to disabled to turn off access to instance tags from the instance metadata.
        For more information, see Work with instance tags using the instance metadata
        (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).

        Default: disabled
    """


    httpEndpoint?: "enabled" | "disabled" = "enabled"

    httpPutResponseHopLimit?: int = 1

    httpTokens?: "optional" | "required" = "optional"

    instanceMetadataTags?: "enabled" | "disabled" = "disabled"


    check:
        httpPutResponseHopLimit <= 64 if httpPutResponseHopLimit not in [None, Undefined]
        httpPutResponseHopLimit >= 1 if httpPutResponseHopLimit not in [None, Undefined]


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionNonRootVolumesItems0:
    r"""
    Volume encapsulates the configuration options for the storage device.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Device name
    encrypted : bool, default is Undefined, optional
        Encrypted is whether the volume should be encrypted or not.
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
        If Encrypted is set and this is omitted, the default AWS key will be used.
        The key must already exist and be accessible by the controller.
    iops : int, default is Undefined, optional
        IOPS is the number of IOPS requested for the disk. Not applicable to all types.
    size : int, default is Undefined, required
        Size specifies size (in Gi) of the storage device.
        Must be greater than the image snapshot size or 8 (whichever is greater).
    throughput : int, default is Undefined, optional
        Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
    $type : str, default is Undefined, optional
        Type is the type of the volume (e.g. gp2, io1, etc...).
    """


    deviceName?: str

    encrypted?: bool

    encryptionKey?: str

    iops?: int

    size: int

    throughput?: int

    $type?: str


    check:
        size >= 8


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionPrivateDNSName:
    r"""
    PrivateDNSName is the options for the instance hostname.

    Attributes
    ----------
    enableResourceNameDnsAAAARecord : bool, default is Undefined, optional
        EnableResourceNameDNSAAAARecord indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        EnableResourceNameDNSARecord indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    hostnameType : str, default is Undefined, optional
        The type of hostname to assign to an instance.
    """


    enableResourceNameDnsAAAARecord?: bool

    enableResourceNameDnsARecord?: bool

    hostnameType?: "ip-name" | "resource-name"


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionRootVolume:
    r"""
    Configuration options for the root storage volume.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Device name
    encrypted : bool, default is Undefined, optional
        Encrypted is whether the volume should be encrypted or not.
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
        If Encrypted is set and this is omitted, the default AWS key will be used.
        The key must already exist and be accessible by the controller.
    iops : int, default is Undefined, optional
        IOPS is the number of IOPS requested for the disk. Not applicable to all types.
    size : int, default is Undefined, required
        Size specifies size (in Gi) of the storage device.
        Must be greater than the image snapshot size or 8 (whichever is greater).
    throughput : int, default is Undefined, optional
        Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
    $type : str, default is Undefined, optional
        Type is the type of the volume (e.g. gp2, io1, etc...).
    """


    deviceName?: str

    encrypted?: bool

    encryptionKey?: str

    iops?: int

    size: int

    throughput?: int

    $type?: str


    check:
        size >= 8


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusBastionSpotMarketOptions:
    r"""
    SpotMarketOptions option for configuring instances to be run using AWS Spot instances.

    Attributes
    ----------
    maxPrice : str, default is Undefined, optional
        MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
    """


    maxPrice?: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusFailureDomainsAnon:
    r"""
    FailureDomainSpec is the Schema for Cluster API failure domains.
    It allows controllers to understand how many failure domains a cluster can optionally span across.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        attributes is a free form map of attributes an infrastructure provider might use or require.
    controlPlane : bool, default is Undefined, optional
        controlPlane determines if this failure domain is suitable for use by control plane machines.
    """


    attributes?: {str:str}

    controlPlane?: bool


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusIdentityProviderStatus:
    r"""
    IdentityProviderStatus holds the status for
    associated identity provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN holds the ARN of associated identity provider
    status : str, default is Undefined, optional
        Status holds current status of associated identity provider
    """


    arn?: str

    status?: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatus:
    r"""
    Networks holds details about the AWS networking resources used by the control plane

    Attributes
    ----------
    apiServerElb : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElb, default is Undefined, optional
        api server elb
    natGatewaysIPs : [str], default is Undefined, optional
        NatGatewaysIPs contains the public IPs of the NAT Gateways
    secondaryAPIServerELB : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELB, default is Undefined, optional
        secondary API server e l b
    securityGroups : {str:ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecurityGroupsAnon}, default is Undefined, optional
        SecurityGroups is a map from the role/kind of the security group to its unique name, if any.
    """


    apiServerElb?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElb

    natGatewaysIPs?: [str]

    secondaryAPIServerELB?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELB

    securityGroups?: {str:ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecurityGroupsAnon}


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElb:
    r"""
    APIServerELB is the Kubernetes api server load balancer.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the load balancer. Unlike the ClassicLB, ARN is used mostly
        to define and get it.
    attributes : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbAttributes, default is Undefined, optional
        attributes
    availabilityZones : [str], default is Undefined, optional
        AvailabilityZones is an array of availability zones in the VPC attached to the load balancer.
    dnsName : str, default is Undefined, optional
        DNSName is the dns name of the load balancer.
    elbAttributes : {str:str}, default is Undefined, optional
        ELBAttributes defines extra attributes associated with v2 load balancers.
    elbListeners : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbElbListenersItems0], default is Undefined, optional
        ELBListeners is an array of listeners associated with the load balancer. There must be at least one.
    healthChecks : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbHealthChecks, default is Undefined, optional
        health checks
    listeners : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbListenersItems0], default is Undefined, optional
        ClassicELBListeners is an array of classic elb listeners associated with the load balancer. There must be at least one.
    loadBalancerType : str, default is Undefined, optional
        LoadBalancerType sets the type for a load balancer. The default type is classic.
    name : str, default is Undefined, optional
        The name of the load balancer. It must be unique within the set of load balancers
        defined in the region. It also serves as identifier.
    scheme : str, default is Undefined, optional
        Scheme is the load balancer scheme, either internet-facing or private.
    securityGroupIds : [str], default is Undefined, optional
        SecurityGroupIDs is an array of security groups assigned to the load balancer.
    subnetIds : [str], default is Undefined, optional
        SubnetIDs is an array of subnets in the VPC attached to the load balancer.
    tags : {str:str}, default is Undefined, optional
        Tags is a map of tags associated with the load balancer.
    """


    arn?: str

    attributes?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbAttributes

    availabilityZones?: [str]

    dnsName?: str

    elbAttributes?: {str:str}

    elbListeners?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbElbListenersItems0]

    healthChecks?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbHealthChecks

    listeners?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbListenersItems0]

    loadBalancerType?: "classic" | "elb" | "alb" | "nlb"

    name?: str

    scheme?: str

    securityGroupIds?: [str]

    subnetIds?: [str]

    tags?: {str:str}


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbAttributes:
    r"""
    ClassicElbAttributes defines extra attributes associated with the load balancer.

    Attributes
    ----------
    crossZoneLoadBalancing : bool, default is Undefined, optional
        CrossZoneLoadBalancing enables the classic load balancer load balancing.
    idleTimeout : int, default is Undefined, optional
        IdleTimeout is time that the connection is allowed to be idle (no data
        has been sent over the connection) before it is closed by the load balancer.
    """


    crossZoneLoadBalancing?: bool

    idleTimeout?: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbElbListenersItems0:
    r"""
    Listener defines an AWS network load balancer listener.

    Attributes
    ----------
    port : int, default is Undefined, required
        port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    targetGroup : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroup, default is Undefined, required
        target group
    """


    port: int

    $protocol: str

    targetGroup: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroup


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroup:
    r"""
    TargetGroupSpec specifies target group settings for a given listener.
    This is created first, and the ARN is then passed to the listener.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the TargetGroup. Must be unique over the same group of listeners.
    port : int, default is Undefined, required
        Port is the exposed port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    targetGroupHealthCheck : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroupTargetGroupHealthCheck, default is Undefined, optional
        target group health check
    vpcId : str, default is Undefined, required
        vpc Id
    """


    name: str

    port: int

    $protocol: "tcp" | "tls" | "udp" | "TCP" | "TLS" | "UDP"

    targetGroupHealthCheck?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroupTargetGroupHealthCheck

    vpcId: str


    check:
        len(name) <= 32


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbElbListenersItems0TargetGroupTargetGroupHealthCheck:
    r"""
    HealthCheck is the elb health check associated with the load balancer.

    Attributes
    ----------
    intervalSeconds : int, default is Undefined, optional
        interval seconds
    path : str, default is Undefined, optional
        path
    port : str, default is Undefined, optional
        port
    $protocol : str, default is Undefined, optional
        protocol
    thresholdCount : int, default is Undefined, optional
        threshold count
    timeoutSeconds : int, default is Undefined, optional
        timeout seconds
    unhealthyThresholdCount : int, default is Undefined, optional
        unhealthy threshold count
    """


    intervalSeconds?: int

    path?: str

    port?: str

    $protocol?: str

    thresholdCount?: int

    timeoutSeconds?: int

    unhealthyThresholdCount?: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbHealthChecks:
    r"""
    HealthCheck is the classic elb health check associated with the load balancer.

    Attributes
    ----------
    healthyThreshold : int, default is Undefined, required
        healthy threshold
    interval : int, default is Undefined, required
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
    target : str, default is Undefined, required
        target
    timeout : int, default is Undefined, required
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
    unhealthyThreshold : int, default is Undefined, required
        unhealthy threshold
    """


    healthyThreshold: int

    interval: int

    target: str

    timeout: int

    unhealthyThreshold: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusAPIServerElbListenersItems0:
    r"""
    ClassicELBListener defines an AWS classic load balancer listener.

    Attributes
    ----------
    instancePort : int, default is Undefined, required
        instance port
    instanceProtocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    port : int, default is Undefined, required
        port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    """


    instancePort: int

    instanceProtocol: str

    port: int

    $protocol: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELB:
    r"""
    SecondaryAPIServerELB is the secondary Kubernetes api server load balancer.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the load balancer. Unlike the ClassicLB, ARN is used mostly
        to define and get it.
    attributes : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBAttributes, default is Undefined, optional
        attributes
    availabilityZones : [str], default is Undefined, optional
        AvailabilityZones is an array of availability zones in the VPC attached to the load balancer.
    dnsName : str, default is Undefined, optional
        DNSName is the dns name of the load balancer.
    elbAttributes : {str:str}, default is Undefined, optional
        ELBAttributes defines extra attributes associated with v2 load balancers.
    elbListeners : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0], default is Undefined, optional
        ELBListeners is an array of listeners associated with the load balancer. There must be at least one.
    healthChecks : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBHealthChecks, default is Undefined, optional
        health checks
    listeners : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBListenersItems0], default is Undefined, optional
        ClassicELBListeners is an array of classic elb listeners associated with the load balancer. There must be at least one.
    loadBalancerType : str, default is Undefined, optional
        LoadBalancerType sets the type for a load balancer. The default type is classic.
    name : str, default is Undefined, optional
        The name of the load balancer. It must be unique within the set of load balancers
        defined in the region. It also serves as identifier.
    scheme : str, default is Undefined, optional
        Scheme is the load balancer scheme, either internet-facing or private.
    securityGroupIds : [str], default is Undefined, optional
        SecurityGroupIDs is an array of security groups assigned to the load balancer.
    subnetIds : [str], default is Undefined, optional
        SubnetIDs is an array of subnets in the VPC attached to the load balancer.
    tags : {str:str}, default is Undefined, optional
        Tags is a map of tags associated with the load balancer.
    """


    arn?: str

    attributes?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBAttributes

    availabilityZones?: [str]

    dnsName?: str

    elbAttributes?: {str:str}

    elbListeners?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0]

    healthChecks?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBHealthChecks

    listeners?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBListenersItems0]

    loadBalancerType?: "classic" | "elb" | "alb" | "nlb"

    name?: str

    scheme?: str

    securityGroupIds?: [str]

    subnetIds?: [str]

    tags?: {str:str}


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBAttributes:
    r"""
    ClassicElbAttributes defines extra attributes associated with the load balancer.

    Attributes
    ----------
    crossZoneLoadBalancing : bool, default is Undefined, optional
        CrossZoneLoadBalancing enables the classic load balancer load balancing.
    idleTimeout : int, default is Undefined, optional
        IdleTimeout is time that the connection is allowed to be idle (no data
        has been sent over the connection) before it is closed by the load balancer.
    """


    crossZoneLoadBalancing?: bool

    idleTimeout?: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0:
    r"""
    Listener defines an AWS network load balancer listener.

    Attributes
    ----------
    port : int, default is Undefined, required
        port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    targetGroup : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroup, default is Undefined, required
        target group
    """


    port: int

    $protocol: str

    targetGroup: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroup


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroup:
    r"""
    TargetGroupSpec specifies target group settings for a given listener.
    This is created first, and the ARN is then passed to the listener.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the TargetGroup. Must be unique over the same group of listeners.
    port : int, default is Undefined, required
        Port is the exposed port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    targetGroupHealthCheck : ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroupTargetGroupHealthCheck, default is Undefined, optional
        target group health check
    vpcId : str, default is Undefined, required
        vpc Id
    """


    name: str

    port: int

    $protocol: "tcp" | "tls" | "udp" | "TCP" | "TLS" | "UDP"

    targetGroupHealthCheck?: ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroupTargetGroupHealthCheck

    vpcId: str


    check:
        len(name) <= 32


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBElbListenersItems0TargetGroupTargetGroupHealthCheck:
    r"""
    HealthCheck is the elb health check associated with the load balancer.

    Attributes
    ----------
    intervalSeconds : int, default is Undefined, optional
        interval seconds
    path : str, default is Undefined, optional
        path
    port : str, default is Undefined, optional
        port
    $protocol : str, default is Undefined, optional
        protocol
    thresholdCount : int, default is Undefined, optional
        threshold count
    timeoutSeconds : int, default is Undefined, optional
        timeout seconds
    unhealthyThresholdCount : int, default is Undefined, optional
        unhealthy threshold count
    """


    intervalSeconds?: int

    path?: str

    port?: str

    $protocol?: str

    thresholdCount?: int

    timeoutSeconds?: int

    unhealthyThresholdCount?: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBHealthChecks:
    r"""
    HealthCheck is the classic elb health check associated with the load balancer.

    Attributes
    ----------
    healthyThreshold : int, default is Undefined, required
        healthy threshold
    interval : int, default is Undefined, required
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
    target : str, default is Undefined, required
        target
    timeout : int, default is Undefined, required
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
    unhealthyThreshold : int, default is Undefined, required
        unhealthy threshold
    """


    healthyThreshold: int

    interval: int

    target: str

    timeout: int

    unhealthyThreshold: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecondaryAPIServerELBListenersItems0:
    r"""
    ClassicELBListener defines an AWS classic load balancer listener.

    Attributes
    ----------
    instancePort : int, default is Undefined, required
        instance port
    instanceProtocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    port : int, default is Undefined, required
        port
    $protocol : str, default is Undefined, required
        ELBProtocol defines listener protocols for a load balancer.
    """


    instancePort: int

    instanceProtocol: str

    port: int

    $protocol: str


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecurityGroupsAnon:
    r"""
    SecurityGroup defines an AWS security group.

    Attributes
    ----------
    id : str, default is Undefined, required
        ID is a unique identifier.
    ingressRule : [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecurityGroupsAnonIngressRuleItems0], default is Undefined, optional
        IngressRules is the inbound rules associated with the security group.
    name : str, default is Undefined, required
        Name is the security group name.
    tags : {str:str}, default is Undefined, optional
        Tags is a map of tags associated with the security group.
    """


    id: str

    ingressRule?: [ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecurityGroupsAnonIngressRuleItems0]

    name: str

    tags?: {str:str}


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusNetworkStatusSecurityGroupsAnonIngressRuleItems0:
    r"""
    IngressRule defines an AWS ingress rule for security groups.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, optional
        List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    description : str, default is Undefined, required
        Description provides extended information about the ingress rule.
    fromPort : int, default is Undefined, required
        FromPort is the start of port range.
    ipv6CidrBlocks : [str], default is Undefined, optional
        List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
    natGatewaysIPsSource : bool, default is Undefined, optional
        NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
    $protocol : str, default is Undefined, required
        Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
    sourceSecurityGroupIds : [str], default is Undefined, optional
        The security group id to allow access from. Cannot be specified with CidrBlocks.
    sourceSecurityGroupRoles : [str], default is Undefined, optional
        The security group role to allow access from. Cannot be specified with CidrBlocks.
        The field will be combined with source security group IDs if specified.
    toPort : int, default is Undefined, required
        ToPort is the end of port range.
    """


    cidrBlocks?: [str]

    description: str

    fromPort: int

    ipv6CidrBlocks?: [str]

    natGatewaysIPsSource?: bool

    $protocol: "-1" | "4" | "tcp" | "udp" | "icmp" | "58" | "50"

    sourceSecurityGroupIds?: [str]

    sourceSecurityGroupRoles?: [str]

    toPort: int


schema ControlplaneClusterxK8sIoV1beta1AWSManagedControlPlaneStatusOidcProvider:
    r"""
    OIDCProvider holds the status of the identity provider for this cluster

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN holds the ARN of the provider
    trustPolicy : str, default is Undefined, optional
        TrustPolicy contains the boilerplate IAM trust policy to use for IRSA
    """


    arn?: str

    trustPolicy?: str


