"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema AWSMachineTemplate:
    r"""
    AWSMachineTemplate is the schema for the Amazon EC2 Machine Templates API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AWSMachineTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "AWSMachineTemplate" = "AWSMachineTemplate"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpec

    status?: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateStatus


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpec:
    r"""
    AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate.

    Attributes
    ----------
    template : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplate, default is Undefined, required
        template
    """


    template: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplate


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplate:
    r"""
    AWSMachineTemplateResource describes the data needed to create am AWSMachine from a template.

    Attributes
    ----------
    metadata : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateMetadata, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateMetadata

    spec: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpec


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateMetadata:
    r"""
    Standard object's metadata.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: http://kubernetes.io/docs/user-guide/labels
    """


    annotations?: {str:str}

    labels?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpec:
    r"""
    Spec is the specification of the desired behavior of the machine.

    Attributes
    ----------
    additionalSecurityGroups : [InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0], default is Undefined, optional
        AdditionalSecurityGroups is an array of references to security groups that should be applied to the
        instance. These security groups would be set in addition to any security groups defined
        at the cluster level or in the actuator. It is possible to specify either IDs of Filters. Using Filters
        will cause additional requests to AWS API and if tags change the attached security groups might change too.
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
        AWS provider. If both the AWSCluster and the AWSMachine specify the same tag name with different values, the
        AWSMachine's value takes precedence.
    ami : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecAmi, default is Undefined, optional
        ami
    cloudInit : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecCloudInit, default is Undefined, optional
        cloud init
    failureDomain : str, default is Undefined, optional
        FailureDomain is the failure domain unique identifier this Machine should be attached to, as defined in Cluster API.
        For this infrastructure provider, the ID is equivalent to an AWS Availability Zone.
        If multiple subnets are matched for the availability zone, the first one returned is picked.
    iamInstanceProfile : str, default is Undefined, optional
        IAMInstanceProfile is a name of an IAM instance profile to assign to the instance
    ignition : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecIgnition, default is Undefined, optional
        ignition
    imageLookupBaseOS : str, default is Undefined, optional
        ImageLookupBaseOS is the name of the base operating system to use for
        image lookup the AMI is not set.
    imageLookupFormat : str, default is Undefined, optional
        ImageLookupFormat is the AMI naming format to look up the image for this
        machine It will be ignored if an explicit AMI is set. Supports
        substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
        kubernetes version, respectively. The BaseOS will be the value in
        ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
        defined by the packages produced by kubernetes/release without v as a
        prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
        image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
        searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
        Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
        also: https://golang.org/pkg/text/template/
    imageLookupOrg : str, default is Undefined, optional
        ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
    instanceID : str, default is Undefined, optional
        InstanceID is the EC2 instance ID for this machine.
    instanceType : str, default is Undefined, required
        InstanceType is the type of instance to create. Example: m4.xlarge
    networkInterfaces : [str], default is Undefined, optional
        NetworkInterfaces is a list of ENIs to associate with the instance.
        A maximum of 2 may be specified.
    nonRootVolumes : [InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecNonRootVolumesItems0], default is Undefined, optional
        Configuration options for the non root storage volumes.
    providerID : str, default is Undefined, optional
        ProviderID is the unique identifier as specified by the cloud provider.
    publicIP : bool, default is Undefined, optional
        PublicIP specifies whether the instance should get a public IP.
        Precedence for this setting is as follows:
        1. This field if set
        2. Cluster/flavor setting
        3. Subnet default
    rootVolume : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecRootVolume, default is Undefined, optional
        root volume
    spotMarketOptions : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecSpotMarketOptions, default is Undefined, optional
        spot market options
    sshKeyName : str, default is Undefined, optional
        SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
    subnet : InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecSubnet, default is Undefined, optional
        subnet
    tenancy : str, default is Undefined, optional
        Tenancy indicates if instance should run on shared or single-tenant hardware.
    uncompressedUserData : bool, default is Undefined, optional
        UncompressedUserData specify whether the user data is gzip-compressed before it is sent to ec2 instance.
        cloud-init has built-in support for gzip-compressed user data
        user data stored in aws secret manager is always gzip-compressed.
    """


    additionalSecurityGroups?: [InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0]

    additionalTags?: {str:str}

    ami?: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecAmi

    cloudInit?: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecCloudInit

    failureDomain?: str

    iamInstanceProfile?: str

    ignition?: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecIgnition

    imageLookupBaseOS?: str

    imageLookupFormat?: str

    imageLookupOrg?: str

    instanceID?: str

    instanceType: str

    networkInterfaces?: [str]

    nonRootVolumes?: [InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecNonRootVolumesItems0]

    providerID?: str

    publicIP?: bool

    rootVolume?: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecRootVolume

    spotMarketOptions?: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecSpotMarketOptions

    sshKeyName?: str

    subnet?: InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecSubnet

    tenancy?: "default" | "dedicated" | "host"

    uncompressedUserData?: bool


    check:
        len(instanceType) >= 2
        len(networkInterfaces) <= 2 if networkInterfaces


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0:
    r"""
    AWSResourceReference is a reference to a specific AWS resource by ID or filters.
    Only one of ID or Filters may be specified. Specifying more than one will result in
    a validation error.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of resource.
        Deprecated: This field has no function and is going to be removed in the next release.
    filters : [InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0FiltersItems0], default is Undefined, optional
        Filters is a set of key/value pairs used to identify a resource
        They are applied according to the rules defined by the AWS API:
        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
    id : str, default is Undefined, optional
        ID of resource
    """


    arn?: str

    filters?: [InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0FiltersItems0]

    id?: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecAdditionalSecurityGroupsItems0FiltersItems0:
    r"""
    Filter is a filter used to identify an AWS resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the filter. Filter names are case-sensitive.
    values : [str], default is Undefined, required
        Values includes one or more filter values. Filter values are case-sensitive.
    """


    name: str

    values: [str]


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecAmi:
    r"""
    AMI is the reference to the AMI from which to create the machine instance.

    Attributes
    ----------
    eksLookupType : str, default is Undefined, optional
        EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store
    id : str, default is Undefined, optional
        ID of resource
    """


    eksLookupType?: "AmazonLinux" | "AmazonLinuxGPU"

    id?: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecCloudInit:
    r"""
    CloudInit defines options related to the bootstrapping systems where
    CloudInit is used.

    Attributes
    ----------
    insecureSkipSecretsManager : bool, default is Undefined, optional
        InsecureSkipSecretsManager, when set to true will not use AWS Secrets Manager
        or AWS Systems Manager Parameter Store to ensure privacy of userdata.
        By default, a cloud-init boothook shell script is prepended to download
        the userdata from Secrets Manager and additionally delete the secret.
    secretCount : int, default is Undefined, optional
        SecretCount is the number of secrets used to form the complete secret
    secretPrefix : str, default is Undefined, optional
        SecretPrefix is the prefix for the secret name. This is stored
        temporarily, and deleted when the machine registers as a node against
        the workload cluster.
    secureSecretsBackend : str, default is Undefined, optional
        SecureSecretsBackend, when set to parameter-store will utilize the AWS Systems Manager
        Parameter Storage to distribute secrets. By default or with the value of secrets-manager,
        will use AWS Secrets Manager instead.
    """


    insecureSkipSecretsManager?: bool

    secretCount?: int

    secretPrefix?: str

    secureSecretsBackend?: "secrets-manager" | "ssm-parameter-store"


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecIgnition:
    r"""
    Ignition defined options related to the bootstrapping systems where Ignition is used.

    Attributes
    ----------
    version : str, default is "2.3", optional
        Version defines which version of Ignition will be used to generate bootstrap data.
    """


    version?: "2.3" = "2.3"


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecNonRootVolumesItems0:
    r"""
    Volume encapsulates the configuration options for the storage device.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Device name
    encrypted : bool, default is Undefined, optional
        Encrypted is whether the volume should be encrypted or not.
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
        If Encrypted is set and this is omitted, the default AWS key will be used.
        The key must already exist and be accessible by the controller.
    iops : int, default is Undefined, optional
        IOPS is the number of IOPS requested for the disk. Not applicable to all types.
    size : int, default is Undefined, required
        Size specifies size (in Gi) of the storage device.
        Must be greater than the image snapshot size or 8 (whichever is greater).
    throughput : int, default is Undefined, optional
        Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
    $type : str, default is Undefined, optional
        Type is the type of the volume (e.g. gp2, io1, etc...).
    """


    deviceName?: str

    encrypted?: bool

    encryptionKey?: str

    iops?: int

    size: int

    throughput?: int

    $type?: str


    check:
        size >= 8


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecRootVolume:
    r"""
    RootVolume encapsulates the configuration options for the root volume

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Device name
    encrypted : bool, default is Undefined, optional
        Encrypted is whether the volume should be encrypted or not.
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
        If Encrypted is set and this is omitted, the default AWS key will be used.
        The key must already exist and be accessible by the controller.
    iops : int, default is Undefined, optional
        IOPS is the number of IOPS requested for the disk. Not applicable to all types.
    size : int, default is Undefined, required
        Size specifies size (in Gi) of the storage device.
        Must be greater than the image snapshot size or 8 (whichever is greater).
    throughput : int, default is Undefined, optional
        Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
    $type : str, default is Undefined, optional
        Type is the type of the volume (e.g. gp2, io1, etc...).
    """


    deviceName?: str

    encrypted?: bool

    encryptionKey?: str

    iops?: int

    size: int

    throughput?: int

    $type?: str


    check:
        size >= 8


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecSpotMarketOptions:
    r"""
    SpotMarketOptions allows users to configure instances to be run using AWS Spot instances.

    Attributes
    ----------
    maxPrice : str, default is Undefined, optional
        MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
    """


    maxPrice?: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecSubnet:
    r"""
    Subnet is a reference to the subnet to use for this instance. If not specified,
    the cluster subnet will be used.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of resource.
        Deprecated: This field has no function and is going to be removed in the next release.
    filters : [InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecSubnetFiltersItems0], default is Undefined, optional
        Filters is a set of key/value pairs used to identify a resource
        They are applied according to the rules defined by the AWS API:
        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
    id : str, default is Undefined, optional
        ID of resource
    """


    arn?: str

    filters?: [InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecSubnetFiltersItems0]

    id?: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateSpecTemplateSpecSubnetFiltersItems0:
    r"""
    Filter is a filter used to identify an AWS resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the filter. Filter names are case-sensitive.
    values : [str], default is Undefined, required
        Values includes one or more filter values. Filter values are case-sensitive.
    """


    name: str

    values: [str]


schema InfrastructureClusterxK8sIoV1beta1AWSMachineTemplateStatus:
    r"""
    AWSMachineTemplateStatus defines a status for an AWSMachineTemplate.

    Attributes
    ----------
    capacity : {str:int | str}, default is Undefined, optional
        Capacity defines the resource capacity for this machine.
        This value is used for autoscaling from zero operations as defined in:
        https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md
    """


    capacity?: {str:int | str}


    check:
        all _, capacity in capacity { _regex_match(str(capacity), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if capacity } if capacity


