"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AWSManagedMachinePool:
    r"""
    AWSManagedMachinePool is the Schema for the awsmanagedmachinepools API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AWSManagedMachinePool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "AWSManagedMachinePool" = "AWSManagedMachinePool"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpec

    status?: InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolStatus


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpec:
    r"""
    AWSManagedMachinePoolSpec defines the desired state of AWSManagedMachinePool.

    Attributes
    ----------
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the
        ones added by default.
    amiType : str, default is "AL2_x86_64", optional
        AMIType defines the AMI type
    amiVersion : str, default is Undefined, optional
        AMIVersion defines the desired AMI release version. If no version number
        is supplied then the latest version for the Kubernetes version
        will be used
    availabilityZones : [str], default is Undefined, optional
        AvailabilityZones is an array of availability zones instances can run in
    awsLaunchTemplate : InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplate, default is Undefined, optional
        aws launch template
    capacityType : str, default is "onDemand", optional
        CapacityType specifies the capacity type for the ASG behind this pool
    diskSize : int, default is Undefined, optional
        DiskSize specifies the root disk size
    eksNodegroupName : str, default is Undefined, optional
        EKSNodegroupName specifies the name of the nodegroup in AWS
        corresponding to this MachinePool. If you don't specify a name
        then a default name will be created based on the namespace and
        name of the managed machine pool.
    instanceType : str, default is Undefined, optional
        InstanceType specifies the AWS instance type
    labels : {str:str}, default is Undefined, optional
        Labels specifies labels for the Kubernetes node objects
    providerIDList : [str], default is Undefined, optional
        ProviderIDList are the provider IDs of instances in the
        autoscaling group corresponding to the nodegroup represented by this
        machine pool
    remoteAccess : InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecRemoteAccess, default is Undefined, optional
        remote access
    roleAdditionalPolicies : [str], default is Undefined, optional
        RoleAdditionalPolicies allows you to attach additional polices to
        the node group role. You must enable the EKSAllowAddRoles
        feature flag to incorporate these into the created role.
    roleName : str, default is Undefined, optional
        RoleName specifies the name of IAM role for the node group.
        If the role is pre-existing we will treat it as unmanaged
        and not delete it on deletion. If the EKSEnableIAM feature
        flag is true and no name is supplied then a role is created.
    scaling : InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecScaling, default is Undefined, optional
        scaling
    subnetIDs : [str], default is Undefined, optional
        SubnetIDs specifies which subnets are used for the
        auto scaling group of this nodegroup
    taints : [InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecTaintsItems0], default is Undefined, optional
        Taints specifies the taints to apply to the nodes of the machine pool
    updateConfig : InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecUpdateConfig, default is Undefined, optional
        update config
    """


    additionalTags?: {str:str}

    amiType?: "AL2_x86_64" | "AL2_x86_64_GPU" | "AL2_ARM_64" | "AL2023_x86_64_STANDARD" | "AL2023_ARM_64_STANDARD" | "CUSTOM" = "AL2_x86_64"

    amiVersion?: str

    availabilityZones?: [str]

    awsLaunchTemplate?: InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplate

    capacityType?: "onDemand" | "spot" = "onDemand"

    diskSize?: int

    eksNodegroupName?: str

    instanceType?: str

    labels?: {str:str}

    providerIDList?: [str]

    remoteAccess?: InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecRemoteAccess

    roleAdditionalPolicies?: [str]

    roleName?: str

    scaling?: InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecScaling

    subnetIDs?: [str]

    taints?: [InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecTaintsItems0]

    updateConfig?: InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecUpdateConfig


    check:
        len(amiVersion) >= 2 if amiVersion


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplate:
    r"""
    AWSLaunchTemplate specifies the launch template to use to create the managed node group.
    If AWSLaunchTemplate is specified, certain node group configuraions outside of launch template
    are prohibited (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).

    Attributes
    ----------
    additionalSecurityGroups : [InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0], default is Undefined, optional
        AdditionalSecurityGroups is an array of references to security groups that should be applied to the
        instances. These security groups would be set in addition to any security groups defined
        at the cluster level or in the actuator.
    ami : InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateAmi, default is Undefined, optional
        ami
    iamInstanceProfile : str, default is Undefined, optional
        The name or the Amazon Resource Name (ARN) of the instance profile associated
        with the IAM role for the instance. The instance profile contains the IAM
        role.
    imageLookupBaseOS : str, default is Undefined, optional
        ImageLookupBaseOS is the name of the base operating system to use for
        image lookup the AMI is not set.
    imageLookupFormat : str, default is Undefined, optional
        ImageLookupFormat is the AMI naming format to look up the image for this
        machine It will be ignored if an explicit AMI is set. Supports
        substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
        kubernetes version, respectively. The BaseOS will be the value in
        ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
        defined by the packages produced by kubernetes/release without v as a
        prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
        image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
        searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
        Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
        also: https://golang.org/pkg/text/template/
    imageLookupOrg : str, default is Undefined, optional
        ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
    instanceType : str, default is Undefined, optional
        InstanceType is the type of instance to create. Example: m4.xlarge
    name : str, default is Undefined, optional
        The name of the launch template.
    rootVolume : InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateRootVolume, default is Undefined, optional
        root volume
    spotMarketOptions : InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateSpotMarketOptions, default is Undefined, optional
        spot market options
    sshKeyName : str, default is Undefined, optional
        SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string
        (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
    versionNumber : int, default is Undefined, optional
        VersionNumber is the version of the launch template that is applied.
        Typically a new version is created when at least one of the following happens:
        1) A new launch template spec is applied.
        2) One or more parameters in an existing template is changed.
        3) A new AMI is discovered.
    """


    additionalSecurityGroups?: [InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0]

    ami?: InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateAmi

    iamInstanceProfile?: str

    imageLookupBaseOS?: str

    imageLookupFormat?: str

    imageLookupOrg?: str

    instanceType?: str

    name?: str

    rootVolume?: InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateRootVolume

    spotMarketOptions?: InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateSpotMarketOptions

    sshKeyName?: str

    versionNumber?: int


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0:
    r"""
    AWSResourceReference is a reference to a specific AWS resource by ID or filters.
    Only one of ID or Filters may be specified. Specifying more than one will result in
    a validation error.

    Attributes
    ----------
    filters : [InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0FiltersItems0], default is Undefined, optional
        Filters is a set of key/value pairs used to identify a resource
        They are applied according to the rules defined by the AWS API:
        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
    id : str, default is Undefined, optional
        ID of resource
    """


    filters?: [InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0FiltersItems0]

    id?: str


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0FiltersItems0:
    r"""
    Filter is a filter used to identify an AWS resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the filter. Filter names are case-sensitive.
    values : [str], default is Undefined, required
        Values includes one or more filter values. Filter values are case-sensitive.
    """


    name: str

    values: [str]


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateAmi:
    r"""
    AMI is the reference to the AMI from which to create the machine instance.

    Attributes
    ----------
    eksLookupType : str, default is Undefined, optional
        EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store
    id : str, default is Undefined, optional
        ID of resource
    """


    eksLookupType?: "AmazonLinux" | "AmazonLinuxGPU" | "AmazonLinux2023" | "AmazonLinux2023GPU"

    id?: str


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateRootVolume:
    r"""
    RootVolume encapsulates the configuration options for the root volume

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Device name
    encrypted : bool, default is Undefined, optional
        Encrypted is whether the volume should be encrypted or not.
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
        If Encrypted is set and this is omitted, the default AWS key will be used.
        The key must already exist and be accessible by the controller.
    iops : int, default is Undefined, optional
        IOPS is the number of IOPS requested for the disk. Not applicable to all types.
    size : int, default is Undefined, required
        Size specifies size (in Gi) of the storage device.
        Must be greater than the image snapshot size or 8 (whichever is greater).
    throughput : int, default is Undefined, optional
        Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
    $type : str, default is Undefined, optional
        Type is the type of the volume (e.g. gp2, io1, etc...).
    """


    deviceName?: str

    encrypted?: bool

    encryptionKey?: str

    iops?: int

    size: int

    throughput?: int

    $type?: str


    check:
        size >= 8


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecAwsLaunchTemplateSpotMarketOptions:
    r"""
    SpotMarketOptions are options for configuring AWSMachinePool instances to be run using AWS Spot instances.

    Attributes
    ----------
    maxPrice : str, default is Undefined, optional
        MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
    """


    maxPrice?: str


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecRemoteAccess:
    r"""
    RemoteAccess specifies how machines can be accessed remotely

    Attributes
    ----------
    public : bool, default is Undefined, optional
        Public specifies whether to open port 22 to the public internet
    sourceSecurityGroups : [str], default is Undefined, optional
        SourceSecurityGroups specifies which security groups are allowed access
    sshKeyName : str, default is Undefined, optional
        SSHKeyName specifies which EC2 SSH key can be used to access machines.
        If left empty, the key from the control plane is used.
    """


    public?: bool

    sourceSecurityGroups?: [str]

    sshKeyName?: str


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecScaling:
    r"""
    Scaling specifies scaling for the ASG behind this pool

    Attributes
    ----------
    maxSize : int, default is Undefined, optional
        max size
    minSize : int, default is Undefined, optional
        min size
    """


    maxSize?: int

    minSize?: int


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecTaintsItems0:
    r"""
    Taint defines the specs for a Kubernetes taint.

    Attributes
    ----------
    effect : str, default is Undefined, required
        Effect specifies the effect for the taint
    key : str, default is Undefined, required
        Key is the key of the taint
    value : str, default is Undefined, required
        Value is the value of the taint
    """


    effect: "no-schedule" | "no-execute" | "prefer-no-schedule"

    key: str

    value: str


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolSpecUpdateConfig:
    r"""
    UpdateConfig holds the optional config to control the behaviour of the update
    to the nodegroup.

    Attributes
    ----------
    maxUnavailable : int, default is Undefined, optional
        MaxUnavailable is the maximum number of nodes unavailable at once during a version update.
        Nodes will be updated in parallel. The maximum number is 100.
    maxUnavailablePrecentage : int, default is Undefined, optional
        MaxUnavailablePercentage is the maximum percentage of nodes unavailable during a version update. This
        percentage of nodes will be updated in parallel, up to 100 nodes at once.
    """


    maxUnavailable?: int

    maxUnavailablePrecentage?: int


    check:
        maxUnavailable <= 100 if maxUnavailable not in [None, Undefined]
        maxUnavailable >= 1 if maxUnavailable not in [None, Undefined]
        maxUnavailablePrecentage <= 100 if maxUnavailablePrecentage not in [None, Undefined]
        maxUnavailablePrecentage >= 1 if maxUnavailablePrecentage not in [None, Undefined]


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolStatus:
    r"""
    AWSManagedMachinePoolStatus defines the observed state of AWSManagedMachinePool.

    Attributes
    ----------
    conditions : [InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the managed machine pool
    failureMessage : str, default is Undefined, optional
        FailureMessage will be set in the event that there is a terminal problem
        reconciling the MachinePool and will contain a more verbose string suitable
        for logging and human consumption.

        This field should not be set for transitive errors that a controller
        faces that are expected to be fixed automatically over
        time (like service outages), but instead indicate that something is
        fundamentally wrong with the MachinePool's spec or the configuration of
        the controller, and that manual intervention is required. Examples
        of terminal errors would be invalid combinations of settings in the
        spec, values that are unsupported by the controller, or the
        responsible controller itself being critically misconfigured.

        Any transient errors that occur during the reconciliation of MachinePools
        can be added as events to the MachinePool object and/or logged in the
        controller's output.
    failureReason : str, default is Undefined, optional
        FailureReason will be set in the event that there is a terminal problem
        reconciling the MachinePool and will contain a succinct value suitable
        for machine interpretation.

        This field should not be set for transitive errors that a controller
        faces that are expected to be fixed automatically over
        time (like service outages), but instead indicate that something is
        fundamentally wrong with the Machine's spec or the configuration of
        the controller, and that manual intervention is required. Examples
        of terminal errors would be invalid combinations of settings in the
        spec, values that are unsupported by the controller, or the
        responsible controller itself being critically misconfigured.

        Any transient errors that occur during the reconciliation of MachinePools
        can be added as events to the MachinePool object and/or logged in the
        controller's output.
    launchTemplateID : str, default is Undefined, optional
        The ID of the launch template
    launchTemplateVersion : str, default is Undefined, optional
        The version of the launch template
    ready : bool, default is Undefined, required
        Ready denotes that the AWSManagedMachinePool nodegroup has joined
        the cluster
    replicas : int, default is Undefined, optional
        Replicas is the most recently observed number of replicas.
    """


    conditions?: [InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolStatusConditionsItems0]

    failureMessage?: str

    failureReason?: str

    launchTemplateID?: str

    launchTemplateVersion?: str

    ready: bool = False

    replicas?: int


schema InfrastructureClusterxK8sIoV1beta1AWSManagedMachinePoolStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


