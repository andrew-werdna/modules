"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AWSMachinePool:
    r"""
    AWSMachinePool is the Schema for the awsmachinepools API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AWSMachinePool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1AWSMachinePoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "AWSMachinePool" = "AWSMachinePool"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpec

    status?: InfrastructureClusterxK8sIoV1beta1AWSMachinePoolStatus


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpec:
    r"""
    AWSMachinePoolSpec defines the desired state of AWSMachinePool.

    Attributes
    ----------
    additionalTags : {str:str}, default is Undefined, optional
        AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
        AWS provider.
    availabilityZones : [str], default is Undefined, optional
        AvailabilityZones is an array of availability zones instances can run in
    awsLaunchTemplate : InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplate, default is Undefined, required
        aws launch template
    capacityRebalance : bool, default is Undefined, optional
        Enable or disable the capacity rebalance autoscaling group feature
    defaultCoolDown : str, default is Undefined, optional
        The amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
        If no value is supplied by user a default value of 300 seconds is set
    maxSize : int, default is 1, required
        MaxSize defines the maximum size of the group.
    minSize : int, default is 1, required
        MinSize defines the minimum size of the group.
    mixedInstancesPolicy : InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecMixedInstancesPolicy, default is Undefined, optional
        mixed instances policy
    providerID : str, default is Undefined, optional
        ProviderID is the ARN of the associated ASG
    providerIDList : [str], default is Undefined, optional
        ProviderIDList are the identification IDs of machine instances provided by the provider.
        This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
    refreshPreferences : InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecRefreshPreferences, default is Undefined, optional
        refresh preferences
    subnets : [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecSubnetsItems0], default is Undefined, optional
        Subnets is an array of subnet configurations
    """


    additionalTags?: {str:str}

    availabilityZones?: [str]

    awsLaunchTemplate: InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplate

    capacityRebalance?: bool

    defaultCoolDown?: str

    maxSize: int = 1

    minSize: int = 1

    mixedInstancesPolicy?: InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecMixedInstancesPolicy

    providerID?: str

    providerIDList?: [str]

    refreshPreferences?: InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecRefreshPreferences

    subnets?: [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecSubnetsItems0]


    check:
        maxSize >= 1
        minSize >= 0


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplate:
    r"""
    AWSLaunchTemplate specifies the launch template and version to use when an instance is launched.

    Attributes
    ----------
    additionalSecurityGroups : [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0], default is Undefined, optional
        AdditionalSecurityGroups is an array of references to security groups that should be applied to the
        instances. These security groups would be set in addition to any security groups defined
        at the cluster level or in the actuator.
    ami : InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateAmi, default is Undefined, optional
        ami
    iamInstanceProfile : str, default is Undefined, optional
        The name or the Amazon Resource Name (ARN) of the instance profile associated
        with the IAM role for the instance. The instance profile contains the IAM
        role.
    imageLookupBaseOS : str, default is Undefined, optional
        ImageLookupBaseOS is the name of the base operating system to use for
        image lookup the AMI is not set.
    imageLookupFormat : str, default is Undefined, optional
        ImageLookupFormat is the AMI naming format to look up the image for this
        machine It will be ignored if an explicit AMI is set. Supports
        substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
        kubernetes version, respectively. The BaseOS will be the value in
        ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
        defined by the packages produced by kubernetes/release without v as a
        prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
        image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
        searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
        Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
        also: https://golang.org/pkg/text/template/
    imageLookupOrg : str, default is Undefined, optional
        ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
    instanceType : str, default is Undefined, optional
        InstanceType is the type of instance to create. Example: m4.xlarge
    name : str, default is Undefined, optional
        The name of the launch template.
    rootVolume : InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateRootVolume, default is Undefined, optional
        root volume
    spotMarketOptions : InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateSpotMarketOptions, default is Undefined, optional
        spot market options
    sshKeyName : str, default is Undefined, optional
        SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string
        (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
    versionNumber : int, default is Undefined, optional
        VersionNumber is the version of the launch template that is applied.
        Typically a new version is created when at least one of the following happens:
        1) A new launch template spec is applied.
        2) One or more parameters in an existing template is changed.
        3) A new AMI is discovered.
    """


    additionalSecurityGroups?: [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0]

    ami?: InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateAmi

    iamInstanceProfile?: str

    imageLookupBaseOS?: str

    imageLookupFormat?: str

    imageLookupOrg?: str

    instanceType?: str

    name?: str

    rootVolume?: InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateRootVolume

    spotMarketOptions?: InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateSpotMarketOptions

    sshKeyName?: str

    versionNumber?: int


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0:
    r"""
    AWSResourceReference is a reference to a specific AWS resource by ID or filters.
    Only one of ID or Filters may be specified. Specifying more than one will result in
    a validation error.

    Attributes
    ----------
    filters : [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0FiltersItems0], default is Undefined, optional
        Filters is a set of key/value pairs used to identify a resource
        They are applied according to the rules defined by the AWS API:
        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
    id : str, default is Undefined, optional
        ID of resource
    """


    filters?: [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0FiltersItems0]

    id?: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateAdditionalSecurityGroupsItems0FiltersItems0:
    r"""
    Filter is a filter used to identify an AWS resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the filter. Filter names are case-sensitive.
    values : [str], default is Undefined, required
        Values includes one or more filter values. Filter values are case-sensitive.
    """


    name: str

    values: [str]


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateAmi:
    r"""
    AMI is the reference to the AMI from which to create the machine instance.

    Attributes
    ----------
    eksLookupType : str, default is Undefined, optional
        EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store
    id : str, default is Undefined, optional
        ID of resource
    """


    eksLookupType?: "AmazonLinux" | "AmazonLinuxGPU" | "AmazonLinux2023" | "AmazonLinux2023GPU"

    id?: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateRootVolume:
    r"""
    RootVolume encapsulates the configuration options for the root volume

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Device name
    encrypted : bool, default is Undefined, optional
        Encrypted is whether the volume should be encrypted or not.
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
        If Encrypted is set and this is omitted, the default AWS key will be used.
        The key must already exist and be accessible by the controller.
    iops : int, default is Undefined, optional
        IOPS is the number of IOPS requested for the disk. Not applicable to all types.
    size : int, default is Undefined, required
        Size specifies size (in Gi) of the storage device.
        Must be greater than the image snapshot size or 8 (whichever is greater).
    throughput : int, default is Undefined, optional
        Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
    $type : str, default is Undefined, optional
        Type is the type of the volume (e.g. gp2, io1, etc...).
    """


    deviceName?: str

    encrypted?: bool

    encryptionKey?: str

    iops?: int

    size: int

    throughput?: int

    $type?: str


    check:
        size >= 8


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecAwsLaunchTemplateSpotMarketOptions:
    r"""
    SpotMarketOptions are options for configuring AWSMachinePool instances to be run using AWS Spot instances.

    Attributes
    ----------
    maxPrice : str, default is Undefined, optional
        MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
    """


    maxPrice?: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecMixedInstancesPolicy:
    r"""
    MixedInstancesPolicy describes how multiple instance types will be used by the ASG.

    Attributes
    ----------
    instancesDistribution : InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecMixedInstancesPolicyInstancesDistribution, default is Undefined, optional
        instances distribution
    overrides : [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecMixedInstancesPolicyOverridesItems0], default is Undefined, optional
        overrides
    """


    instancesDistribution?: InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecMixedInstancesPolicyInstancesDistribution

    overrides?: [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecMixedInstancesPolicyOverridesItems0]


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecMixedInstancesPolicyInstancesDistribution:
    r"""
    InstancesDistribution to configure distribution of On-Demand Instances and Spot Instances.

    Attributes
    ----------
    onDemandAllocationStrategy : str, default is "prioritized", optional
        OnDemandAllocationStrategy indicates how to allocate instance types to fulfill On-Demand capacity.
    onDemandBaseCapacity : int, default is Undefined, optional
        on demand base capacity
    onDemandPercentageAboveBaseCapacity : int, default is 100, optional
        on demand percentage above base capacity
    spotAllocationStrategy : str, default is "lowest-price", optional
        SpotAllocationStrategy indicates how to allocate instances across Spot Instance pools.
    """


    onDemandAllocationStrategy?: "prioritized" = "prioritized"

    onDemandBaseCapacity?: int = 0

    onDemandPercentageAboveBaseCapacity?: int = 100

    spotAllocationStrategy?: "lowest-price" | "capacity-optimized" = "lowest-price"


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecMixedInstancesPolicyOverridesItems0:
    r"""
    Overrides are used to override the instance type specified by the launch template with multiple
    instance types that can be used to launch On-Demand Instances and Spot Instances.

    Attributes
    ----------
    instanceType : str, default is Undefined, required
        instance type
    """


    instanceType: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecRefreshPreferences:
    r"""
    RefreshPreferences describes set of preferences associated with the instance refresh request.

    Attributes
    ----------
    instanceWarmup : int, default is Undefined, optional
        The number of seconds until a newly launched instance is configured and ready
        to use. During this time, the next replacement will not be initiated.
        The default is to use the value for the health check grace period defined for the group.
    minHealthyPercentage : int, default is Undefined, optional
        The amount of capacity as a percentage in ASG that must remain healthy
        during an instance refresh. The default is 90.
    strategy : str, default is Undefined, optional
        The strategy to use for the instance refresh. The only valid value is Rolling.
        A rolling update is an update that is applied to all instances in an Auto
        Scaling group until all instances have been updated.
    """


    instanceWarmup?: int

    minHealthyPercentage?: int

    strategy?: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecSubnetsItems0:
    r"""
    AWSResourceReference is a reference to a specific AWS resource by ID or filters.
    Only one of ID or Filters may be specified. Specifying more than one will result in
    a validation error.

    Attributes
    ----------
    filters : [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecSubnetsItems0FiltersItems0], default is Undefined, optional
        Filters is a set of key/value pairs used to identify a resource
        They are applied according to the rules defined by the AWS API:
        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
    id : str, default is Undefined, optional
        ID of resource
    """


    filters?: [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecSubnetsItems0FiltersItems0]

    id?: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolSpecSubnetsItems0FiltersItems0:
    r"""
    Filter is a filter used to identify an AWS resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the filter. Filter names are case-sensitive.
    values : [str], default is Undefined, required
        Values includes one or more filter values. Filter values are case-sensitive.
    """


    name: str

    values: [str]


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolStatus:
    r"""
    AWSMachinePoolStatus defines the observed state of AWSMachinePool.

    Attributes
    ----------
    asgStatus : str, default is Undefined, optional
        ASGStatus is a status string returned by the autoscaling API.
    conditions : [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the AWSMachinePool.
    failureMessage : str, default is Undefined, optional
        FailureMessage will be set in the event that there is a terminal problem
        reconciling the Machine and will contain a more verbose string suitable
        for logging and human consumption.

        This field should not be set for transitive errors that a controller
        faces that are expected to be fixed automatically over
        time (like service outages), but instead indicate that something is
        fundamentally wrong with the Machine's spec or the configuration of
        the controller, and that manual intervention is required. Examples
        of terminal errors would be invalid combinations of settings in the
        spec, values that are unsupported by the controller, or the
        responsible controller itself being critically misconfigured.

        Any transient errors that occur during the reconciliation of Machines
        can be added as events to the Machine object and/or logged in the
        controller's output.
    failureReason : str, default is Undefined, optional
        FailureReason will be set in the event that there is a terminal problem
        reconciling the Machine and will contain a succinct value suitable
        for machine interpretation.

        This field should not be set for transitive errors that a controller
        faces that are expected to be fixed automatically over
        time (like service outages), but instead indicate that something is
        fundamentally wrong with the Machine's spec or the configuration of
        the controller, and that manual intervention is required. Examples
        of terminal errors would be invalid combinations of settings in the
        spec, values that are unsupported by the controller, or the
        responsible controller itself being critically misconfigured.

        Any transient errors that occur during the reconciliation of Machines
        can be added as events to the Machine object and/or logged in the
        controller's output.
    instances : [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolStatusInstancesItems0], default is Undefined, optional
        Instances contains the status for each instance in the pool
    launchTemplateID : str, default is Undefined, optional
        The ID of the launch template
    launchTemplateVersion : str, default is Undefined, optional
        The version of the launch template
    ready : bool, default is Undefined, optional
        Ready is true when the provider resource is ready.
    replicas : int, default is Undefined, optional
        Replicas is the most recently observed number of replicas
    """


    asgStatus?: str

    conditions?: [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolStatusConditionsItems0]

    failureMessage?: str

    failureReason?: str

    instances?: [InfrastructureClusterxK8sIoV1beta1AWSMachinePoolStatusInstancesItems0]

    launchTemplateID?: str

    launchTemplateVersion?: str

    ready?: bool

    replicas?: int


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may be empty.
    severity : str, default is Undefined, optional
        severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta1AWSMachinePoolStatusInstancesItems0:
    r"""
    AWSMachinePoolInstanceStatus defines the status of the AWSMachinePoolInstance.

    Attributes
    ----------
    instanceID : str, default is Undefined, optional
        InstanceID is the identification of the Machine Instance within ASG
    version : str, default is Undefined, optional
        Version defines the Kubernetes version for the Machine Instance
    """


    instanceID?: str

    version?: str


