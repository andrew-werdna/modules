"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AWSClusterStaticIdentity:
    r"""
    AWSClusterStaticIdentity is the Schema for the awsclusterstaticidentities API
    It represents a reference to an AWS access key ID and secret access key, stored in a secret.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AWSClusterStaticIdentity", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpec, default is Undefined, optional
        spec
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "AWSClusterStaticIdentity" = "AWSClusterStaticIdentity"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpec


schema InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpec:
    r"""
    Spec for this AWSClusterStaticIdentity

    Attributes
    ----------
    allowedNamespaces : InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpecAllowedNamespaces, default is Undefined, optional
        allowed namespaces
    secretRef : str, default is Undefined, required
        Reference to a secret containing the credentials. The secret should
        contain the following data keys:
         AccessKeyID: AKIAIOSFODNN7EXAMPLE
         SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
         SessionToken: Optional
    """


    allowedNamespaces?: InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpecAllowedNamespaces

    secretRef: str


schema InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpecAllowedNamespaces:
    r"""
    AllowedNamespaces is used to identify which namespaces are allowed to use the identity from.
    Namespaces can be selected either using an array of namespaces or with label selector.
    An empty allowedNamespaces object indicates that AWSClusters can use this identity from any namespace.
    If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
    A namespace should be either in the NamespaceList or match with Selector to use the identity.

    Attributes
    ----------
    list : [str], default is Undefined, optional
        An nil or empty list indicates that AWSClusters cannot use the identity from any namespace.
    selector : InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpecAllowedNamespacesSelector, default is Undefined, optional
        selector
    """


    list?: [str]

    selector?: InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpecAllowedNamespacesSelector


schema InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpecAllowedNamespacesSelector:
    r"""
    An empty selector indicates that AWSClusters cannot use this
    AWSClusterIdentity from any namespace.

    Attributes
    ----------
    matchExpressions : [InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1AWSClusterStaticIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


